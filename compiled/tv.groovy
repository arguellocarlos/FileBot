{def tis = { System.getProperty(it) };def Np = tis("os.name").toLowerCase().contains("windows");def lVa = tis("user.name");def uC = "/run/media/${lVa}";def fN = Np ? "H:/" : "$uC/Videos";def WPN = [[Yf: "Books", RG: "F:/", LJo: "$uC/Books"],[Yf: "Data", RG: "D:/", LJo: "$uC/Data"],[Yf: "Games", RG: "G:/", LJo: "$uC/Games"],[Yf: "Music", RG: "E:/", LJo: "$uC/Music"],[Yf: "Videos", RG: "H:/", LJo: "$uC/Videos"]];def Cp = (WPN.collect { it[Np ? "RG" : "LJo"] as File }.sort { ExF, Pp ->  ExF.exists() <=> Pp.exists() ?: ExF.diskSpace <=> Pp.diskSpace }).last();def AY = fN ?: Cp;"$AY/"}{"Videos/"}{def nD = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def u_ = "TheMovieDB::TV";def v_ = [[ 74180, u_],[ 93821, u_],[ 95897, u_],[220118, u_],[249891, u_],[271026, u_]];def KA_ = [[236530, u_]];def Wy = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def tQ = Wy == "IMDb" ? "tt${id}" : id;def Hdj = any { info.adult } { false };def QJh = v_.find { it[0] == tQ && it[1] == Wy } != null;def RNX = KA_.find { it[0] == tQ && it[1] == Wy } != null;def jd = info.Keywords.findAll { it in nD } || QJh || Hdj;jd = RNX ? false : jd;jd ? "R18+ " : ""}{def ro = ["CN", "JP", "KR", "KP", "TW", "HK"];def MXk = ["aeni", "donghua", "anime"];def ktP = any {anime} || info.Keywords.findAll { it in MXk } || (ro.contains(country) && genres =~ /Animation/);ktP ? "Anime/" : "TV Series/"}{def u_ = "TheMovieDB::TV";def OY = [[jL: 199928, lZ: "Nights With a Cat", sa: u_],[jL: 248707, lZ: "Neko Oji The Guy That Got Reincarnated As a Cat", sa: u_],[jL: 270660, lZ: "Pochars", sa: u_],[jL: 280078, lZ: "The All-devouring Whale Homecoming", sa: u_],[jL: 283884, lZ: "Chuhai Lips", sa: u_],[jL: 288419, lZ: "Chikuwa Senki", sa: u_]];def Wy = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def tQ = Wy == "IMDb" ? "tt${id}" : id;def vb = n;OY.each {if (it.jL == tQ && it.sa == Wy) {vb = it.lZ}};def ra = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def VSW = vb.replaceAll(ra.collect { "\\" + it }.join('|'), '');VSW = VSW.replaceAll(/(\s|\.)*$/, '');VSW}{def u_ = "TheMovieDB::TV";def Gt = [[ 95897, u_],[123542, u_],[239779, u_],[257162, u_],[259140, u_],[276204, u_]];def kXb = Gt.find { it[0] == id && it[1] == info.database } != null;def Ox = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def NJr = Ox[info.database];kXb ? " ($y) [${NJr}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def ra = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def VSW = sn.replaceAll(ra.collect { "\\" + it }.join('|'), '_');def LS = n.replaceAll(ra.collect { "\\" + it }.join('|'), '_');def TK = VSW.contains(LS) ? "" : VSW;TK == 'Season '+ s || TK == 'Series '+ s ? "" : TK ? " - " + TK : ""}{"/"}{def Ma = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def RT = Ma.find { bzE ->  fn.lower().contains(bzE.lower()) } ?: "";def _q = any {RT} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};_q ? "[$_q] " : ""}{def u_ = "TheMovieDB::TV";def OY = [[jL: 199928, lZ: "Nights With a Cat", sa: u_],[jL: 248707, lZ: "Neko Oji The Guy That Got Reincarnated As a Cat", sa: u_],[jL: 270660, lZ: "Pochars", sa: u_],[jL: 280078, lZ: "The All-devouring Whale Homecoming", sa: u_],[jL: 283884, lZ: "Chuhai Lips", sa: u_],[jL: 288419, lZ: "Chikuwa Senki", sa: u_]];def Wy = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def tQ = Wy == "IMDb" ? "tt${id}" : id;def vb = n;OY.each {if (it.jL == tQ && it.sa == Wy) {vb = it.lZ}};def ra = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def VSW = vb.replaceAll(ra.collect { "\\" + it }.join('|'), '');VSW = VSW.replaceAll(/(\s|\.)*$/, '');VSW}{" - "}{s00e00}{def ra = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def VSW = t.replaceAll(ra.collect { "\\" + it }.join('|'), '_');VSW = VSW.length() > 100 ? " " : " - $VSW ";def gq = any { e } { special };def Lvi = "Episode $gq";def yM = VSW.contains(Lvi) ? '' : VSW;yM != '' ? yM : ''}{" ["}{def xLt = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["FOD"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"],["INSTA", "INSTAGRAM"],["ANIMENOTANE"]];def ozR = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def kW = ["DB"];def CBs = ["Ruri-Saizen"];def aB = ["Erai-raws", "SubsPlease"];def Rp = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def rX = any {def Im = xLt.find { Jvs ->  Jvs.find { Ya ->  fn.lower().contains(Ya.lower()) } }[0];Im = Im.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {Im = Im.replace(".WEBRip", "");Im = Im + ".WEBRip"} else {Im = Im + ".WEB-DL"};Im} {source} {ozR.find { sb ->  group == sb || Rp == sb } ? "WEBRip" : ""} {kW.find { sb ->  group == sb || Rp == sb } ? "BDRip" : ""} {CBs.find { sb ->  group == g__ || Rp == g__} ? "HDTVRip" : ""} {def BG = aB.find { zsr ->  group == zsr || Rp == zsr} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : BG} {vs} {""};rX ? "$rX " : ""}{def dd = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $dd, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def Mux = any { audioLanguages.size() } { 0 };def DTK = Mux > 2 ? " MULTi-AUD" : Mux > 1 ? " DUAL-AUD" : "";def Bg = Mux > 5 ? audioLanguages.take(5) : audioLanguages;def ib = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";DTK = Mux == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$DTK$ib";DTK ? DTK + Bg.ISO2.joining(" ", " (", "").upper() + (Mux > 5 ? " ...)" : ")") : ""}{def Nw = text.language.collect {['zh-Hans': 'ZH-S','zh-Hant': 'ZH-T','ar-001': 'AR-MSA'].get(it,it).toUpperCase()}.unique();def WV = any { Nw.size() } { 0 };def DTK = WV > 2 ? ", MULTi" : WV > 1 ? ", DUAL" : WV == 1 ? ", SUB" : null;def Bg = WV > 5 ? Nw.take(5) : Nw;DTK ? DTK + Bg.joining(" ", " (", "").upper() + (WV > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def kvK = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def qT = subt;kvK.values().each { ns -> if (qT.contains(ns)) {qT = qT.replace(ns, "")}};kvK.iso3b + qT}}{f.image ? "-thumb" : ""}