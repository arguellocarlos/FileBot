{def NQ = { System.getProperty(it) };def kCt = NQ("os.name").toLowerCase().contains("windows");def pA = NQ("user.name");def LVg = "/run/media/${pA}";def NQN = kCt ? "H:/" : "$LVg/Videos";def oQ = [[nH: "Books", Ep: "F:/", _LI: "$LVg/Books"],[nH: "Data", Ep: "D:/", _LI: "$LVg/Data"],[nH: "Games", Ep: "G:/", _LI: "$LVg/Games"],[nH: "Music", Ep: "E:/", _LI: "$LVg/Music"],[nH: "Videos", Ep: "H:/", _LI: "$LVg/Videos"]];def nni = (oQ.collect { it[kCt ? "Ep" : "_LI"] as File }.sort { Nn, MXe ->  Nn.exists() <=> MXe.exists() ?: Nn.diskSpace <=> MXe.diskSpace }).last();def ZnP = NQN ?: nni;"$ZnP/"}{"Videos/"}{def te = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def gqS = "TheMovieDB::TV";def PW = [[ 74180, gqS],[ 93821, gqS],[ 95897, gqS],[220118, gqS],[249891, gqS],[271026, gqS]];def sD = [[236530, gqS]];def vTz = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def vp = vTz == "IMDb" ? "tt${id}" : id;def ax = any { info.adult } { false };def LUB = PW.find { it[0] == vp && it[1] == vTz } != null;def Kik = sD.find { it[0] == vp && it[1] == vTz } != null;def bE = info.Keywords.findAll { it in te } || LUB || ax;bE = Kik ? false : bE;bE ? "R18+ " : ""}{def bWP = ["CN", "JP", "KR", "KP", "TW", "HK"];def Wx = ["aeni", "donghua", "anime"];def cIG = any {anime} || info.Keywords.findAll { it in Wx } || (bWP.contains(country) && genres =~ /Animation/);cIG ? "Anime/" : "TV Series/"}{def gqS = "TheMovieDB::TV";def IlO = [[jmn: 199928, Gp: "Nights With a Cat", R_u: gqS],[jmn: 219816, Gp: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", R_u: gqS],[jmn: 248707, Gp: "Neko Oji The Guy That Got Reincarnated As a Cat", R_u: gqS],[jmn: 271003, Gp: "Yandere Dark Elf", R_u: gqS],[jmn: 274741, Gp: "The Too-Perfect Saint", R_u: gqS],[jmn: 275623, Gp: "Chuzenji-sensei", R_u: gqS],[jmn: 281623, Gp: "SHIROHIYO", R_u: gqS],[jmn: 288419, Gp: "Chikuwa Senki", R_u: gqS]];def vTz = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def vp = vTz == "IMDb" ? "tt${id}" : id;def oj = n;IlO.each {if (it.jmn == vp && it.R_u == vTz) {oj = it.Gp}};def prx = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def ggi = oj.replaceAll(prx.collect { "\\" + it }.join('|'), '');ggi = ggi.replaceAll(/(\s|\.)*$/, '');ggi}{def gqS = "TheMovieDB::TV";def D_ = [[ 95897, gqS],[123542, gqS],[235973, gqS],[239779, gqS],[257162, gqS],[259140, gqS],[276204, gqS]];def rkk = D_.find { it[0] == id && it[1] == info.database } != null;def iW = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def wGP = iW[info.database];rkk ? " ($y) [${wGP}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def prx = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def ggi = sn.replaceAll(prx.collect { "\\" + it }.join('|'), '_');def cUQ = n.replaceAll(prx.collect { "\\" + it }.join('|'), '_');def PFw = ggi.contains(cUQ) ? "" : ggi;PFw == 'Season '+ s || PFw == 'Series '+ s ? "" : PFw ? " - " + PFw : ""}{"/"}{def PcJ = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def nPI = PcJ.find { ey ->  fn.lower().contains(ey.lower()) } ?: "";def uc = any {nPI} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};uc ? "[$uc] " : ""}{def gqS = "TheMovieDB::TV";def IlO = [[jmn: 199928, Gp: "Nights With a Cat", R_u: gqS],[jmn: 219816, Gp: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", R_u: gqS],[jmn: 248707, Gp: "Neko Oji The Guy That Got Reincarnated As a Cat", R_u: gqS],[jmn: 271003, Gp: "Yandere Dark Elf", R_u: gqS],[jmn: 274741, Gp: "The Too-Perfect Saint", R_u: gqS],[jmn: 275623, Gp: "Chuzenji-sensei", R_u: gqS],[jmn: 281623, Gp: "SHIROHIYO", R_u: gqS],[jmn: 288419, Gp: "Chikuwa Senki", R_u: gqS]];def vTz = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def vp = vTz == "IMDb" ? "tt${id}" : id;def oj = n;IlO.each {if (it.jmn == vp && it.R_u == vTz) {oj = it.Gp}};def prx = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def ggi = oj.replaceAll(prx.collect { "\\" + it }.join('|'), '');ggi = ggi.replaceAll(/(\s|\.)*$/, '');ggi}{" - "}{s00e00}{def prx = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def ggi = t.replaceAll(prx.collect { "\\" + it }.join('|'), '_');ggi = ggi.length() > 100 ? " " : " - $ggi ";def TR = any { e } { special };def hKt = "Episode $TR";def kzB = ggi.contains(hKt) ? '' : ggi;kzB != '' ? kzB : ''}{" ["}{def SHx = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"],["INSTA", "INSTAGRAM"],["ANIMENOTANE"]];def Lr = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def UU_ = ["DB"];def bcJ = ["Ruri-Saizen"];def MSf = ["Erai-raws", "SubsPlease"];def hw = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def YH = any {def jUK = SHx.find { TlO ->  TlO.find { opI ->  fn.lower().contains(opI.lower()) } }[0];jUK = jUK.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {jUK = jUK.replace(".WEBRip", "");jUK = jUK + ".WEBRip"} else {jUK = jUK + ".WEB-DL"};jUK} {source} {Lr.find { ECT ->  group == ECT || hw == ECT } ? "WEBRip" : ""} {UU_.find { ECT ->  group == ECT || hw == ECT } ? "BDRip" : ""} {bcJ.find { ECT ->  group == g__ || hw == g__} ? "HDTVRip" : ""} {def Wz = MSf.find { yrN ->  group == yrN || hw == yrN} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : Wz} {vs} {""};YH ? "$YH " : ""}{def a_D = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $a_D, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def CUJ = any { audioLanguages.size() } { 0 };def _cn = CUJ > 2 ? " MULTi-AUD" : CUJ > 1 ? " DUAL-AUD" : "";def fBx = CUJ > 5 ? audioLanguages.take(5) : audioLanguages;def LTE = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";_cn = CUJ == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$_cn$LTE";_cn ? _cn + fBx.ISO2.joining(" ", " (", "").upper() + (CUJ > 5 ? " ...)" : ")") : ""}{def Yni = text.language.collect {['zh-Hans': 'ZH-S','zh-Hant': 'ZH-T'].get(it,it).toUpperCase()}.unique();def GA = any { Yni.size() } { 0 };def _cn = GA > 2 ? ", MULTi" : GA > 1 ? ", DUAL" : GA == 1 ? ", SUB" : null;def fBx = GA > 5 ? Yni.take(5) : Yni;_cn ? _cn + fBx.joining(" ", " (", "").upper() + (GA > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def KQo = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def hiR = subt;KQo.values().each { _Xr -> if (hiR.contains(_Xr)) {hiR = hiR.replace(_Xr, "")}};KQo.iso3b + hiR}}{f.image ? "-thumb" : ""}