{def fZU = { System.getProperty(it) };def JP = fZU("os.name").toLowerCase().contains("windows");def vo = fZU("user.name");def tj = "/run/media/${vo}";def fm = JP ? "H:/" : "$tj/Videos";def YEN = [[hG: "Books", CwS: "F:/", Uc: "$tj/Books"],[hG: "Data", CwS: "D:/", Uc: "$tj/Data"],[hG: "Games", CwS: "G:/", Uc: "$tj/Games"],[hG: "Music", CwS: "E:/", Uc: "$tj/Music"],[hG: "Videos", CwS: "H:/", Uc: "$tj/Videos"]];def mx = (YEN.collect { it[JP ? "CwS" : "Uc"] as File }.sort { DV, HD ->  DV.exists() <=> HD.exists() ?: DV.diskSpace <=> HD.diskSpace }).last();def QAN = fm ?: mx;"$QAN/"}{"Videos/"}{def akO = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def tn = "TheMovieDB::TV";def pVU = [[ 74180, tn],[ 93821, tn],[ 95897, tn],[220118, tn],[249891, tn],[271026, tn]];def me = [[236530, tn]];def sV = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def BD = sV == "IMDb" ? "tt${id}" : id;def Ke = any { info.adult } { false };def bU = pVU.find { it[0] == BD && it[1] == sV } != null;def lmh = me.find { it[0] == BD && it[1] == sV } != null;def kJ = info.Keywords.findAll { it in akO } || bU || Ke;kJ = lmh ? false : kJ;kJ ? "R18+ " : ""}{def vHs = ["CN", "JP", "KR", "KP", "TW", "HK"];def Vk = ["aeni", "donghua", "anime"];def _HQ = any {anime} || info.Keywords.findAll { it in Vk } || (vHs.contains(country) && genres =~ /Animation/);_HQ ? "Anime/" : "TV Series/"}{def tn = "TheMovieDB::TV";def Zz = [[qO: 199928, dW: "Nights With a Cat", IwV: tn],[qO: 219816, dW: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", IwV: tn],[qO: 248707, dW: "Neko Oji The Guy That Got Reincarnated As a Cat", IwV: tn],[qO: 270660, dW: "Pochars", IwV: tn],[qO: 271003, dW: "Yandere Dark Elf", IwV: tn],[qO: 274741, dW: "The Too-Perfect Saint", IwV: tn],[qO: 275623, dW: "Chuzenji-sensei", IwV: tn],[qO: 281623, dW: "SHIROHIYO", IwV: tn],[qO: 288419, dW: "Chikuwa Senki", IwV: tn]];def sV = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def BD = sV == "IMDb" ? "tt${id}" : id;def Jff = n;Zz.each {if (it.qO == BD && it.IwV == sV) {Jff = it.dW}};def Woy = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def sFx = Jff.replaceAll(Woy.collect { "\\" + it }.join('|'), '');sFx = sFx.replaceAll(/(\s|\.)*$/, '');sFx}{def tn = "TheMovieDB::TV";def vl = [[ 95897, tn],[123542, tn],[239779, tn],[257162, tn],[259140, tn],[276204, tn]];def Vks = vl.find { it[0] == id && it[1] == info.database } != null;def Qu = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def KS = Qu[info.database];Vks ? " ($y) [${KS}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def Woy = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def sFx = sn.replaceAll(Woy.collect { "\\" + it }.join('|'), '_');def IT = n.replaceAll(Woy.collect { "\\" + it }.join('|'), '_');def HIB = sFx.contains(IT) ? "" : sFx;HIB == 'Season '+ s || HIB == 'Series '+ s ? "" : HIB ? " - " + HIB : ""}{"/"}{def JfW = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def IlG = JfW.find { lr ->  fn.lower().contains(lr.lower()) } ?: "";def mJ = any {IlG} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};mJ ? "[$mJ] " : ""}{def tn = "TheMovieDB::TV";def Zz = [[qO: 199928, dW: "Nights With a Cat", IwV: tn],[qO: 219816, dW: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", IwV: tn],[qO: 248707, dW: "Neko Oji The Guy That Got Reincarnated As a Cat", IwV: tn],[qO: 270660, dW: "Pochars", IwV: tn],[qO: 271003, dW: "Yandere Dark Elf", IwV: tn],[qO: 274741, dW: "The Too-Perfect Saint", IwV: tn],[qO: 275623, dW: "Chuzenji-sensei", IwV: tn],[qO: 281623, dW: "SHIROHIYO", IwV: tn],[qO: 288419, dW: "Chikuwa Senki", IwV: tn]];def sV = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def BD = sV == "IMDb" ? "tt${id}" : id;def Jff = n;Zz.each {if (it.qO == BD && it.IwV == sV) {Jff = it.dW}};def Woy = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def sFx = Jff.replaceAll(Woy.collect { "\\" + it }.join('|'), '');sFx = sFx.replaceAll(/(\s|\.)*$/, '');sFx}{" - "}{s00e00}{def Woy = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def sFx = t.replaceAll(Woy.collect { "\\" + it }.join('|'), '_');sFx = sFx.length() > 100 ? " " : " - $sFx ";def lRd = any { e } { special };def zSx = "Episode $lRd";def lry = sFx.contains(zSx) ? '' : sFx;lry != '' ? lry : ''}{" ["}{def PKQ = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"],["INSTA", "INSTAGRAM"],["ANIMENOTANE"]];def Dm = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def lp = ["DB"];def _K = ["Ruri-Saizen"];def Dp_ = ["Erai-raws", "SubsPlease"];def xu = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def zKd = any {def XjB = PKQ.find { NLN ->  NLN.find { Phb ->  fn.lower().contains(Phb.lower()) } }[0];XjB = XjB.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {XjB = XjB.replace(".WEBRip", "");XjB = XjB + ".WEBRip"} else {XjB = XjB + ".WEB-DL"};XjB} {source} {Dm.find { Xk ->  group == Xk || xu == Xk } ? "WEBRip" : ""} {lp.find { Xk ->  group == Xk || xu == Xk } ? "BDRip" : ""} {_K.find { Xk ->  group == g__ || xu == g__} ? "HDTVRip" : ""} {def PU = Dp_.find { Wkb ->  group == Wkb || xu == Wkb} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : PU} {vs} {""};zKd ? "$zKd " : ""}{def tAV = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $tAV, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def md = any { audioLanguages.size() } { 0 };def fW = md > 2 ? " MULTi-AUD" : md > 1 ? " DUAL-AUD" : "";def nGy = md > 5 ? audioLanguages.take(5) : audioLanguages;def QhM = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";fW = md == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$fW$QhM";fW ? fW + nGy.ISO2.joining(" ", " (", "").upper() + (md > 5 ? " ...)" : ")") : ""}{def kaJ = text.language.collect {['zh-Hans': 'ZH-S','zh-Hant': 'ZH-T','ar-001': 'AR-MSA'].get(it,it).toUpperCase()}.unique();def vw = any { kaJ.size() } { 0 };def fW = vw > 2 ? ", MULTi" : vw > 1 ? ", DUAL" : vw == 1 ? ", SUB" : null;def nGy = vw > 5 ? kaJ.take(5) : kaJ;fW ? fW + nGy.joining(" ", " (", "").upper() + (vw > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def ZMH = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def cHC = subt;ZMH.values().each { hdq -> if (cHC.contains(hdq)) {cHC = cHC.replace(hdq, "")}};ZMH.iso3b + cHC}}{f.image ? "-thumb" : ""}