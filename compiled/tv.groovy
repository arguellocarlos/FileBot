{def rSf = { System.getProperty(it) };def xS = rSf("os.name").toLowerCase().contains("windows");def Fs = rSf("user.name");def x_j = "/run/media/${Fs}";def Ce = xS ? "H:/" : "$x_j/Videos";def gKM = [[Grk: "Books", Gsn: "F:/", lDi: "$x_j/Books"],[Grk: "Data", Gsn: "D:/", lDi: "$x_j/Data"],[Grk: "Games", Gsn: "G:/", lDi: "$x_j/Games"],[Grk: "Music", Gsn: "E:/", lDi: "$x_j/Music"],[Grk: "Videos", Gsn: "H:/", lDi: "$x_j/Videos"]];def Vx = (gKM.collect { it[xS ? "Gsn" : "lDi"] as File }.sort { md, lSx ->  md.exists() <=> lSx.exists() ?: md.diskSpace <=> lSx.diskSpace }).last();def Upv = Ce ?: Vx;"$Upv/"}{"Videos/"}{def gyW = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def pv = "TheMovieDB::TV";def BE = [[ 74180, pv],[ 93821, pv],[ 95897, pv],[220118, pv],[249891, pv],[271026, pv]];def aPQ = [[236530, pv]];def SV = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def utK = SV == "IMDb" ? "tt${id}" : id;def Gsx = any { info.adult } { false };def hLy = BE.find { it[0] == utK && it[1] == SV } != null;def WHK = aPQ.find { it[0] == utK && it[1] == SV } != null;def AU = info.Keywords.findAll { it in gyW } || hLy || Gsx;AU = WHK ? false : AU;AU ? "R18+ " : ""}{def zJ = ["CN", "JP", "KR", "KP", "TW", "HK"];def No = ["aeni", "donghua", "anime"];def UU = any {anime} || info.Keywords.findAll { it in No } || (zJ.contains(country) && genres =~ /Animation/);UU ? "Anime/" : "TV Series/"}{def pv = "TheMovieDB::TV";def fCc = [[TmX: 199928, zz: "Nights With a Cat", OEy: pv],[TmX: 219816, zz: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", OEy: pv],[TmX: 248707, zz: "Neko Oji The Guy That Got Reincarnated As a Cat", OEy: pv],[TmX: 270657, zz: "Tono to Inu", OEy: pv],[TmX: 274741, zz: "The Too-Perfect Saint", OEy: pv]];def SV = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def utK = SV == "IMDb" ? "tt${id}" : id;def DE = n;fCc.each {if (it.TmX == utK && it.OEy == SV) {DE = it.zz}};def ZV = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def yuZ = DE.replaceAll(ZV.collect { "\\" + it }.join('|'), '');yuZ = yuZ.replaceAll(/(\s|\.)*$/, '');yuZ}{def pv = "TheMovieDB::TV";def Ft = [[ 95897, pv],[123542, pv],[235973, pv],[239779, pv],[257162, pv],[259140, pv],[276204, pv]];def CL = Ft.find { it[0] == id && it[1] == info.database } != null;def alX = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def qr = alX[info.database];CL ? " ($y) [${qr}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def ZV = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def yuZ = sn.replaceAll(ZV.collect { "\\" + it }.join('|'), '_');def lLX = n.replaceAll(ZV.collect { "\\" + it }.join('|'), '_');def Udp = yuZ.contains(lLX) ? "" : yuZ;Udp == 'Season '+ s || Udp == 'Series '+ s ? "" : Udp ? " - " + Udp : ""}{"/"}{def la = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def D_X = la.find { UK ->  fn.lower().contains(UK.lower()) } ?: "";def Lwp = any {D_X} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};Lwp ? "[$Lwp] " : ""}{def pv = "TheMovieDB::TV";def fCc = [[TmX: 199928, zz: "Nights With a Cat", OEy: pv],[TmX: 219816, zz: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", OEy: pv],[TmX: 248707, zz: "Neko Oji The Guy That Got Reincarnated As a Cat", OEy: pv],[TmX: 270657, zz: "Tono to Inu", OEy: pv],[TmX: 274741, zz: "The Too-Perfect Saint", OEy: pv]];def SV = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def utK = SV == "IMDb" ? "tt${id}" : id;def DE = n;fCc.each {if (it.TmX == utK && it.OEy == SV) {DE = it.zz}};def ZV = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def yuZ = DE.replaceAll(ZV.collect { "\\" + it }.join('|'), '');yuZ = yuZ.replaceAll(/(\s|\.)*$/, '');yuZ}{" - "}{s00e00}{def ZV = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def yuZ = t.replaceAll(ZV.collect { "\\" + it }.join('|'), '_');yuZ = yuZ.length() > 100 ? " " : " - $yuZ ";def Ol = any { e } { special };def _D = "Episode $Ol";def aP = yuZ.contains(_D) ? '' : yuZ;aP != '' ? aP : ''}{" ["}{def Df = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LAFTEL", "LFTL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["WETV"]];def Fn = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def Kj = ["DB"];def Fze = ["Ruri-Saizen"];def ZO = ["Erai-raws", "SubsPlease"];def fpY = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def Wu_ = any {def fcU = Df.find { tCh ->  tCh.find { rqs ->  fn.lower().contains(rqs.lower()) } }[0];fcU = fcU.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {fcU = fcU.replace(".WEBRip", "");fcU = fcU + ".WEBRip"} else {fcU = fcU + ".WEB-DL"};fcU} {source} {Fn.find { bAj ->  group == bAj || fpY == bAj } ? "WEBRip" : ""} {Kj.find { bAj ->  group == bAj || fpY == bAj } ? "BDRip" : ""} {Fze.find { bAj ->  group == g__ || fpY == g__} ? "HDTVRip" : ""} {def Oql = ZO.find { JNc ->  group == JNc || fpY == JNc} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : Oql} {vs} {""};Wu_ ? "$Wu_ " : ""}{def rO = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $rO, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def Fhj = any { audioLanguages.size() } { 0 };def bEK = Fhj > 2 ? " MULTi-AUD" : Fhj > 1 ? " DUAL-AUD" : "";def PO = Fhj > 5 ? audioLanguages.take(5) : audioLanguages;def fG = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";bEK = Fhj == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$bEK$fG";bEK ? bEK + PO.ISO2.joining(" ", " (", "").upper() + (Fhj > 5 ? " ...)" : ")") : ""}{def Ev = any { textLanguages.size() } { 0 };def bEK = Ev > 2 ? ", MULTi" : Ev > 1 ? ", DUAL" : Ev == 1 ? ", SUB" : null;def PO = Ev > 5 ? textLanguages.take(5) : textLanguages;bEK ? bEK + PO.ISO2.joining(" ", " (", "").upper() + (Ev > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def bm = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def pK = subt;bm.values().each { kz -> if (pK.contains(kz)) {pK = pK.replace(kz, "")}};bm.iso3b + pK}}{f.image ? "-thumb" : ""}