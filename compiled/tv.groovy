{def Zdk = { System.getProperty(it) };def pq = Zdk("os.name").toLowerCase().contains("windows");def dK = Zdk("user.name");def CbC = "/run/media/${dK}";def IR = pq ? "H:/" : "$CbC/Videos";def kPc = [[xId: "Books", aDr: "F:/", znW: "$CbC/Books"],[xId: "Data", aDr: "D:/", znW: "$CbC/Data"],[xId: "Games", aDr: "G:/", znW: "$CbC/Games"],[xId: "Music", aDr: "E:/", znW: "$CbC/Music"],[xId: "Videos", aDr: "H:/", znW: "$CbC/Videos"]];def We = (kPc.collect { it[pq ? "aDr" : "znW"] as File }.sort { fMl, Kx ->  fMl.exists() <=> Kx.exists() ?: fMl.diskSpace <=> Kx.diskSpace }).last();def XV = IR ?: We;"$XV/"}{"Videos/"}{def cBz = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def bS = "TheMovieDB::TV";def ll = [[ 74180, bS],[ 93821, bS],[ 95897, bS],[220118, bS],[249891, bS],[271026, bS]];def Cdn = [[236530, bS]];def Xhr = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def ad = Xhr == "IMDb" ? "tt${id}" : id;def PrT = any { info.adult } { false };def to = ll.find { it[0] == ad && it[1] == Xhr } != null;def IdW = Cdn.find { it[0] == ad && it[1] == Xhr } != null;def FvJ = info.Keywords.findAll { it in cBz } || to || PrT;FvJ = IdW ? false : FvJ;FvJ ? "R18+ " : ""}{def DWk = ["CN", "JP", "KR", "KP", "TW", "HK"];def SZ = ["aeni", "donghua", "anime"];def ckc = any {anime} || info.Keywords.findAll { it in SZ } || (DWk.contains(country) && genres =~ /Animation/);ckc ? "Anime/" : "TV Series/"}{def bS = "TheMovieDB::TV";def uGg = [[yHy: 199928, yAi: "Nights With a Cat", SyR: bS],[yHy: 232230, yAi: "Lord of the Mysteries", SyR: bS],[yHy: 248707, yAi: "Neko Oji The Guy That Got Reincarnated As a Cat", SyR: bS],[yHy: 270660, yAi: "Pochars", SyR: bS],[yHy: 280078, yAi: "The All-devouring Whale Homecoming", SyR: bS],[yHy: 283704, yAi: "Fermat Kitchen", SyR: bS],[yHy: 283884, yAi: "Chuhai Lips", SyR: bS],[yHy: 288419, yAi: "Chikuwa Senki", SyR: bS]];def Xhr = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def ad = Xhr == "IMDb" ? "tt${id}" : id;def IB = n;uGg.each {if (it.yHy == ad && it.SyR == Xhr) {IB = it.yAi}};def mpC = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def blg = IB.replaceAll(mpC.collect { "\\" + it }.join('|'), '');blg = blg.replaceAll(/(\s|\.)*$/, '');blg}{def bS = "TheMovieDB::TV";def KU = [[ 95897, bS],[123542, bS],[239779, bS],[257162, bS],[259140, bS],[276204, bS]];def rP = KU.find { it[0] == id && it[1] == info.database } != null;def rGA = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def sjZ = rGA[info.database];rP ? " ($y) [${sjZ}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def mpC = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def blg = sn.replaceAll(mpC.collect { "\\" + it }.join('|'), '_');def xHp = n.replaceAll(mpC.collect { "\\" + it }.join('|'), '_');def mDw = blg.contains(xHp) ? "" : blg;mDw == 'Season '+ s || mDw == 'Series '+ s ? "" : mDw ? " - " + mDw : ""}{"/"}{def bkv = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def Qu = bkv.find { PAY ->  fn.lower().contains(PAY.lower()) } ?: "";def Eex = any {Qu} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};Eex ? "[$Eex] " : ""}{def bS = "TheMovieDB::TV";def uGg = [[yHy: 199928, yAi: "Nights With a Cat", SyR: bS],[yHy: 232230, yAi: "Lord of the Mysteries", SyR: bS],[yHy: 248707, yAi: "Neko Oji The Guy That Got Reincarnated As a Cat", SyR: bS],[yHy: 270660, yAi: "Pochars", SyR: bS],[yHy: 280078, yAi: "The All-devouring Whale Homecoming", SyR: bS],[yHy: 283704, yAi: "Fermat Kitchen", SyR: bS],[yHy: 283884, yAi: "Chuhai Lips", SyR: bS],[yHy: 288419, yAi: "Chikuwa Senki", SyR: bS]];def Xhr = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def ad = Xhr == "IMDb" ? "tt${id}" : id;def IB = n;uGg.each {if (it.yHy == ad && it.SyR == Xhr) {IB = it.yAi}};def mpC = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def blg = IB.replaceAll(mpC.collect { "\\" + it }.join('|'), '');blg = blg.replaceAll(/(\s|\.)*$/, '');blg}{" - "}{s00e00}{def mpC = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def blg = t.replaceAll(mpC.collect { "\\" + it }.join('|'), '_');blg = blg.length() > 100 ? " " : " - $blg ";def vY = any { e } { special };def uD = "Episode $vY";def vGF = blg.contains(uD) ? '' : blg;vGF != '' ? vGF : ''}{" ["}{def AOg = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["FOD"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"],["INSTA", "INSTAGRAM"],["ANIMENOTANE"]];def oE = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def ZgU = ["DB"];def Ol = ["Ruri-Saizen"];def KI = ["Erai-raws", "SubsPlease"];def DIH = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def NiE = any {def _V = AOg.find { vP ->  vP.find { QHs ->  fn.lower().contains(QHs.lower()) } }[0];_V = _V.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {_V = _V.replace(".WEBRip", "");_V = _V + ".WEBRip"} else {_V = _V + ".WEB-DL"};_V} {source} {oE.find { xe ->  group == xe || DIH == xe } ? "WEBRip" : ""} {ZgU.find { xe ->  group == xe || DIH == xe } ? "BDRip" : ""} {Ol.find { xe ->  group == g__ || DIH == g__} ? "HDTVRip" : ""} {def Fh = KI.find { kGk ->  group == kGk || DIH == kGk} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : Fh} {vs} {""};NiE ? "$NiE " : ""}{def Yl = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $Yl, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def Kg = any { audioLanguages.size() } { 0 };def AU = Kg > 2 ? " MULTi-AUD" : Kg > 1 ? " DUAL-AUD" : "";def Aj = Kg > 5 ? audioLanguages.take(5) : audioLanguages;def NU = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";AU = Kg == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$AU$NU";AU ? AU + Aj.ISO2.joining(" ", " (", "").upper() + (Kg > 5 ? " ...)" : ")") : ""}{def Nm = text.language.collect {['zh-Hans': 'ZH-S','zh-Hant': 'ZH-T','ar-001': 'AR-MSA'].get(it,it).toUpperCase()}.unique();def QxE = any { Nm.size() } { 0 };def AU = QxE > 2 ? ", MULTi" : QxE > 1 ? ", DUAL" : QxE == 1 ? ", SUB" : null;def Aj = QxE > 5 ? Nm.take(5) : Nm;AU ? AU + Aj.joining(" ", " (", "").upper() + (QxE > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def uKy = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def Tj = subt;uKy.values().each { Xre -> if (Tj.contains(Xre)) {Tj = Tj.replace(Xre, "")}};uKy.iso3b + Tj}}{f.image ? "-thumb" : ""}