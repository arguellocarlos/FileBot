{def JAE = { System.getProperty(it) };def pG = JAE("os.name").toLowerCase().contains("windows");def NQ = JAE("user.name");def Rtg = "/run/media/${NQ}";def nL = pG ? "H:/" : "$Rtg/Videos";def tkP = [[OIW: "Books", Sla: "F:/", rLq: "$Rtg/Books"],[OIW: "Data", Sla: "D:/", rLq: "$Rtg/Data"],[OIW: "Games", Sla: "G:/", rLq: "$Rtg/Games"],[OIW: "Music", Sla: "E:/", rLq: "$Rtg/Music"],[OIW: "Videos", Sla: "H:/", rLq: "$Rtg/Videos"]];def jaC = (tkP.collect { it[pG ? "Sla" : "rLq"] as File }.sort { riR, ZCJ ->  riR.exists() <=> ZCJ.exists() ?: riR.diskSpace <=> ZCJ.diskSpace }).last();def qRp = nL ?: jaC;"$qRp/"}{"Videos/"}{def jT = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content"];def SkQ = "TheMovieDB::TV";def xV = [[271026, SkQ],[220118, SkQ],[ 74180, SkQ]];def HGD = [[236530, SkQ]];def jPb = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def FT = jPb == "IMDb" ? "tt${id}" : id;def Ga = any { info.adult } { false };def GjJ = xV.find { it[0] == FT && it[1] == jPb } != null;def DUf = HGD.find { it[0] == FT && it[1] == jPb } != null;def XFD = info.Keywords.findAll { it in jT } || GjJ || Ga;XFD = DUf ? false : XFD;XFD ? "R18+ " : ""}{def qV_ = ["CN", "JP", "KR", "KP", "TW", "HK"];def Ii = ["aeni", "donghua", "anime"];def Fv = any {anime} || info.Keywords.findAll { it in Ii } || (qV_.contains(country) && genres =~ /Animation/);Fv ? "Anime/" : "TV Series/"}{def SkQ = "TheMovieDB::TV";def SMj = [[cbj: 68854, Bu: "From Me to You", kB: SkQ],[cbj: 94904, Bu: "My Next Life as a Villainess", kB: SkQ],[cbj: 229743, Bu: "VTuber Legend", kB: SkQ],[cbj: 234538, Bu: "Demon Lord 2099", kB: SkQ],[cbj: 237045, Bu: "Cherry Magic!", kB: SkQ],[cbj: 240633, Bu: "A Journey Through Another World", kB: SkQ],[cbj: 245285, Bu: "Failure Frame", kB: SkQ],[cbj: 271026, Bu: "Taisho Era Contract Marriage", kB: SkQ]];def jPb = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def FT = jPb == "IMDb" ? "tt${id}" : id;def gO = n;SMj.each {if (it.cbj == FT && it.kB == jPb) {gO = it.Bu}};def tk = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Rfu = gO.replaceAll(tk.collect { "\\" + it }.join('|'), '');Rfu = Rfu.replaceAll(/(\s|\.)*$/, '');Rfu}{def SkQ = "TheMovieDB::TV";def boR = [[ 68854, SkQ],[123542, SkQ],[204098, SkQ],[235973, SkQ],[239779, SkQ],[240125, SkQ],[257162, SkQ],[259140, SkQ],[262295, SkQ],[271026, SkQ],[273190, SkQ],[275695, SkQ]];def Qw = boR.find { it[0] == id && it[1] == info.database } != null;def ZK = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def qmh = ZK[info.database];Qw ? " ($y) [${qmh}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def tk = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Rfu = sn.replaceAll(tk.collect { "\\" + it }.join('|'), '_');def bj = n.replaceAll(tk.collect { "\\" + it }.join('|'), '_');def AZD = Rfu.contains(bj) ? "" : Rfu;AZD == 'Season '+ s ? "" : AZD ? " - " + AZD : ""}{"/"}{def AY = ["Alqanime","BlackLuster","NanDesuKa","ToonsHub","Tsundere-Raws"];def ZSy = AY.find { ohO ->  fn.contains(ohO) } ?: "";def qX = any {(fn =~ /^\[(.*?)\]/)[0][1]} {ZSy} {group} {""};qX ? "[$qX] " : ""}{def SkQ = "TheMovieDB::TV";def SMj = [[cbj: 68854, Bu: "From Me to You", kB: SkQ],[cbj: 94904, Bu: "My Next Life as a Villainess", kB: SkQ],[cbj: 229743, Bu: "VTuber Legend", kB: SkQ],[cbj: 234538, Bu: "Demon Lord 2099", kB: SkQ],[cbj: 237045, Bu: "Cherry Magic!", kB: SkQ],[cbj: 240633, Bu: "A Journey Through Another World", kB: SkQ],[cbj: 245285, Bu: "Failure Frame", kB: SkQ],[cbj: 271026, Bu: "Taisho Era Contract Marriage", kB: SkQ]];def jPb = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def FT = jPb == "IMDb" ? "tt${id}" : id;def gO = n;SMj.each {if (it.cbj == FT && it.kB == jPb) {gO = it.Bu}};def tk = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Rfu = gO.replaceAll(tk.collect { "\\" + it }.join('|'), '');Rfu = Rfu.replaceAll(/(\s|\.)*$/, '');Rfu}{" - "}{s00e00}{def tk = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Rfu = t.replaceAll(tk.collect { "\\" + it }.join('|'), '_');def UTo = any { e } { special };Rfu = Rfu.length() > 100 ? " " : " - $Rfu ";Rfu == " - Episode $UTo " ? " " : Rfu}{" ["}{def vQ = [["ABEMA"],["ADN"],["BILI", "B-Global", "BiliIntl", "B-Site", "BiliCN"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["LAFTEL", "LFTL"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["SHAHID"],["TVER"],["UNEXT"],["WETV"],["YT.WEB-DL", "YOUTUBE", "YTB"]];def wVL = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs"];def vR = ["Erai-raws", "SubsPlease"];def bfX = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def ew = any {def min = vQ.find { igm ->  igm.find { Ltd ->  fn.lower().contains(Ltd.lower()) } }[0];min = min.replace(".WEB-DL", "");min ? "${min}.WEB-DL" : ""} {} {source} {wVL.find { oN ->  group == oN || bfX == oN } ? "WEBRip" : ""} {def CDe = vR.find { vwb ->  group == vwb || bfX == vwb} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : CDe} {vs} {""};ew ? "$ew " : ""}{def JJ = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $JJ, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def qY = " Dub";def Xj = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : qY;Xj = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : Xj;Xj}{def PS = any { audioLanguages.size() } { 0 };def Xj = PS > 2 ? " MAud" : PS > 1 ? " DAud" : null;def gY = PS > 5 ? audioLanguages.take(5) : audioLanguages;Xj ? Xj + gY.joining(" ", " (", "").upper() + (PS > 5 ? " ...)" : ")") : ""}{def QC = any { textLanguages.size() } { 0 };def Xj = QC > 2 ? ", MSub" : QC > 1 ? ", DSub" : null;def gY = QC > 5 ? textLanguages.take(5) : textLanguages;Xj ? Xj + gY.joining(" ", " (", "").upper() + (QC > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def mI = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def AC = subt;mI.values().each { Yv -> if (AC.contains(Yv)) {AC = AC.replace(Yv, "")}};mI.iso3b + AC}}{f.image ? "-thumb" : ""}