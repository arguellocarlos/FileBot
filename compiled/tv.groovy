{def QC = { System.getProperty(it) };def Wyu = QC("os.name").toLowerCase().contains("windows");def Ee = QC("user.name");def glb = "/run/media/${Ee}";def YQ = Wyu ? "H:/" : "$glb/Videos";def _M = [[pC: "Books", xnJ: "F:/", QY: "$glb/Books"],[pC: "Data", xnJ: "D:/", QY: "$glb/Data"],[pC: "Games", xnJ: "G:/", QY: "$glb/Games"],[pC: "Music", xnJ: "E:/", QY: "$glb/Music"],[pC: "Videos", xnJ: "H:/", QY: "$glb/Videos"]];def nIu = (_M.collect { it[Wyu ? "xnJ" : "QY"] as File }.sort { SUi, aq ->  SUi.exists() <=> aq.exists() ?: SUi.diskSpace <=> aq.diskSpace }).last();def Vab = YQ ?: nIu;"$Vab/"}{"Videos/"}{def qQt = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content"];def HX = "TheMovieDB::TV";def vP = [[271026, HX],[220118, HX],[ 74180, HX]];def ajm = [[236530, HX]];def uE = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def _mm = uE == "IMDb" ? "tt${id}" : id;def kj = any { info.adult } { false };def XK = vP.find { it[0] == _mm && it[1] == uE } != null;def lEO = ajm.find { it[0] == _mm && it[1] == uE } != null;def qqL = info.Keywords.findAll { it in qQt } || XK || kj;qqL = lEO ? false : qqL;qqL ? "R18+ " : ""}{def UY = ["CN", "JP", "KR", "KP", "TW", "HK"];def Cbd = ["aeni", "donghua", "anime"];def SjK = any {anime} || info.Keywords.findAll { it in Cbd } || (UY.contains(country) && genres =~ /Animation/);SjK ? "Anime/" : "TV Series/"}{def HX = "TheMovieDB::TV";def oMG = [[OG_: 68854, WFL: "From Me to You", FKU: HX],[OG_: 234538, WFL: "Demon Lord 2099", FKU: HX]];def uE = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def _mm = uE == "IMDb" ? "tt${id}" : id;def Wsi = n;oMG.each {if (it.OG_ == _mm && it.FKU == uE) {Wsi = it.WFL}};def YoQ = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def fa = Wsi.replaceAll(YoQ.collect { "\\" + it }.join('|'), '');fa = fa.replaceAll(/(\s|\.)*$/, '');fa}{def HX = "TheMovieDB::TV";def wW = [[123542, HX],[235973, HX],[239779, HX],[257162, HX],[259140, HX]];def hT = wW.find { it[0] == id && it[1] == info.database } != null;def RaG = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def Di = RaG[info.database];hT ? " ($y) [${Di}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def YoQ = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def fa = sn.replaceAll(YoQ.collect { "\\" + it }.join('|'), '_');def oGv = n.replaceAll(YoQ.collect { "\\" + it }.join('|'), '_');def rN = fa.contains(oGv) ? "" : fa;rN == 'Season '+ s ? "" : rN ? " - " + rN : ""}{"/"}{def Unz = ["Alqanime","BlackLuster","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws"];def Tt = Unz.find { jWg ->  fn.contains(jWg) } ?: "";def vN = any {(fn =~ /^\[(.*?)\]/)[0][1]} {Tt} {group} {""};vN ? "[$vN] " : ""}{def HX = "TheMovieDB::TV";def oMG = [[OG_: 68854, WFL: "From Me to You", FKU: HX],[OG_: 234538, WFL: "Demon Lord 2099", FKU: HX]];def uE = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def _mm = uE == "IMDb" ? "tt${id}" : id;def Wsi = n;oMG.each {if (it.OG_ == _mm && it.FKU == uE) {Wsi = it.WFL}};def YoQ = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def fa = Wsi.replaceAll(YoQ.collect { "\\" + it }.join('|'), '');fa = fa.replaceAll(/(\s|\.)*$/, '');fa}{" - "}{s00e00}{def YoQ = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def fa = t.replaceAll(YoQ.collect { "\\" + it }.join('|'), '_');def gS = any { e } { special };fa = fa.length() > 100 ? " " : " - $fa ";fa == " - Episode $gS " ? " " : fa}{" ["}{def Me = [["ABEMA"],["ADN"],["BILI", "B-Global", "BiliIntl", "B-Site", "BiliCN"],["COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LAFTEL", "LFTL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["SHAHID"],["TVER"],["UNEXT"],["WETV"],["YT.WEB-DL", "YOUTUBE", "YTB"]];def YY_ = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs"];def ai = ["Erai-raws", "SubsPlease"];def la = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def Nbr = any {def lXR = Me.find { SY ->  SY.find { Oey ->  fn.lower().contains(Oey.lower()) } }[0];lXR = lXR.replace(".WEB-DL", "");def Vgw = source.contains("WEB-DL");def Fv = source ? ".${source}" : "";Vgw ? "${lXR}.WEB-DL" : lXR ? "${lXR}${Fv}" : ""} {} {source} {YY_.find { ha ->  group == ha || la == ha } ? "WEBRip" : ""} {def EoR = ai.find { Uu ->  group == Uu || la == Uu} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : EoR} {vs} {""};Nbr ? "$Nbr " : ""}{def sT = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $sT, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def GWa = " Dub";def Ndd = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : GWa;Ndd = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : Ndd;Ndd}{def rX = any { audioLanguages.size() } { 0 };def Ndd = rX > 2 ? " MAud" : rX > 1 ? " DAud" : null;def zmR = rX > 5 ? audioLanguages.take(5) : audioLanguages;Ndd ? Ndd + zmR.joining(" ", " (", "").upper() + (rX > 5 ? " ...)" : ")") : ""}{def vVd = any { textLanguages.size() } { 0 };def Ndd = vVd > 2 ? ", MSub" : vVd > 1 ? ", DSub" : null;def zmR = vVd > 5 ? textLanguages.take(5) : textLanguages;Ndd ? Ndd + zmR.joining(" ", " (", "").upper() + (vVd > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def YMk = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def ZNy = subt;YMk.values().each { dRw -> if (ZNy.contains(dRw)) {ZNy = ZNy.replace(dRw, "")}};YMk.iso3b + ZNy}}{f.image ? "-thumb" : ""}