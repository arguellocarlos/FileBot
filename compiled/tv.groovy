{def lgI = { System.getProperty(it) };def Orf = lgI("os.name").toLowerCase().contains("windows");def Jh = lgI("user.name");def VGV = "/run/media/${Jh}";def Nz = Orf ? "H:/" : "$VGV/Videos";def uE = [[DQ: "Books", YDZ: "F:/", Kkp: "$VGV/Books"],[DQ: "Data", YDZ: "D:/", Kkp: "$VGV/Data"],[DQ: "Games", YDZ: "G:/", Kkp: "$VGV/Games"],[DQ: "Music", YDZ: "E:/", Kkp: "$VGV/Music"],[DQ: "Videos", YDZ: "H:/", Kkp: "$VGV/Videos"]];def sQS = (uE.collect { it[Orf ? "YDZ" : "Kkp"] as File }.sort { MyL, XzJ ->  MyL.exists() <=> XzJ.exists() ?: MyL.diskSpace <=> XzJ.diskSpace }).last();def tWn = Nz ?: sQS;"$tWn/"}{"Videos/"}{def ZPp = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def gBF = "TheMovieDB::TV";def Ng = [[ 74180, gBF],[ 93821, gBF],[ 95897, gBF],[220118, gBF],[249891, gBF],[271026, gBF]];def nIm = [[236530, gBF]];def KoB = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def qZ = KoB == "IMDb" ? "tt${id}" : id;def yrx = any { info.adult } { false };def kNB = Ng.find { it[0] == qZ && it[1] == KoB } != null;def gW = nIm.find { it[0] == qZ && it[1] == KoB } != null;def cub = info.Keywords.findAll { it in ZPp } || kNB || yrx;cub = gW ? false : cub;cub ? "R18+ " : ""}{def IR = ["CN", "JP", "KR", "KP", "TW", "HK"];def pMZ = ["aeni", "donghua", "anime"];def Xt = any {anime} || info.Keywords.findAll { it in pMZ } || (IR.contains(country) && genres =~ /Animation/);Xt ? "Anime/" : "TV Series/"}{def gBF = "TheMovieDB::TV";def OhR = [[EYM: 199928, Czq: "Nights With a Cat", aew: gBF],[EYM: 219816, Czq: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", aew: gBF],[EYM: 248707, Czq: "Neko Oji The Guy That Got Reincarnated As a Cat", aew: gBF],[EYM: 271003, Czq: "Yandere Dark Elf", aew: gBF],[EYM: 274741, Czq: "The Too-Perfect Saint", aew: gBF],[EYM: 275623, Czq: "Chuzenji-sensei", aew: gBF],[EYM: 281623, Czq: "SHIROHIYO", aew: gBF],[EYM: 288419, Czq: "Chikuwa Senki", aew: gBF]];def KoB = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def qZ = KoB == "IMDb" ? "tt${id}" : id;def jt = n;OhR.each {if (it.EYM == qZ && it.aew == KoB) {jt = it.Czq}};def jE = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def FL = jt.replaceAll(jE.collect { "\\" + it }.join('|'), '');FL = FL.replaceAll(/(\s|\.)*$/, '');FL}{def gBF = "TheMovieDB::TV";def SAu = [[ 95897, gBF],[123542, gBF],[235973, gBF],[239779, gBF],[257162, gBF],[259140, gBF],[276204, gBF]];def eJ = SAu.find { it[0] == id && it[1] == info.database } != null;def uX = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def gBI = uX[info.database];eJ ? " ($y) [${gBI}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def jE = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def FL = sn.replaceAll(jE.collect { "\\" + it }.join('|'), '_');def hi = n.replaceAll(jE.collect { "\\" + it }.join('|'), '_');def ZM = FL.contains(hi) ? "" : FL;ZM == 'Season '+ s || ZM == 'Series '+ s ? "" : ZM ? " - " + ZM : ""}{"/"}{def YKe = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def js = YKe.find { r_P ->  fn.lower().contains(r_P.lower()) } ?: "";def XdI = any {js} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};XdI ? "[$XdI] " : ""}{def gBF = "TheMovieDB::TV";def OhR = [[EYM: 199928, Czq: "Nights With a Cat", aew: gBF],[EYM: 219816, Czq: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", aew: gBF],[EYM: 248707, Czq: "Neko Oji The Guy That Got Reincarnated As a Cat", aew: gBF],[EYM: 271003, Czq: "Yandere Dark Elf", aew: gBF],[EYM: 274741, Czq: "The Too-Perfect Saint", aew: gBF],[EYM: 275623, Czq: "Chuzenji-sensei", aew: gBF],[EYM: 281623, Czq: "SHIROHIYO", aew: gBF],[EYM: 288419, Czq: "Chikuwa Senki", aew: gBF]];def KoB = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def qZ = KoB == "IMDb" ? "tt${id}" : id;def jt = n;OhR.each {if (it.EYM == qZ && it.aew == KoB) {jt = it.Czq}};def jE = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def FL = jt.replaceAll(jE.collect { "\\" + it }.join('|'), '');FL = FL.replaceAll(/(\s|\.)*$/, '');FL}{" - "}{s00e00}{def jE = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def FL = t.replaceAll(jE.collect { "\\" + it }.join('|'), '_');FL = FL.length() > 100 ? " " : " - $FL ";def CGs = any { e } { special };def _vr = "Episode $CGs";def yo = FL.contains(_vr) ? '' : FL;yo != '' ? yo : ''}{" ["}{def Enq = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"]];def wK = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def Cc = ["DB"];def We = ["Ruri-Saizen"];def Dc = ["Erai-raws", "SubsPlease"];def H_C = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def AoL = any {def BZR = Enq.find { sVu ->  sVu.find { Jal ->  fn.lower().contains(Jal.lower()) } }[0];BZR = BZR.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {BZR = BZR.replace(".WEBRip", "");BZR = BZR + ".WEBRip"} else {BZR = BZR + ".WEB-DL"};BZR} {source} {wK.find { Ef ->  group == Ef || H_C == Ef } ? "WEBRip" : ""} {Cc.find { Ef ->  group == Ef || H_C == Ef } ? "BDRip" : ""} {We.find { Ef ->  group == g__ || H_C == g__} ? "HDTVRip" : ""} {def og = Dc.find { ILW ->  group == ILW || H_C == ILW} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : og} {vs} {""};AoL ? "$AoL " : ""}{def bef = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $bef, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def yJ = any { audioLanguages.size() } { 0 };def WxV = yJ > 2 ? " MULTi-AUD" : yJ > 1 ? " DUAL-AUD" : "";def FNi = yJ > 5 ? audioLanguages.take(5) : audioLanguages;def Yn = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";WxV = yJ == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$WxV$Yn";WxV ? WxV + FNi.ISO2.joining(" ", " (", "").upper() + (yJ > 5 ? " ...)" : ")") : ""}{def CY = text.language.collect {['zh-Hans': 'ZH-S','zh-Hant': 'ZH-T'].get(it,it).toUpperCase()}.unique();def nv = any { CY.size() } { 0 };def WxV = nv > 2 ? ", MULTi" : nv > 1 ? ", DUAL" : nv == 1 ? ", SUB" : null;def FNi = nv > 5 ? CY.take(5) : CY;WxV ? WxV + FNi.joining(" ", " (", "").upper() + (nv > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def uO = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def UJ = subt;uO.values().each { Ne -> if (UJ.contains(Ne)) {UJ = UJ.replace(Ne, "")}};uO.iso3b + UJ}}{f.image ? "-thumb" : ""}