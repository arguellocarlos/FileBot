{def Hiz = { System.getProperty(it) };def QN = Hiz("os.name").toLowerCase().contains("windows");def uK = Hiz("user.name");def Mj = "/run/media/${uK}";def LpO = QN ? "H:/" : "$Mj/Videos";def Hx = [[yQ: "Books", MRv: "F:/", JS: "$Mj/Books"],[yQ: "Data", MRv: "D:/", JS: "$Mj/Data"],[yQ: "Games", MRv: "G:/", JS: "$Mj/Games"],[yQ: "Music", MRv: "E:/", JS: "$Mj/Music"],[yQ: "Videos", MRv: "H:/", JS: "$Mj/Videos"]];def vn = (Hx.collect { it[QN ? "MRv" : "JS"] as File }.sort { ha, ZTO ->  ha.exists() <=> ZTO.exists() ?: ha.diskSpace <=> ZTO.diskSpace }).last();def Pah = LpO ?: vn;"$Pah/"}{"Videos/"}{def Kl = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def TjL = "TheMovieDB::TV";def hiV = [[ 74180, TjL],[ 93821, TjL],[ 95897, TjL],[220118, TjL],[249891, TjL],[271026, TjL]];def KxR = [[236530, TjL]];def tJx = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Kx = tJx == "IMDb" ? "tt${id}" : id;def ipr = any { info.adult } { false };def Zn = hiV.find { it[0] == Kx && it[1] == tJx } != null;def zdG = KxR.find { it[0] == Kx && it[1] == tJx } != null;def IDm = info.Keywords.findAll { it in Kl } || Zn || ipr;IDm = zdG ? false : IDm;IDm ? "R18+ " : ""}{def QT = ["CN", "JP", "KR", "KP", "TW", "HK"];def uzH = ["aeni", "donghua", "anime"];def Kxk = any {anime} || info.Keywords.findAll { it in uzH } || (QT.contains(country) && genres =~ /Animation/);Kxk ? "Anime/" : "TV Series/"}{def TjL = "TheMovieDB::TV";def mX = [[mrn: 199928, BB: "Nights With a Cat", qC: TjL],[mrn: 219816, BB: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", qC: TjL],[mrn: 248707, BB: "Neko Oji The Guy That Got Reincarnated As a Cat", qC: TjL],[mrn: 270657, BB: "Tono to Inu", qC: TjL],[mrn: 274741, BB: "The Too-Perfect Saint", qC: TjL]];def tJx = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Kx = tJx == "IMDb" ? "tt${id}" : id;def qAd = n;mX.each {if (it.mrn == Kx && it.qC == tJx) {qAd = it.BB}};def Ijy = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def HPn = qAd.replaceAll(Ijy.collect { "\\" + it }.join('|'), '');HPn = HPn.replaceAll(/(\s|\.)*$/, '');HPn}{def TjL = "TheMovieDB::TV";def Cb = [[ 95897, TjL],[123542, TjL],[235973, TjL],[239779, TjL],[257162, TjL],[259140, TjL],[276204, TjL]];def mo = Cb.find { it[0] == id && it[1] == info.database } != null;def bsY = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def egN = bsY[info.database];mo ? " ($y) [${egN}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def Ijy = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def HPn = sn.replaceAll(Ijy.collect { "\\" + it }.join('|'), '_');def yb = n.replaceAll(Ijy.collect { "\\" + it }.join('|'), '_');def CSi = HPn.contains(yb) ? "" : HPn;CSi == 'Season '+ s || CSi == 'Series '+ s ? "" : CSi ? " - " + CSi : ""}{"/"}{def fB = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def Iw = fB.find { p_ ->  fn.lower().contains(p_.lower()) } ?: "";def jSy = any {Iw} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};jSy ? "[$jSy] " : ""}{def TjL = "TheMovieDB::TV";def mX = [[mrn: 199928, BB: "Nights With a Cat", qC: TjL],[mrn: 219816, BB: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", qC: TjL],[mrn: 248707, BB: "Neko Oji The Guy That Got Reincarnated As a Cat", qC: TjL],[mrn: 270657, BB: "Tono to Inu", qC: TjL],[mrn: 274741, BB: "The Too-Perfect Saint", qC: TjL]];def tJx = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Kx = tJx == "IMDb" ? "tt${id}" : id;def qAd = n;mX.each {if (it.mrn == Kx && it.qC == tJx) {qAd = it.BB}};def Ijy = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def HPn = qAd.replaceAll(Ijy.collect { "\\" + it }.join('|'), '');HPn = HPn.replaceAll(/(\s|\.)*$/, '');HPn}{" - "}{s00e00}{def Ijy = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def HPn = t.replaceAll(Ijy.collect { "\\" + it }.join('|'), '_');HPn = HPn.length() > 100 ? " " : " - $HPn ";def gQh = any { e } { special };def kw = "Episode $gQh";def PHF = HPn.contains(kw) ? '' : HPn;PHF != '' ? PHF : ''}{" ["}{def qX = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LAFTEL", "LFTL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["WETV"]];def tg = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def VUO = ["DB"];def pk = ["Ruri-Saizen"];def DrJ = ["Erai-raws", "SubsPlease"];def By = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def KAx = any {def iz = qX.find { rc ->  rc.find { IFB ->  fn.lower().contains(IFB.lower()) } }[0];iz = iz.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {iz = iz.replace(".WEBRip", "");iz = iz + ".WEBRip"} else {iz = iz + ".WEB-DL"};iz} {source} {tg.find { Rwd ->  group == Rwd || By == Rwd } ? "WEBRip" : ""} {VUO.find { Rwd ->  group == Rwd || By == Rwd } ? "BDRip" : ""} {pk.find { Rwd ->  group == g__ || By == g__} ? "HDTVRip" : ""} {def emK = DrJ.find { Imm ->  group == Imm || By == Imm} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : emK} {vs} {""};KAx ? "$KAx " : ""}{def fv = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $fv, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def MpK = any { audioLanguages.size() } { 0 };def yZB = MpK > 2 ? " MULTi-AUD" : MpK > 1 ? " DUAL-AUD" : null;def Rxv = MpK > 5 ? audioLanguages.take(5) : audioLanguages;yZB ? yZB + Rxv.ISO2.joining(" ", " (", "").upper() + (MpK > 5 ? " ...)" : ")") : ""}{def MJQ = " DUBBED";def yZB = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : MJQ;yZB = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : yZB;yZB}{def jh = any { textLanguages.size() } { 0 };def yZB = jh > 2 ? ", MULTi" : jh > 1 ? ", DUAL" : jh == 1 ? ", SUB" : null;def Rxv = jh > 5 ? textLanguages.take(5) : textLanguages;yZB ? yZB + Rxv.ISO2.joining(" ", " (", "").upper() + (jh > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def tw = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def dwX = subt;tw.values().each { Z_g -> if (dwX.contains(Z_g)) {dwX = dwX.replace(Z_g, "")}};tw.iso3b + dwX}}{f.image ? "-thumb" : ""}