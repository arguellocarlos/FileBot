{def ii = { System.getProperty(it) };def YS = ii("os.name").toLowerCase().contains("windows");def gN = ii("user.name");def FpW = "/run/media/${gN}";def hu = YS ? "H:/" : "$FpW/Videos";def uX = [[rn: "Books", tkw: "F:/", wT: "$FpW/Books"],[rn: "Data", tkw: "D:/", wT: "$FpW/Data"],[rn: "Games", tkw: "G:/", wT: "$FpW/Games"],[rn: "Music", tkw: "E:/", wT: "$FpW/Music"],[rn: "Videos", tkw: "H:/", wT: "$FpW/Videos"]];def erp = (uX.collect { it[YS ? "tkw" : "wT"] as File }.sort { sp, ZFY ->  sp.exists() <=> ZFY.exists() ?: sp.diskSpace <=> ZFY.diskSpace }).last();def QL = hu ?: erp;"$QL/"}{"Videos/"}{def jlw = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity"];def Wzw = "TheMovieDB::TV";def yb = [[ 74180, Wzw],[ 93821, Wzw],[ 95897, Wzw],[220118, Wzw],[271026, Wzw]];def Eb = [[236530, Wzw]];def uUP = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def _g = uUP == "IMDb" ? "tt${id}" : id;def jY = any { info.adult } { false };def El = yb.find { it[0] == _g && it[1] == uUP } != null;def dZ = Eb.find { it[0] == _g && it[1] == uUP } != null;def xxO = info.Keywords.findAll { it in jlw } || El || jY;xxO = dZ ? false : xxO;xxO ? "R18+ " : ""}{def Yqn = ["CN", "JP", "KR", "KP", "TW", "HK"];def iJa = ["aeni", "donghua", "anime"];def VF = any {anime} || info.Keywords.findAll { it in iJa } || (Yqn.contains(country) && genres =~ /Animation/);VF ? "Anime/" : "TV Series/"}{def Wzw = "TheMovieDB::TV";def EE = [[gOW: 68854, ZBQ: "From Me to You", DQM: Wzw],[gOW: 219816, ZBQ: "Fate/Grand Order: Fujimaru Ritsuka Doesn't Get It", DQM: Wzw],[gOW: 245561, ZBQ: "Okitsura", DQM: Wzw],[gOW: 248707, ZBQ: "Neko Oji The Guy That Got Reincarnated As a Cat", DQM: Wzw],[gOW: 259559, ZBQ: "Headhunted to Another World", DQM: Wzw],[gOW: 262141, ZBQ: "Can You Keep a Secret", DQM: Wzw],[gOW: 276204, ZBQ: "Bogus Skill Fruitmaster", DQM: Wzw]];def uUP = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def _g = uUP == "IMDb" ? "tt${id}" : id;def YK = n;EE.each {if (it.gOW == _g && it.DQM == uUP) {YK = it.ZBQ}};def GdX = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def iMw = YK.replaceAll(GdX.collect { "\\" + it }.join('|'), '');iMw = iMw.replaceAll(/(\s|\.)*$/, '');iMw}{def Wzw = "TheMovieDB::TV";def ft = [[ 95897, Wzw],[123542, Wzw],[235973, Wzw],[239779, Wzw],[257162, Wzw],[259140, Wzw],[276204, Wzw]];def txY = ft.find { it[0] == id && it[1] == info.database } != null;def Dz = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def nDE = Dz[info.database];txY ? " ($y) [${nDE}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def GdX = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def iMw = sn.replaceAll(GdX.collect { "\\" + it }.join('|'), '_');def ceE = n.replaceAll(GdX.collect { "\\" + it }.join('|'), '_');def uDH = iMw.contains(ceE) ? "" : iMw;uDH == 'Season '+ s ? "" : uDH ? " - " + uDH : ""}{"/"}{def NK = ["Alqanime","BlackLuster","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","Samehadaku"];def qfx = NK.find { Ox ->  fn.lower().contains(Ox.lower()) } ?: "";def EJ = any {(fn =~ /^\[(.*?)\]/)[0][1]} {qfx} {group} {""};EJ ? "[$EJ] " : ""}{def Wzw = "TheMovieDB::TV";def EE = [[gOW: 68854, ZBQ: "From Me to You", DQM: Wzw],[gOW: 219816, ZBQ: "Fate/Grand Order: Fujimaru Ritsuka Doesn't Get It", DQM: Wzw],[gOW: 245561, ZBQ: "Okitsura", DQM: Wzw],[gOW: 248707, ZBQ: "Neko Oji The Guy That Got Reincarnated As a Cat", DQM: Wzw],[gOW: 259559, ZBQ: "Headhunted to Another World", DQM: Wzw],[gOW: 262141, ZBQ: "Can You Keep a Secret", DQM: Wzw],[gOW: 276204, ZBQ: "Bogus Skill Fruitmaster", DQM: Wzw]];def uUP = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def _g = uUP == "IMDb" ? "tt${id}" : id;def YK = n;EE.each {if (it.gOW == _g && it.DQM == uUP) {YK = it.ZBQ}};def GdX = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def iMw = YK.replaceAll(GdX.collect { "\\" + it }.join('|'), '');iMw = iMw.replaceAll(/(\s|\.)*$/, '');iMw}{" - "}{s00e00}{def GdX = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def iMw = t.replaceAll(GdX.collect { "\\" + it }.join('|'), '_');def Th = any { e } { special };iMw = iMw.length() > 100 ? " " : " - $iMw ";iMw == " - Episode $Th " ? " " : iMw}{" ["}{def qP = [["ABEMA"],["ADN"],["BBC"],["BILI", "B-Global", "BiliIntl", "B-Site", "BiliCN"],["COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LAFTEL", "LFTL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["SHAHID"],["TVER"],["UNEXT"],["WETV"],["YTB", "YT.WEB-DL", "YOUTUBE"]];def vex = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs", "SAMEHADAKU"];def _w = ["Erai-raws", "SubsPlease"];def Pa = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def Gs = any {def zsR = qP.find { Bd ->  Bd.find { RD_ ->  fn.lower().contains(RD_.lower()) } }[0];zsR = zsR.replace(".WEB-DL", "");zsR ? "${zsR}.WEB-DL" : ""} {source} {vex.find { rOu ->  group == rOu || Pa == rOu } ? "WEBRip" : ""} {def fDI = _w.find { CLv ->  group == CLv || Pa == CLv} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : fDI} {vs} {""};Gs ? "$Gs " : ""}{def B_ = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $B_, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def On = " Dub";def LaY = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : On;LaY = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : LaY;LaY}{def Rvk = any { audioLanguages.size() } { 0 };def LaY = Rvk > 2 ? " MAud" : Rvk > 1 ? " DAud" : null;def trF = Rvk > 5 ? audioLanguages.take(5) : audioLanguages;LaY ? LaY + trF.joining(" ", " (", "").upper() + (Rvk > 5 ? " ...)" : ")") : ""}{def huC = any { textLanguages.size() } { 0 };def LaY = huC > 2 ? ", MSub" : huC > 1 ? ", DSub" : null;def trF = huC > 5 ? textLanguages.take(5) : textLanguages;LaY ? LaY + trF.joining(" ", " (", "").upper() + (huC > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def MYl = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def Pd = subt;MYl.values().each { Ud -> if (Pd.contains(Ud)) {Pd = Pd.replace(Ud, "")}};MYl.iso3b + Pd}}{f.image ? "-thumb" : ""}