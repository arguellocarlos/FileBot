{def pcT = { System.getProperty(it) };def nSu = pcT("os.name").toLowerCase().contains("windows");def VaU = pcT("user.name");def Jj = "/run/media/${VaU}";def cZ = nSu ? "H:/" : "$Jj/Videos";def Wi = [[jwn: "Books", A_M: "F:/", cc: "$Jj/Books"],[jwn: "Data", A_M: "D:/", cc: "$Jj/Data"],[jwn: "Games", A_M: "G:/", cc: "$Jj/Games"],[jwn: "Music", A_M: "E:/", cc: "$Jj/Music"],[jwn: "Videos", A_M: "H:/", cc: "$Jj/Videos"]];def skU = (Wi.collect { it[nSu ? "A_M" : "cc"] as File }.sort { xMu, WD ->  xMu.exists() <=> WD.exists() ?: xMu.diskSpace <=> WD.diskSpace }).last();def R_N = cZ ?: skU;"$R_N/"}{"Videos/"}{def Jc = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def yE = "TheMovieDB::TV";def zhN = [[ 74180, yE],[ 93821, yE],[ 95897, yE],[220118, yE],[249891, yE],[271026, yE]];def dJG = [[236530, yE]];def _G = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def nx = _G == "IMDb" ? "tt${id}" : id;def HG = any { info.adult } { false };def FU = zhN.find { it[0] == nx && it[1] == _G } != null;def bgv = dJG.find { it[0] == nx && it[1] == _G } != null;def moL = info.Keywords.findAll { it in Jc } || FU || HG;moL = bgv ? false : moL;moL ? "R18+ " : ""}{def Az = ["CN", "JP", "KR", "KP", "TW", "HK"];def SVb = ["aeni", "donghua", "anime"];def Od = any {anime} || info.Keywords.findAll { it in SVb } || (Az.contains(country) && genres =~ /Animation/);Od ? "Anime/" : "TV Series/"}{def yE = "TheMovieDB::TV";def hQ = [[DP: 199928, YI: "Nights With a Cat", ql: yE],[DP: 219816, YI: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", ql: yE],[DP: 248707, YI: "Neko Oji The Guy That Got Reincarnated As a Cat", ql: yE],[DP: 271003, YI: "Yandere Dark Elf", ql: yE],[DP: 274741, YI: "The Too-Perfect Saint", ql: yE],[DP: 281623, YI: "SHIROHIYO", ql: yE],[DP: 288419, YI: "Chikuwa Senki", ql: yE]];def _G = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def nx = _G == "IMDb" ? "tt${id}" : id;def pfz = n;hQ.each {if (it.DP == nx && it.ql == _G) {pfz = it.YI}};def Fn = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def jEI = pfz.replaceAll(Fn.collect { "\\" + it }.join('|'), '');jEI = jEI.replaceAll(/(\s|\.)*$/, '');jEI}{def yE = "TheMovieDB::TV";def BS = [[ 95897, yE],[123542, yE],[235973, yE],[239779, yE],[257162, yE],[259140, yE],[276204, yE]];def aj = BS.find { it[0] == id && it[1] == info.database } != null;def _ah = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def hZi = _ah[info.database];aj ? " ($y) [${hZi}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def Fn = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def jEI = sn.replaceAll(Fn.collect { "\\" + it }.join('|'), '_');def qo = n.replaceAll(Fn.collect { "\\" + it }.join('|'), '_');def vJZ = jEI.contains(qo) ? "" : jEI;vJZ == 'Season '+ s || vJZ == 'Series '+ s ? "" : vJZ ? " - " + vJZ : ""}{"/"}{def Op = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def Am = Op.find { wL ->  fn.lower().contains(wL.lower()) } ?: "";def RQQ = any {Am} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};RQQ ? "[$RQQ] " : ""}{def yE = "TheMovieDB::TV";def hQ = [[DP: 199928, YI: "Nights With a Cat", ql: yE],[DP: 219816, YI: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", ql: yE],[DP: 248707, YI: "Neko Oji The Guy That Got Reincarnated As a Cat", ql: yE],[DP: 271003, YI: "Yandere Dark Elf", ql: yE],[DP: 274741, YI: "The Too-Perfect Saint", ql: yE],[DP: 281623, YI: "SHIROHIYO", ql: yE],[DP: 288419, YI: "Chikuwa Senki", ql: yE]];def _G = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def nx = _G == "IMDb" ? "tt${id}" : id;def pfz = n;hQ.each {if (it.DP == nx && it.ql == _G) {pfz = it.YI}};def Fn = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def jEI = pfz.replaceAll(Fn.collect { "\\" + it }.join('|'), '');jEI = jEI.replaceAll(/(\s|\.)*$/, '');jEI}{" - "}{s00e00}{def Fn = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def jEI = t.replaceAll(Fn.collect { "\\" + it }.join('|'), '_');jEI = jEI.length() > 100 ? " " : " - $jEI ";def pIg = any { e } { special };def ls = "Episode $pIg";def iY = jEI.contains(ls) ? '' : jEI;iY != '' ? iY : ''}{" ["}{def pO = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"]];def Ug = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def WTF = ["DB"];def qA = ["Ruri-Saizen"];def hm = ["Erai-raws", "SubsPlease"];def U_ = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def cR = any {def KZV = pO.find { hQE ->  hQE.find { Xn ->  fn.lower().contains(Xn.lower()) } }[0];KZV = KZV.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {KZV = KZV.replace(".WEBRip", "");KZV = KZV + ".WEBRip"} else {KZV = KZV + ".WEB-DL"};KZV} {source} {Ug.find { U_i ->  group == U_i || U_ == U_i } ? "WEBRip" : ""} {WTF.find { U_i ->  group == U_i || U_ == U_i } ? "BDRip" : ""} {qA.find { U_i ->  group == g__ || U_ == g__} ? "HDTVRip" : ""} {def oCR = hm.find { Za ->  group == Za || U_ == Za} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : oCR} {vs} {""};cR ? "$cR " : ""}{def _Tt = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $_Tt, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def MKc = any { audioLanguages.size() } { 0 };def kE = MKc > 2 ? " MULTi-AUD" : MKc > 1 ? " DUAL-AUD" : "";def Kt = MKc > 5 ? audioLanguages.take(5) : audioLanguages;def bdw = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";kE = MKc == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$kE$bdw";kE ? kE + Kt.ISO2.joining(" ", " (", "").upper() + (MKc > 5 ? " ...)" : ")") : ""}{def KE = any { textLanguages.size() } { 0 };def kE = KE > 2 ? ", MULTi" : KE > 1 ? ", DUAL" : KE == 1 ? ", SUB" : null;def Kt = KE > 5 ? textLanguages.take(5) : textLanguages;kE ? kE + Kt.ISO2.joining(" ", " (", "").upper() + (KE > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def MU = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def NN = subt;MU.values().each { Jsi -> if (NN.contains(Jsi)) {NN = NN.replace(Jsi, "")}};MU.iso3b + NN}}{f.image ? "-thumb" : ""}