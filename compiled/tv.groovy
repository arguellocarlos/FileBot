{def Vz = { System.getProperty(it) };def vti = Vz("os.name").toLowerCase().contains("windows");def rc = Vz("user.name");def mGH = "/run/media/${rc}";def EXp = vti ? "H:/" : "$mGH/Videos";def ak = [[QrB: "Books", rOc: "F:/", Tb: "$mGH/Books"],[QrB: "Data", rOc: "D:/", Tb: "$mGH/Data"],[QrB: "Games", rOc: "G:/", Tb: "$mGH/Games"],[QrB: "Music", rOc: "E:/", Tb: "$mGH/Music"],[QrB: "Videos", rOc: "H:/", Tb: "$mGH/Videos"]];def YG = (ak.collect { it[vti ? "rOc" : "Tb"] as File }.sort { fG, GX ->  fG.exists() <=> GX.exists() ?: fG.diskSpace <=> GX.diskSpace }).last();def KCE = EXp ?: YG;"$KCE/"}{"Videos/"}{def Obu = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def ols = "TheMovieDB::TV";def QaK = [[ 74180, ols],[ 93821, ols],[ 95897, ols],[220118, ols],[249891, ols],[271026, ols]];def nNz = [[236530, ols]];def Uqj = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Wv = Uqj == "IMDb" ? "tt${id}" : id;def NaM = any { info.adult } { false };def KC = QaK.find { it[0] == Wv && it[1] == Uqj } != null;def dU = nNz.find { it[0] == Wv && it[1] == Uqj } != null;def P_o = info.Keywords.findAll { it in Obu } || KC || NaM;P_o = dU ? false : P_o;P_o ? "R18+ " : ""}{def DCG = ["CN", "JP", "KR", "KP", "TW", "HK"];def xh = ["aeni", "donghua", "anime"];def JL = any {anime} || info.Keywords.findAll { it in xh } || (DCG.contains(country) && genres =~ /Animation/);JL ? "Anime/" : "TV Series/"}{def ols = "TheMovieDB::TV";def cJY = [[Stm: 199928, rJl: "Nights With a Cat", RiB: ols],,[Stm: 248707, rJl: "Neko Oji The Guy That Got Reincarnated As a Cat", RiB: ols],[Stm: 270660, rJl: "Pochars", RiB: ols],[Stm: 280078, rJl: "The All-devouring Whale Homecoming", RiB: ols],[Stm; 283884: rJl: "Chuhai Lips", RiB: ols],s[Stm: 288419, rJl: "Chikuwa Senki", RiB: ols]];def Uqj = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Wv = Uqj == "IMDb" ? "tt${id}" : id;def vy = n;cJY.each {if (it.Stm == Wv && it.RiB == Uqj) {vy = it.rJl}};def fc = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def rGN = vy.replaceAll(fc.collect { "\\" + it }.join('|'), '');rGN = rGN.replaceAll(/(\s|\.)*$/, '');rGN}{def ols = "TheMovieDB::TV";def cFw = [[ 95897, ols],[123542, ols],[239779, ols],[257162, ols],[259140, ols],[276204, ols]];def yjw = cFw.find { it[0] == id && it[1] == info.database } != null;def ovQ = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def cA = ovQ[info.database];yjw ? " ($y) [${cA}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def fc = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def rGN = sn.replaceAll(fc.collect { "\\" + it }.join('|'), '_');def ocy = n.replaceAll(fc.collect { "\\" + it }.join('|'), '_');def RqS = rGN.contains(ocy) ? "" : rGN;RqS == 'Season '+ s || RqS == 'Series '+ s ? "" : RqS ? " - " + RqS : ""}{"/"}{def hJr = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def tn = hJr.find { Ii ->  fn.lower().contains(Ii.lower()) } ?: "";def XC = any {tn} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};XC ? "[$XC] " : ""}{def ols = "TheMovieDB::TV";def cJY = [[Stm: 199928, rJl: "Nights With a Cat", RiB: ols],,[Stm: 248707, rJl: "Neko Oji The Guy That Got Reincarnated As a Cat", RiB: ols],[Stm: 270660, rJl: "Pochars", RiB: ols],[Stm: 280078, rJl: "The All-devouring Whale Homecoming", RiB: ols],[Stm; 283884: rJl: "Chuhai Lips", RiB: ols],s[Stm: 288419, rJl: "Chikuwa Senki", RiB: ols]];def Uqj = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Wv = Uqj == "IMDb" ? "tt${id}" : id;def vy = n;cJY.each {if (it.Stm == Wv && it.RiB == Uqj) {vy = it.rJl}};def fc = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def rGN = vy.replaceAll(fc.collect { "\\" + it }.join('|'), '');rGN = rGN.replaceAll(/(\s|\.)*$/, '');rGN}{" - "}{s00e00}{def fc = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def rGN = t.replaceAll(fc.collect { "\\" + it }.join('|'), '_');rGN = rGN.length() > 100 ? " " : " - $rGN ";def sl = any { e } { special };def mNl = "Episode $sl";def KMn = rGN.contains(mNl) ? '' : rGN;KMn != '' ? KMn : ''}{" ["}{def Fsf = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["FOD"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"],["INSTA", "INSTAGRAM"],["ANIMENOTANE"]];def sLe = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def AW = ["DB"];def kJ = ["Ruri-Saizen"];def JD = ["Erai-raws", "SubsPlease"];def hs = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def aG = any {def fQf = Fsf.find { QNn ->  QNn.find { wKI ->  fn.lower().contains(wKI.lower()) } }[0];fQf = fQf.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {fQf = fQf.replace(".WEBRip", "");fQf = fQf + ".WEBRip"} else {fQf = fQf + ".WEB-DL"};fQf} {source} {sLe.find { zl ->  group == zl || hs == zl } ? "WEBRip" : ""} {AW.find { zl ->  group == zl || hs == zl } ? "BDRip" : ""} {kJ.find { zl ->  group == g__ || hs == g__} ? "HDTVRip" : ""} {def Jr = JD.find { ZMQ ->  group == ZMQ || hs == ZMQ} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : Jr} {vs} {""};aG ? "$aG " : ""}{def jsK = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $jsK, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def PEa = any { audioLanguages.size() } { 0 };def wR = PEa > 2 ? " MULTi-AUD" : PEa > 1 ? " DUAL-AUD" : "";def sD = PEa > 5 ? audioLanguages.take(5) : audioLanguages;def JQv = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";wR = PEa == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$wR$JQv";wR ? wR + sD.ISO2.joining(" ", " (", "").upper() + (PEa > 5 ? " ...)" : ")") : ""}{def RKT = text.language.collect {['zh-Hans': 'ZH-S','zh-Hant': 'ZH-T','ar-001': 'AR-MSA'].get(it,it).toUpperCase()}.unique();def PtD = any { RKT.size() } { 0 };def wR = PtD > 2 ? ", MULTi" : PtD > 1 ? ", DUAL" : PtD == 1 ? ", SUB" : null;def sD = PtD > 5 ? RKT.take(5) : RKT;wR ? wR + sD.joining(" ", " (", "").upper() + (PtD > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def RfW = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def WYZ = subt;RfW.values().each { NUH -> if (WYZ.contains(NUH)) {WYZ = WYZ.replace(NUH, "")}};RfW.iso3b + WYZ}}{f.image ? "-thumb" : ""}