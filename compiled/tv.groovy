{def eZJ = { System.getProperty(it) };def MD = eZJ("os.name").toLowerCase().contains("windows");def JZX = eZJ("user.name");def rt = "/run/media/${JZX}";def Ev = MD ? "H:/" : "$rt/Videos";def NzK = [[du: "Books", vX: "F:/", oQ: "$rt/Books"],[du: "Data", vX: "D:/", oQ: "$rt/Data"],[du: "Games", vX: "G:/", oQ: "$rt/Games"],[du: "Music", vX: "E:/", oQ: "$rt/Music"],[du: "Videos", vX: "H:/", oQ: "$rt/Videos"]];def avY = (NzK.collect { it[MD ? "vX" : "oQ"] as File }.sort { KxK, aHi ->  KxK.exists() <=> aHi.exists() ?: KxK.diskSpace <=> aHi.diskSpace }).last();def pRx = Ev ?: avY;"$pRx/"}{"Videos/"}{def av_ = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def ZQM = "TheMovieDB::TV";def ZU = [[ 74180, ZQM],[ 93821, ZQM],[ 95897, ZQM],[220118, ZQM],[249891, ZQM],[271026, ZQM]];def Vu = [[236530, ZQM]];def OY = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Qor = OY == "IMDb" ? "tt${id}" : id;def jI = any { info.adult } { false };def qC = ZU.find { it[0] == Qor && it[1] == OY } != null;def e_ = Vu.find { it[0] == Qor && it[1] == OY } != null;def pO = info.Keywords.findAll { it in av_ } || qC || jI;pO = e_ ? false : pO;pO ? "R18+ " : ""}{def cnV = ["CN", "JP", "KR", "KP", "TW", "HK"];def fMX = ["aeni", "donghua", "anime"];def gbl = any {anime} || info.Keywords.findAll { it in fMX } || (cnV.contains(country) && genres =~ /Animation/);gbl ? "Anime/" : "TV Series/"}{def ZQM = "TheMovieDB::TV";def mqc = [[NXu: 199928, wjt: "Nights With a Cat", IJ: ZQM],[NXu: 219816, wjt: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", IJ: ZQM],[NXu: 248707, wjt: "Neko Oji The Guy That Got Reincarnated As a Cat", IJ: ZQM],[NXu: 271003, wjt: "Yandere Dark Elf", IJ: ZQM],[NXu: 274741, wjt: "The Too-Perfect Saint", IJ: ZQM],[NXu: 275623, wjt: "Chuzenji-sensei", IJ: ZQM],[NXu: 281623, wjt: "SHIROHIYO", IJ: ZQM],[NXu: 288419, wjt: "Chikuwa Senki", IJ: ZQM]];def OY = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Qor = OY == "IMDb" ? "tt${id}" : id;def ILK = n;mqc.each {if (it.NXu == Qor && it.IJ == OY) {ILK = it.wjt}};def YQx = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def rYL = ILK.replaceAll(YQx.collect { "\\" + it }.join('|'), '');rYL = rYL.replaceAll(/(\s|\.)*$/, '');rYL}{def ZQM = "TheMovieDB::TV";def Lti = [[ 95897, ZQM],[123542, ZQM],[239779, ZQM],[257162, ZQM],[259140, ZQM],[276204, ZQM]];def fh = Lti.find { it[0] == id && it[1] == info.database } != null;def jJ = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def ceH = jJ[info.database];fh ? " ($y) [${ceH}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def YQx = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def rYL = sn.replaceAll(YQx.collect { "\\" + it }.join('|'), '_');def Pn = n.replaceAll(YQx.collect { "\\" + it }.join('|'), '_');def jh = rYL.contains(Pn) ? "" : rYL;jh == 'Season '+ s || jh == 'Series '+ s ? "" : jh ? " - " + jh : ""}{"/"}{def EBE = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def TC = EBE.find { ro ->  fn.lower().contains(ro.lower()) } ?: "";def Qim = any {TC} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};Qim ? "[$Qim] " : ""}{def ZQM = "TheMovieDB::TV";def mqc = [[NXu: 199928, wjt: "Nights With a Cat", IJ: ZQM],[NXu: 219816, wjt: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", IJ: ZQM],[NXu: 248707, wjt: "Neko Oji The Guy That Got Reincarnated As a Cat", IJ: ZQM],[NXu: 271003, wjt: "Yandere Dark Elf", IJ: ZQM],[NXu: 274741, wjt: "The Too-Perfect Saint", IJ: ZQM],[NXu: 275623, wjt: "Chuzenji-sensei", IJ: ZQM],[NXu: 281623, wjt: "SHIROHIYO", IJ: ZQM],[NXu: 288419, wjt: "Chikuwa Senki", IJ: ZQM]];def OY = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Qor = OY == "IMDb" ? "tt${id}" : id;def ILK = n;mqc.each {if (it.NXu == Qor && it.IJ == OY) {ILK = it.wjt}};def YQx = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def rYL = ILK.replaceAll(YQx.collect { "\\" + it }.join('|'), '');rYL = rYL.replaceAll(/(\s|\.)*$/, '');rYL}{" - "}{s00e00}{def YQx = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def rYL = t.replaceAll(YQx.collect { "\\" + it }.join('|'), '_');rYL = rYL.length() > 100 ? " " : " - $rYL ";def fd = any { e } { special };def hJs = "Episode $fd";def Nuy = rYL.contains(hJs) ? '' : rYL;Nuy != '' ? Nuy : ''}{" ["}{def UW = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"],["INSTA", "INSTAGRAM"],["ANIMENOTANE"]];def ncY = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def Mr = ["DB"];def OUN = ["Ruri-Saizen"];def qO = ["Erai-raws", "SubsPlease"];def rQa = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def bT = any {def FHI = UW.find { le ->  le.find { Mfr ->  fn.lower().contains(Mfr.lower()) } }[0];FHI = FHI.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {FHI = FHI.replace(".WEBRip", "");FHI = FHI + ".WEBRip"} else {FHI = FHI + ".WEB-DL"};FHI} {source} {ncY.find { UKL ->  group == UKL || rQa == UKL } ? "WEBRip" : ""} {Mr.find { UKL ->  group == UKL || rQa == UKL } ? "BDRip" : ""} {OUN.find { UKL ->  group == g__ || rQa == g__} ? "HDTVRip" : ""} {def gw = qO.find { skx ->  group == skx || rQa == skx} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : gw} {vs} {""};bT ? "$bT " : ""}{def UP = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $UP, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def WJ = any { audioLanguages.size() } { 0 };def to = WJ > 2 ? " MULTi-AUD" : WJ > 1 ? " DUAL-AUD" : "";def _Kl = WJ > 5 ? audioLanguages.take(5) : audioLanguages;def ym = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";to = WJ == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$to$ym";to ? to + _Kl.ISO2.joining(" ", " (", "").upper() + (WJ > 5 ? " ...)" : ")") : ""}{def iHs = text.language.collect {['zh-Hans': 'ZH-S','zh-Hant': 'ZH-T','ar-001': 'AR-MSA'].get(it,it).toUpperCase()}.unique();def WuT = any { iHs.size() } { 0 };def to = WuT > 2 ? ", MULTi" : WuT > 1 ? ", DUAL" : WuT == 1 ? ", SUB" : null;def _Kl = WuT > 5 ? iHs.take(5) : iHs;to ? to + _Kl.joining(" ", " (", "").upper() + (WuT > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def TDo = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def kf = subt;TDo.values().each { Cz -> if (kf.contains(Cz)) {kf = kf.replace(Cz, "")}};TDo.iso3b + kf}}{f.image ? "-thumb" : ""}