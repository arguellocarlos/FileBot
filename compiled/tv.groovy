{def QL = { System.getProperty(it) };def DGe = QL("os.name").toLowerCase().contains("windows");def mx = QL("user.name");def rzL = "/run/media/${mx}";def EUJ = DGe ? "H:/" : "$rzL/Videos";def M__ = [[YgE: "Books", mpd: "F:/", bYe: "$rzL/Books"],[YgE: "Data", mpd: "D:/", bYe: "$rzL/Data"],[YgE: "Games", mpd: "G:/", bYe: "$rzL/Games"],[YgE: "Music", mpd: "E:/", bYe: "$rzL/Music"],[YgE: "Videos", mpd: "H:/", bYe: "$rzL/Videos"]];def DJV = (M__.collect { it[DGe ? "mpd" : "bYe"] as File }.sort { Ni, gli ->  Ni.exists() <=> gli.exists() ?: Ni.diskSpace <=> gli.diskSpace }).last();def rvj = EUJ ?: DJV;"$rvj/"}{"Videos/"}{def yL = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def Cy = "TheMovieDB::TV";def m_Z = [[ 74180, Cy],[ 93821, Cy],[ 95897, Cy],[220118, Cy],[249891, Cy],[271026, Cy]];def KIN = [[236530, Cy]];def qQO = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def ch = qQO == "IMDb" ? "tt${id}" : id;def Gq = any { info.adult } { false };def dSN = m_Z.find { it[0] == ch && it[1] == qQO } != null;def SVV = KIN.find { it[0] == ch && it[1] == qQO } != null;def mKw = info.Keywords.findAll { it in yL } || dSN || Gq;mKw = SVV ? false : mKw;mKw ? "R18+ " : ""}{def csG = ["CN", "JP", "KR", "KP", "TW", "HK"];def fwv = ["aeni", "donghua", "anime"];def qE = any {anime} || info.Keywords.findAll { it in fwv } || (csG.contains(country) && genres =~ /Animation/);qE ? "Anime/" : "TV Series/"}{def Cy = "TheMovieDB::TV";def WX = [[Pn: 199928, fI: "Nights With a Cat", rBL: Cy],,[Pn: 248707, fI: "Neko Oji The Guy That Got Reincarnated As a Cat", rBL: Cy],[Pn: 270660, fI: "Pochars", rBL: Cy],[Pn: 280078, fI: "The All-devouring Whale Homecoming", rBL: Cy],[Pn; 283884: fI: "Chuhai Lips", rBL: Cy],[Pn: 288419, fI: "Chikuwa Senki", rBL: Cy]];def qQO = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def ch = qQO == "IMDb" ? "tt${id}" : id;def bw = n;WX.each {if (it.Pn == ch && it.rBL == qQO) {bw = it.fI}};def zXq = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def BHY = bw.replaceAll(zXq.collect { "\\" + it }.join('|'), '');BHY = BHY.replaceAll(/(\s|\.)*$/, '');BHY}{def Cy = "TheMovieDB::TV";def Ry = [[ 95897, Cy],[123542, Cy],[239779, Cy],[257162, Cy],[259140, Cy],[276204, Cy]];def BnO = Ry.find { it[0] == id && it[1] == info.database } != null;def tDE = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def VP = tDE[info.database];BnO ? " ($y) [${VP}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def zXq = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def BHY = sn.replaceAll(zXq.collect { "\\" + it }.join('|'), '_');def Fj = n.replaceAll(zXq.collect { "\\" + it }.join('|'), '_');def AGR = BHY.contains(Fj) ? "" : BHY;AGR == 'Season '+ s || AGR == 'Series '+ s ? "" : AGR ? " - " + AGR : ""}{"/"}{def ymN = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def ov = ymN.find { XD ->  fn.lower().contains(XD.lower()) } ?: "";def kmZ = any {ov} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};kmZ ? "[$kmZ] " : ""}{def Cy = "TheMovieDB::TV";def WX = [[Pn: 199928, fI: "Nights With a Cat", rBL: Cy],,[Pn: 248707, fI: "Neko Oji The Guy That Got Reincarnated As a Cat", rBL: Cy],[Pn: 270660, fI: "Pochars", rBL: Cy],[Pn: 280078, fI: "The All-devouring Whale Homecoming", rBL: Cy],[Pn; 283884: fI: "Chuhai Lips", rBL: Cy],[Pn: 288419, fI: "Chikuwa Senki", rBL: Cy]];def qQO = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def ch = qQO == "IMDb" ? "tt${id}" : id;def bw = n;WX.each {if (it.Pn == ch && it.rBL == qQO) {bw = it.fI}};def zXq = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def BHY = bw.replaceAll(zXq.collect { "\\" + it }.join('|'), '');BHY = BHY.replaceAll(/(\s|\.)*$/, '');BHY}{" - "}{s00e00}{def zXq = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def BHY = t.replaceAll(zXq.collect { "\\" + it }.join('|'), '_');BHY = BHY.length() > 100 ? " " : " - $BHY ";def Mc = any { e } { special };def RC = "Episode $Mc";def BmD = BHY.contains(RC) ? '' : BHY;BmD != '' ? BmD : ''}{" ["}{def gEb = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["FOD"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"],["INSTA", "INSTAGRAM"],["ANIMENOTANE"]];def tG = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def YX_ = ["DB"];def mEc = ["Ruri-Saizen"];def YAS = ["Erai-raws", "SubsPlease"];def uYs = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def xT = any {def VM = gEb.find { tR ->  tR.find { RVH ->  fn.lower().contains(RVH.lower()) } }[0];VM = VM.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {VM = VM.replace(".WEBRip", "");VM = VM + ".WEBRip"} else {VM = VM + ".WEB-DL"};VM} {source} {tG.find { qQN ->  group == qQN || uYs == qQN } ? "WEBRip" : ""} {YX_.find { qQN ->  group == qQN || uYs == qQN } ? "BDRip" : ""} {mEc.find { qQN ->  group == g__ || uYs == g__} ? "HDTVRip" : ""} {def yNJ = YAS.find { cRp ->  group == cRp || uYs == cRp} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : yNJ} {vs} {""};xT ? "$xT " : ""}{def MSD = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $MSD, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def DV = any { audioLanguages.size() } { 0 };def Bki = DV > 2 ? " MULTi-AUD" : DV > 1 ? " DUAL-AUD" : "";def Do = DV > 5 ? audioLanguages.take(5) : audioLanguages;def Yp = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";Bki = DV == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$Bki$Yp";Bki ? Bki + Do.ISO2.joining(" ", " (", "").upper() + (DV > 5 ? " ...)" : ")") : ""}{def tPt = text.language.collect {['zh-Hans': 'ZH-S','zh-Hant': 'ZH-T','ar-001': 'AR-MSA'].get(it,it).toUpperCase()}.unique();def Af = any { tPt.size() } { 0 };def Bki = Af > 2 ? ", MULTi" : Af > 1 ? ", DUAL" : Af == 1 ? ", SUB" : null;def Do = Af > 5 ? tPt.take(5) : tPt;Bki ? Bki + Do.joining(" ", " (", "").upper() + (Af > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def jNf = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def KA = subt;jNf.values().each { lZ -> if (KA.contains(lZ)) {KA = KA.replace(lZ, "")}};jNf.iso3b + KA}}{f.image ? "-thumb" : ""}