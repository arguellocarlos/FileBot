{def tf = { System.getProperty(it) };def _lW = tf("os.name").toLowerCase().contains("windows");def XVX = tf("user.name");def OGw = "/run/media/${XVX}";def vb = _lW ? "H:/" : "$OGw/Videos";def FI = [[VX: "Books", fyt: "F:/", ML: "$OGw/Books"],[VX: "Data", fyt: "D:/", ML: "$OGw/Data"],[VX: "Games", fyt: "G:/", ML: "$OGw/Games"],[VX: "Music", fyt: "E:/", ML: "$OGw/Music"],[VX: "Videos", fyt: "H:/", ML: "$OGw/Videos"]];def vop = (FI.collect { it[_lW ? "fyt" : "ML"] as File }.sort { Jq, lv ->  Jq.exists() <=> lv.exists() ?: Jq.diskSpace <=> lv.diskSpace }).last();def fgZ = vb ?: vop;"$fgZ/"}{"Videos/"}{def yB = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity"];def sWe = "TheMovieDB::TV";def QTV = [[ 74180, sWe],[ 93821, sWe],[ 95897, sWe],[220118, sWe],[271026, sWe]];def fv = [[236530, sWe]];def PF = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def rr = PF == "IMDb" ? "tt${id}" : id;def _D = any { info.adult } { false };def DC = QTV.find { it[0] == rr && it[1] == PF } != null;def gsK = fv.find { it[0] == rr && it[1] == PF } != null;def EY = info.Keywords.findAll { it in yB } || DC || _D;EY = gsK ? false : EY;EY ? "R18+ " : ""}{def Lca = ["CN", "JP", "KR", "KP", "TW", "HK"];def oo = ["aeni", "donghua", "anime"];def Wng = any {anime} || info.Keywords.findAll { it in oo } || (Lca.contains(country) && genres =~ /Animation/);Wng ? "Anime/" : "TV Series/"}{def sWe = "TheMovieDB::TV";def HGP = [[DDz: 68854, mCF: "From Me to You", FS: sWe],[DDz: 219816, mCF: "Fate/Grand Order: Fujimaru Ritsuka Doesn't Get It", FS: sWe],[DDz: 245561, mCF: "Okitsura", FS: sWe],[DDz: 248707, mCF: "Neko Oji The Guy That Got Reincarnated As a Cat", FS: sWe],[DDz: 259559, mCF: "Headhunted to Another World", FS: sWe],[DDz: 261301, mCF: "Botsuraku Kizoku", FS: sWe],[DDz: 262141, mCF: "Can You Keep a Secret", FS: sWe],[DDz: 276204, mCF: "Bogus Skill Fruitmaster", FS: sWe]];def PF = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def rr = PF == "IMDb" ? "tt${id}" : id;def aLX = n;HGP.each {if (it.DDz == rr && it.FS == PF) {aLX = it.mCF}};def pGQ = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def _UO = aLX.replaceAll(pGQ.collect { "\\" + it }.join('|'), '');_UO = _UO.replaceAll(/(\s|\.)*$/, '');_UO}{def sWe = "TheMovieDB::TV";def sF = [[ 95897, sWe],[123542, sWe],[235973, sWe],[239779, sWe],[257162, sWe],[259140, sWe],[276204, sWe]];def yZ = sF.find { it[0] == id && it[1] == info.database } != null;def rxI = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def sCW = rxI[info.database];yZ ? " ($y) [${sCW}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def pGQ = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def _UO = sn.replaceAll(pGQ.collect { "\\" + it }.join('|'), '_');def zS = n.replaceAll(pGQ.collect { "\\" + it }.join('|'), '_');def xr = _UO.contains(zS) ? "" : _UO;xr == 'Season '+ s ? "" : xr ? " - " + xr : ""}{"/"}{def Zoh = ["Alqanime","BlackLuster","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","Samehadaku"];def bx = Zoh.find { FdW ->  fn.lower().contains(FdW.lower()) } ?: "";def zD = any {(fn =~ /^\[(.*?)\]/)[0][1]} {bx} {group} {""};zD ? "[$zD] " : ""}{def sWe = "TheMovieDB::TV";def HGP = [[DDz: 68854, mCF: "From Me to You", FS: sWe],[DDz: 219816, mCF: "Fate/Grand Order: Fujimaru Ritsuka Doesn't Get It", FS: sWe],[DDz: 245561, mCF: "Okitsura", FS: sWe],[DDz: 248707, mCF: "Neko Oji The Guy That Got Reincarnated As a Cat", FS: sWe],[DDz: 259559, mCF: "Headhunted to Another World", FS: sWe],[DDz: 261301, mCF: "Botsuraku Kizoku", FS: sWe],[DDz: 262141, mCF: "Can You Keep a Secret", FS: sWe],[DDz: 276204, mCF: "Bogus Skill Fruitmaster", FS: sWe]];def PF = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def rr = PF == "IMDb" ? "tt${id}" : id;def aLX = n;HGP.each {if (it.DDz == rr && it.FS == PF) {aLX = it.mCF}};def pGQ = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def _UO = aLX.replaceAll(pGQ.collect { "\\" + it }.join('|'), '');_UO = _UO.replaceAll(/(\s|\.)*$/, '');_UO}{" - "}{s00e00}{def pGQ = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def _UO = t.replaceAll(pGQ.collect { "\\" + it }.join('|'), '_');def UDQ = any { e } { special };_UO = _UO.length() > 100 ? " " : " - $_UO ";_UO == " - Episode $UDQ " ? " " : _UO}{" ["}{def TE = [["ABEMA"],["ADN"],["BBC"],["BILI", "B-Global", "BiliIntl", "B-Site", "BiliCN"],["BOOKCUBE"],["COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LAFTEL", "LFTL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["SHAHID"],["TVER"],["UNEXT"],["WETV"],["YTB", "YT.WEB-DL", "YOUTUBE"]];def RJ = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs", "SAMEHADAKU"];def Sp = ["Erai-raws", "SubsPlease"];def jPe = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def SKN = any {def eRS = TE.find { wx ->  wx.find { nL ->  fn.lower().contains(nL.lower()) } }[0];eRS = eRS.replace(".WEB-DL", "");eRS ? "${eRS}.WEB-DL" : ""} {source} {RJ.find { nu ->  group == nu || jPe == nu } ? "WEBRip" : ""} {def uWL = Sp.find { B_I ->  group == B_I || jPe == B_I} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : uWL} {vs} {""};SKN ? "$SKN " : ""}{def bSd = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $bSd, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def Xk = " Dub";def ig = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : Xk;ig = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : ig;ig}{def hp = any { audioLanguages.size() } { 0 };def ig = hp > 2 ? " MAud" : hp > 1 ? " DAud" : null;def MZv = hp > 5 ? audioLanguages.take(5) : audioLanguages;ig ? ig + MZv.joining(" ", " (", "").upper() + (hp > 5 ? " ...)" : ")") : ""}{def ad = any { textLanguages.size() } { 0 };def ig = ad > 2 ? ", MSub" : ad > 1 ? ", DSub" : null;def MZv = ad > 5 ? textLanguages.take(5) : textLanguages;ig ? ig + MZv.joining(" ", " (", "").upper() + (ad > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def iTX = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def rD = subt;iTX.values().each { TXp -> if (rD.contains(TXp)) {rD = rD.replace(TXp, "")}};iTX.iso3b + rD}}{f.image ? "-thumb" : ""}