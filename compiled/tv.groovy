{def Cjn = { System.getProperty(it) };def pV = Cjn("os.name").toLowerCase().contains("windows");def ol = Cjn("user.name");def prB = "/run/media/${ol}";def JL = pV ? "H:/" : "$prB/Videos";def HP = [[wP: "Books", fDA: "F:/", vy: "$prB/Books"],[wP: "Data", fDA: "D:/", vy: "$prB/Data"],[wP: "Games", fDA: "G:/", vy: "$prB/Games"],[wP: "Music", fDA: "E:/", vy: "$prB/Music"],[wP: "Videos", fDA: "H:/", vy: "$prB/Videos"]];def FFc = (HP.collect { it[pV ? "fDA" : "vy"] as File }.sort { rg, kW ->  rg.exists() <=> kW.exists() ?: rg.diskSpace <=> kW.diskSpace }).last();def kpf = JL ?: FFc;"$kpf/"}{"Videos/"}{def sU = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity"];def VIy = "TheMovieDB::TV";def aBE = [[ 74180, VIy],[ 93821, VIy],[ 95897, VIy],[220118, VIy],[271026, VIy]];def HfI = [[236530, VIy]];def upW = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def oDN = upW == "IMDb" ? "tt${id}" : id;def QZY = any { info.adult } { false };def XHb = aBE.find { it[0] == oDN && it[1] == upW } != null;def gGY = HfI.find { it[0] == oDN && it[1] == upW } != null;def LFL = info.Keywords.findAll { it in sU } || XHb || QZY;LFL = gGY ? false : LFL;LFL ? "R18+ " : ""}{def JAA = ["CN", "JP", "KR", "KP", "TW", "HK"];def NxT = ["aeni", "donghua", "anime"];def hQ = any {anime} || info.Keywords.findAll { it in NxT } || (JAA.contains(country) && genres =~ /Animation/);hQ ? "Anime/" : "TV Series/"}{def VIy = "TheMovieDB::TV";def Js = [[My: 68854, LZr: "From Me to You", Eq: VIy],[My: 219816, LZr: "Fate/Grand Order: Fujimaru Ritsuka Doesn't Get It", Eq: VIy],[My: 245561, LZr: "Okitsura", Eq: VIy],[My: 248707, LZr: "Neko Oji The Guy That Got Reincarnated As a Cat", Eq: VIy],[My: 259559, LZr: "Headhunted to Another World", Eq: VIy],[My: 261301, LZr: "Botsuraku Kizoku", Eq: VIy],[My: 262141, LZr: "Can You Keep a Secret", Eq: VIy],[My: 270657, LZr: "Tono to Inu", Eq: VIy],[My: 276204, LZr: "Bogus Skill Fruitmaster", Eq: VIy]];def upW = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def oDN = upW == "IMDb" ? "tt${id}" : id;def ZI = n;Js.each {if (it.My == oDN && it.Eq == upW) {ZI = it.LZr}};def IH = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def nyp = ZI.replaceAll(IH.collect { "\\" + it }.join('|'), '');nyp = nyp.replaceAll(/(\s|\.)*$/, '');nyp}{def VIy = "TheMovieDB::TV";def hV = [[ 95897, VIy],[123542, VIy],[235973, VIy],[239779, VIy],[257162, VIy],[259140, VIy],[276204, VIy]];def Cg = hV.find { it[0] == id && it[1] == info.database } != null;def si = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def DT = si[info.database];Cg ? " ($y) [${DT}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def IH = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def nyp = sn.replaceAll(IH.collect { "\\" + it }.join('|'), '_');def XM = n.replaceAll(IH.collect { "\\" + it }.join('|'), '_');def DI = nyp.contains(XM) ? "" : nyp;DI == 'Season '+ s ? "" : DI ? " - " + DI : ""}{"/"}{def FnU = ["Alqanime","BlackLuster","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","Samehadaku"];def _L = FnU.find { vyU ->  fn.lower().contains(vyU.lower()) } ?: "";def yz = any {(fn =~ /^\[(.*?)\]/)[0][1]} {_L} {group} {""};yz ? "[$yz] " : ""}{def VIy = "TheMovieDB::TV";def Js = [[My: 68854, LZr: "From Me to You", Eq: VIy],[My: 219816, LZr: "Fate/Grand Order: Fujimaru Ritsuka Doesn't Get It", Eq: VIy],[My: 245561, LZr: "Okitsura", Eq: VIy],[My: 248707, LZr: "Neko Oji The Guy That Got Reincarnated As a Cat", Eq: VIy],[My: 259559, LZr: "Headhunted to Another World", Eq: VIy],[My: 261301, LZr: "Botsuraku Kizoku", Eq: VIy],[My: 262141, LZr: "Can You Keep a Secret", Eq: VIy],[My: 270657, LZr: "Tono to Inu", Eq: VIy],[My: 276204, LZr: "Bogus Skill Fruitmaster", Eq: VIy]];def upW = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def oDN = upW == "IMDb" ? "tt${id}" : id;def ZI = n;Js.each {if (it.My == oDN && it.Eq == upW) {ZI = it.LZr}};def IH = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def nyp = ZI.replaceAll(IH.collect { "\\" + it }.join('|'), '');nyp = nyp.replaceAll(/(\s|\.)*$/, '');nyp}{" - "}{s00e00}{def IH = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def nyp = t.replaceAll(IH.collect { "\\" + it }.join('|'), '_');nyp = nyp.length() > 100 ? " " : " - $nyp ";def UBt = any { e } { special };def oMO = "Episode $UBt";def _v = nyp.contains(oMO) ? '' : nyp;_v != '' ? _v : ''}{" ["}{def QPF = [["ABEMA"],["ADN"],["BILI", "B-Global", "BiliIntl", "B-Site", "BiliCN"],["COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LAFTEL", "LFTL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["SHAHID"],["TVER"],["UNEXT"],["WETV"],["YTB", "YT.WEB-DL", "YOUTUBE"]];def QFe = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def WDC = ["Erai-raws", "SubsPlease"];def FLV = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def Zw = any {def nvI = QPF.find { dBb ->  dBb.find { QKA ->  fn.lower().contains(QKA.lower()) } }[0];nvI = nvI.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {nvI = nvI + ".WEBRip"} else if (fn.contains("WEB-DL") || fn.contains("WEBDL")) {nvI = nvI + ".WEB-DL"};nvI} {source} {QFe.find { ZU ->  group == ZU || FLV == ZU } ? "WEBRip" : ""} {def bqa = WDC.find { Fu ->  group == Fu || FLV == Fu} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : bqa} {vs} {""};Zw ? "$Zw " : ""}{def cNN = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $cNN, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def JhK = " Dub";def lx = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : JhK;lx = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : lx;lx}{def sL = any { audioLanguages.size() } { 0 };def lx = sL > 2 ? " MAud" : sL > 1 ? " DAud" : null;def OSv = sL > 5 ? audioLanguages.take(5) : audioLanguages;lx ? lx + OSv.joining(" ", " (", "").upper() + (sL > 5 ? " ...)" : ")") : ""}{def sA = any { textLanguages.size() } { 0 };def lx = sA > 2 ? ", MSub" : sA > 1 ? ", DSub" : null;def OSv = sA > 5 ? textLanguages.take(5) : textLanguages;lx ? lx + OSv.joining(" ", " (", "").upper() + (sA > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def FH = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def dr = subt;FH.values().each { zk -> if (dr.contains(zk)) {dr = dr.replace(zk, "")}};FH.iso3b + dr}}{f.image ? "-thumb" : ""}