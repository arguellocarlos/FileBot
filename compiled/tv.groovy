{def SFM = { System.getProperty(it) };def BVf = SFM("os.name").toLowerCase().contains("windows");def dhM = SFM("user.name");def I_ = "/run/media/${dhM}";def Dhn = BVf ? "H:/" : "$I_/Videos";def ZwB = [[It: "Books", el: "F:/", SwC: "$I_/Books"],[It: "Data", el: "D:/", SwC: "$I_/Data"],[It: "Games", el: "G:/", SwC: "$I_/Games"],[It: "Music", el: "E:/", SwC: "$I_/Music"],[It: "Videos", el: "H:/", SwC: "$I_/Videos"]];def qL = (ZwB.collect { it[BVf ? "el" : "SwC"] as File }.sort { wvm, Lc ->  wvm.exists() <=> Lc.exists() ?: wvm.diskSpace <=> Lc.diskSpace }).last();def pm = Dhn ?: qL;"$pm/"}{"Videos/"}{def yr = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def Xm = "TheMovieDB::TV";def EoU = [[ 74180, Xm],[ 93821, Xm],[ 95897, Xm],[220118, Xm],[249891, Xm],[271026, Xm]];def _Q = [[236530, Xm]];def gbr = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def fU = gbr == "IMDb" ? "tt${id}" : id;def gE = any { info.adult } { false };def kV = EoU.find { it[0] == fU && it[1] == gbr } != null;def JUH = _Q.find { it[0] == fU && it[1] == gbr } != null;def USD = info.Keywords.findAll { it in yr } || kV || gE;USD = JUH ? false : USD;USD ? "R18+ " : ""}{def wH = ["CN", "JP", "KR", "KP", "TW", "HK"];def ngt = ["aeni", "donghua", "anime"];def Ql = any {anime} || info.Keywords.findAll { it in ngt } || (wH.contains(country) && genres =~ /Animation/);Ql ? "Anime/" : "TV Series/"}{def Xm = "TheMovieDB::TV";def niD = [[Nn: 199928, YDF: "Nights With a Cat", aB: Xm],[Nn: 219816, YDF: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", aB: Xm],[Nn: 248707, YDF: "Neko Oji The Guy That Got Reincarnated As a Cat", aB: Xm],[Nn: 270657, YDF: "Tono to Inu", aB: Xm],[Nn: 274741, YDF: "The Too-Perfect Saint", aB: Xm]];def gbr = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def fU = gbr == "IMDb" ? "tt${id}" : id;def Wr = n;niD.each {if (it.Nn == fU && it.aB == gbr) {Wr = it.YDF}};def iXI = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Nf = Wr.replaceAll(iXI.collect { "\\" + it }.join('|'), '');Nf = Nf.replaceAll(/(\s|\.)*$/, '');Nf}{def Xm = "TheMovieDB::TV";def qI = [[ 95897, Xm],[123542, Xm],[235973, Xm],[239779, Xm],[257162, Xm],[259140, Xm],[276204, Xm]];def vY = qI.find { it[0] == id && it[1] == info.database } != null;def KK = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def YuQ = KK[info.database];vY ? " ($y) [${YuQ}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def iXI = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Nf = sn.replaceAll(iXI.collect { "\\" + it }.join('|'), '_');def EM = n.replaceAll(iXI.collect { "\\" + it }.join('|'), '_');def hr = Nf.contains(EM) ? "" : Nf;hr == 'Season '+ s || hr == 'Series '+ s ? "" : hr ? " - " + hr : ""}{"/"}{def TR = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def rV = TR.find { Bzt ->  fn.lower().contains(Bzt.lower()) } ?: "";def Zc = any {rV} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};Zc ? "[$Zc] " : ""}{def Xm = "TheMovieDB::TV";def niD = [[Nn: 199928, YDF: "Nights With a Cat", aB: Xm],[Nn: 219816, YDF: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", aB: Xm],[Nn: 248707, YDF: "Neko Oji The Guy That Got Reincarnated As a Cat", aB: Xm],[Nn: 270657, YDF: "Tono to Inu", aB: Xm],[Nn: 274741, YDF: "The Too-Perfect Saint", aB: Xm]];def gbr = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def fU = gbr == "IMDb" ? "tt${id}" : id;def Wr = n;niD.each {if (it.Nn == fU && it.aB == gbr) {Wr = it.YDF}};def iXI = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Nf = Wr.replaceAll(iXI.collect { "\\" + it }.join('|'), '');Nf = Nf.replaceAll(/(\s|\.)*$/, '');Nf}{" - "}{s00e00}{def iXI = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Nf = t.replaceAll(iXI.collect { "\\" + it }.join('|'), '_');Nf = Nf.length() > 100 ? " " : " - $Nf ";def hU = any { e } { special };def Gbm = "Episode $hU";def bB = Nf.contains(Gbm) ? '' : Nf;bB != '' ? bB : ''}{" ["}{def cke = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LAFTEL", "LFTL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["WETV"]];def iMC = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def zg = ["DB"];def fq = ["Ruri-Saizen"];def TE = ["Erai-raws", "SubsPlease"];def SY = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def RKo = any {def VA = cke.find { Bed ->  Bed.find { hge ->  fn.lower().contains(hge.lower()) } }[0];VA = VA.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {VA = VA.replace(".WEBRip", "");VA = VA + ".WEBRip"} else {VA = VA + ".WEB-DL"};VA} {source} {iMC.find { AEp ->  group == AEp || SY == AEp } ? "WEBRip" : ""} {zg.find { AEp ->  group == AEp || SY == AEp } ? "BDRip" : ""} {fq.find { AEp ->  group == g__ || SY == g__} ? "HDTVRip" : ""} {def gMU = TE.find { LM ->  group == LM || SY == LM} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : gMU} {vs} {""};RKo ? "$RKo " : ""}{def US = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $US, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def FUC = any { audioLanguages.size() } { 0 };def KOY = FUC > 2 ? " MULTi-AUD" : FUC > 1 ? " DUAL-AUD" : "";def Ilu = FUC > 5 ? audioLanguages.take(5) : audioLanguages;def EB = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";KOY = FUC == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$KOY$EB";KOY ? KOY + Ilu.ISO2.joining(" ", " (", "").upper() + (FUC > 5 ? " ...)" : ")") : ""}{def tp = any { textLanguages.size() } { 0 };def KOY = tp > 2 ? ", MULTi" : tp > 1 ? ", DUAL" : tp == 1 ? ", SUB" : null;def Ilu = tp > 5 ? textLanguages.take(5) : textLanguages;KOY ? KOY + Ilu.ISO2.joining(" ", " (", "").upper() + (tp > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def lt = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def kE = subt;lt.values().each { hsy -> if (kE.contains(hsy)) {kE = kE.replace(hsy, "")}};lt.iso3b + kE}}{f.image ? "-thumb" : ""}