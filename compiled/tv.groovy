{def Qir = { System.getProperty(it) };def khC = Qir("os.name").toLowerCase().contains("windows");def _JX = Qir("user.name");def Omv = "/run/media/${_JX}";def bm = khC ? "H:/" : "$Omv/Videos";def YUJ = [[BSX: "Books", azx: "F:/", QH_: "$Omv/Books"],[BSX: "Data", azx: "D:/", QH_: "$Omv/Data"],[BSX: "Games", azx: "G:/", QH_: "$Omv/Games"],[BSX: "Music", azx: "E:/", QH_: "$Omv/Music"],[BSX: "Videos", azx: "H:/", QH_: "$Omv/Videos"]];def leC = (YUJ.collect { it[khC ? "azx" : "QH_"] as File }.sort { iiI, v_ ->  iiI.exists() <=> v_.exists() ?: iiI.diskSpace <=> v_.diskSpace }).last();def oOH = bm ?: leC;"$oOH/"}{"Videos/"}{def nDu = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content"];def xQM = "TheMovieDB::TV";def hP = [[271026, xQM],[220118, xQM],[ 74180, xQM]];def Mw = [[236530, xQM]];def avh = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def WxQ = avh == "IMDb" ? "tt${id}" : id;def SgE = any { info.adult } { false };def an = hP.find { it[0] == WxQ && it[1] == avh } != null;def kES = Mw.find { it[0] == WxQ && it[1] == avh } != null;def vX = info.Keywords.findAll { it in nDu } || an || SgE;vX = kES ? false : vX;vX ? "R18+ " : ""}{def IbG = ["CN", "JP", "KR", "KP", "TW", "HK"];def eVe = ["aeni", "donghua", "anime"];def MR = any {anime} || info.Keywords.findAll { it in eVe } || (IbG.contains(country) && genres =~ /Animation/);MR ? "Anime/" : "TV Series/"}{def xQM = "TheMovieDB::TV";def zSf = [[oaD: 68854, mtL: "From Me to You", mZc: xQM],[oaD: 234538, mtL: "Demon Lord 2099", mZc: xQM]];def avh = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def WxQ = avh == "IMDb" ? "tt${id}" : id;def RJR = n;zSf.each {if (it.oaD == WxQ && it.mZc == avh) {RJR = it.mtL}};def uZL = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def om = RJR.replaceAll(uZL.collect { "\\" + it }.join('|'), '');om = om.replaceAll(/(\s|\.)*$/, '');om}{def xQM = "TheMovieDB::TV";def RcG = [[123542, xQM],[235973, xQM],[239779, xQM],[257162, xQM],[259140, xQM]];def KZ = RcG.find { it[0] == id && it[1] == info.database } != null;def oR = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def iVo = oR[info.database];KZ ? " ($y) [${iVo}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def uZL = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def om = sn.replaceAll(uZL.collect { "\\" + it }.join('|'), '_');def te_ = n.replaceAll(uZL.collect { "\\" + it }.join('|'), '_');def Td = om.contains(te_) ? "" : om;Td == 'Season '+ s ? "" : Td ? " - " + Td : ""}{"/"}{def UFQ = ["Alqanime","BlackLuster","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws"];def oeu = UFQ.find { yCS ->  fn.contains(yCS) } ?: "";def sau = any {(fn =~ /^\[(.*?)\]/)[0][1]} {oeu} {group} {""};sau ? "[$sau] " : ""}{def xQM = "TheMovieDB::TV";def zSf = [[oaD: 68854, mtL: "From Me to You", mZc: xQM],[oaD: 234538, mtL: "Demon Lord 2099", mZc: xQM]];def avh = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def WxQ = avh == "IMDb" ? "tt${id}" : id;def RJR = n;zSf.each {if (it.oaD == WxQ && it.mZc == avh) {RJR = it.mtL}};def uZL = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def om = RJR.replaceAll(uZL.collect { "\\" + it }.join('|'), '');om = om.replaceAll(/(\s|\.)*$/, '');om}{" - "}{s00e00}{def uZL = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def om = t.replaceAll(uZL.collect { "\\" + it }.join('|'), '_');def Re = any { e } { special };om = om.length() > 100 ? " " : " - $om ";om == " - Episode $Re " ? " " : om}{" ["}{def PI = [["ABEMA"],["ADN"],["BILI", "B-Global", "BiliIntl", "B-Site", "BiliCN"],["COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LAFTEL", "LFTL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["SHAHID"],["TVER"],["UNEXT"],["WETV"],["YT.WEB-DL", "YOUTUBE", "YTB"]];def WCS = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs"];def te = ["Erai-raws", "SubsPlease"];def wt = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def bO = any {def RPk = PI.find { Ffv ->  Ffv.find { jZ ->  fn.lower().contains(jZ.lower()) } }[0];RPk = RPk.replace(".WEB-DL", "");RPk ? "${RPk}.WEB-DL" : ""} {} {source} {WCS.find { Wez ->  group == Wez || wt == Wez } ? "WEBRip" : ""} {def PV = te.find { MfQ ->  group == MfQ || wt == MfQ} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : PV} {vs} {""};bO ? "$bO " : ""}{def MUP = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $MUP, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def kt = " Dub";def MRd = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : kt;MRd = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : MRd;MRd}{def tcZ = any { audioLanguages.size() } { 0 };def MRd = tcZ > 2 ? " MAud" : tcZ > 1 ? " DAud" : null;def GC = tcZ > 5 ? audioLanguages.take(5) : audioLanguages;MRd ? MRd + GC.joining(" ", " (", "").upper() + (tcZ > 5 ? " ...)" : ")") : ""}{def YKD = any { textLanguages.size() } { 0 };def MRd = YKD > 2 ? ", MSub" : YKD > 1 ? ", DSub" : null;def GC = YKD > 5 ? textLanguages.take(5) : textLanguages;MRd ? MRd + GC.joining(" ", " (", "").upper() + (YKD > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def Bf_ = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def ad = subt;Bf_.values().each { HhZ -> if (ad.contains(HhZ)) {ad = ad.replace(HhZ, "")}};Bf_.iso3b + ad}}{f.image ? "-thumb" : ""}