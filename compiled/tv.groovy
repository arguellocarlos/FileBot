{def DAu = { System.getProperty(it) };def lXg = DAu("os.name").toLowerCase().contains("windows");def Wi = DAu("user.name");def SKz = "/run/media/${Wi}";def lRE = lXg ? "H:/" : "$SKz/Videos";def dqh = [[fr: "Books", Le: "F:/", TOU: "$SKz/Books"],[fr: "Data", Le: "D:/", TOU: "$SKz/Data"],[fr: "Games", Le: "G:/", TOU: "$SKz/Games"],[fr: "Music", Le: "E:/", TOU: "$SKz/Music"],[fr: "Videos", Le: "H:/", TOU: "$SKz/Videos"]];def AY = (dqh.collect { it[lXg ? "Le" : "TOU"] as File }.sort { ESM, _qn ->  ESM.exists() <=> _qn.exists() ?: ESM.diskSpace <=> _qn.diskSpace }).last();def tPr = lRE ?: AY;"$tPr/"}{"Videos/"}{def Bc = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content"];def Og = "TheMovieDB::TV";def vTy = [[ 74180, Og],[ 93821, Og],[ 95897, Og],[220118, Og],[271026, Og]];def Vwq = [[236530, Og]];def DD = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def PW = DD == "IMDb" ? "tt${id}" : id;def gl = any { info.adult } { false };def _j = vTy.find { it[0] == PW && it[1] == DD } != null;def jwU = Vwq.find { it[0] == PW && it[1] == DD } != null;def ry = info.Keywords.findAll { it in Bc } || _j || gl;ry = jwU ? false : ry;ry ? "R18+ " : ""}{def RMP = ["CN", "JP", "KR", "KP", "TW", "HK"];def UXB = ["aeni", "donghua", "anime"];def oI = any {anime} || info.Keywords.findAll { it in UXB } || (RMP.contains(country) && genres =~ /Animation/);oI ? "Anime/" : "TV Series/"}{def Og = "TheMovieDB::TV";def qL = [[aI: 68854, OeD: "From Me to You", cF: Og],[aI: 219816, OeD: "Fate/Grand Order: Fujimaru Ritsuka Doesn't Get It", cF: Og],[aI: 234538, OeD: "Demon Lord 2099", cF: Og]];def DD = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def PW = DD == "IMDb" ? "tt${id}" : id;def Do = n;qL.each {if (it.aI == PW && it.cF == DD) {Do = it.OeD}};def xYv = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def wH = Do.replaceAll(xYv.collect { "\\" + it }.join('|'), '');wH = wH.replaceAll(/(\s|\.)*$/, '');wH}{def Og = "TheMovieDB::TV";def sm = [[ 95897, Og],[123542, Og],[235973, Og],[239779, Og],[257162, Og],[259140, Og]];def zXi = sm.find { it[0] == id && it[1] == info.database } != null;def Lt = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def qt = Lt[info.database];zXi ? " ($y) [${qt}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def xYv = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def wH = sn.replaceAll(xYv.collect { "\\" + it }.join('|'), '_');def Me = n.replaceAll(xYv.collect { "\\" + it }.join('|'), '_');def nO = wH.contains(Me) ? "" : wH;nO == 'Season '+ s ? "" : nO ? " - " + nO : ""}{"/"}{def vi = ["Alqanime","BlackLuster","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws"];def gw = vi.find { hcx ->  fn.contains(hcx) } ?: "";def eO = any {(fn =~ /^\[(.*?)\]/)[0][1]} {gw} {group} {""};eO ? "[$eO] " : ""}{def Og = "TheMovieDB::TV";def qL = [[aI: 68854, OeD: "From Me to You", cF: Og],[aI: 219816, OeD: "Fate/Grand Order: Fujimaru Ritsuka Doesn't Get It", cF: Og],[aI: 234538, OeD: "Demon Lord 2099", cF: Og]];def DD = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def PW = DD == "IMDb" ? "tt${id}" : id;def Do = n;qL.each {if (it.aI == PW && it.cF == DD) {Do = it.OeD}};def xYv = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def wH = Do.replaceAll(xYv.collect { "\\" + it }.join('|'), '');wH = wH.replaceAll(/(\s|\.)*$/, '');wH}{" - "}{s00e00}{def xYv = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def wH = t.replaceAll(xYv.collect { "\\" + it }.join('|'), '_');def Qhy = any { e } { special };wH = wH.length() > 100 ? " " : " - $wH ";wH == " - Episode $Qhy " ? " " : wH}{" ["}{def Fc = [["ABEMA"],["ADN"],["BILI", "B-Global", "BiliIntl", "B-Site", "BiliCN"],["COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LAFTEL", "LFTL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["SHAHID"],["TVER"],["UNEXT"],["WETV"],["YT.WEB-DL", "YOUTUBE", "YTB"]];def bry = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs"];def orc = ["Erai-raws", "SubsPlease"];def Ts = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def Ep = any {def eZa = Fc.find { ExJ ->  ExJ.find { Na ->  fn.lower().contains(Na.lower()) } }[0];eZa = eZa.replace(".WEB-DL", "");def o_n = source.contains("WEB-DL");def Bh = source ? ".${source}" : "";o_n ? "${eZa}.WEB-DL" : eZa ? "${eZa}${Bh}" : ""} {} {source} {bry.find { NGw ->  group == NGw || Ts == NGw } ? "WEBRip" : ""} {def Shb = orc.find { xJH ->  group == xJH || Ts == xJH} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : Shb} {vs} {""};Ep ? "$Ep " : ""}{def yG = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $yG, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def Qi = " Dub";def Lx = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : Qi;Lx = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : Lx;Lx}{def fp = any { audioLanguages.size() } { 0 };def Lx = fp > 2 ? " MAud" : fp > 1 ? " DAud" : null;def Sg = fp > 5 ? audioLanguages.take(5) : audioLanguages;Lx ? Lx + Sg.joining(" ", " (", "").upper() + (fp > 5 ? " ...)" : ")") : ""}{def zqN = any { textLanguages.size() } { 0 };def Lx = zqN > 2 ? ", MSub" : zqN > 1 ? ", DSub" : null;def Sg = zqN > 5 ? textLanguages.take(5) : textLanguages;Lx ? Lx + Sg.joining(" ", " (", "").upper() + (zqN > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def oD = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def tqQ = subt;oD.values().each { JZn -> if (tqQ.contains(JZn)) {tqQ = tqQ.replace(JZn, "")}};oD.iso3b + tqQ}}{f.image ? "-thumb" : ""}