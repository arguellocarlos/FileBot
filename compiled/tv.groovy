{def E_i = { System.getProperty(it) };def UAa = E_i("os.name").toLowerCase().contains("windows");def fQ = E_i("user.name");def Kil = "/run/media/${fQ}";def cZY = UAa ? "H:/" : "$Kil/Videos";def xv = [[Jy: "Books", CSt: "F:/", iGJ: "$Kil/Books"],[Jy: "Data", CSt: "D:/", iGJ: "$Kil/Data"],[Jy: "Games", CSt: "G:/", iGJ: "$Kil/Games"],[Jy: "Music", CSt: "E:/", iGJ: "$Kil/Music"],[Jy: "Videos", CSt: "H:/", iGJ: "$Kil/Videos"]];def _J = (xv.collect { it[UAa ? "CSt" : "iGJ"] as File }.sort { AgF, ao ->  AgF.exists() <=> ao.exists() ?: AgF.diskSpace <=> ao.diskSpace }).last();def KOC = cZY ?: _J;"$KOC/"}{"Videos/"}{def dSa = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def HN = "TheMovieDB::TV";def AOH = [[ 74180, HN],[ 93821, HN],[ 95897, HN],[220118, HN],[249891, HN],[271026, HN]];def hq = [[236530, HN]];def LRf = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def ta = LRf == "IMDb" ? "tt${id}" : id;def Po = any { info.adult } { false };def hy = AOH.find { it[0] == ta && it[1] == LRf } != null;def HT = hq.find { it[0] == ta && it[1] == LRf } != null;def gbM = info.Keywords.findAll { it in dSa } || hy || Po;gbM = HT ? false : gbM;gbM ? "R18+ " : ""}{def Qka = ["CN", "JP", "KR", "KP", "TW", "HK"];def HWT = ["aeni", "donghua", "anime"];def sn = any {anime} || info.Keywords.findAll { it in HWT } || (Qka.contains(country) && genres =~ /Animation/);sn ? "Anime/" : "TV Series/"}{def HN = "TheMovieDB::TV";def iZ = [[dJ: 199928, IFU: "Nights With a Cat", HsS: HN],[dJ: 219816, IFU: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", HsS: HN],[dJ: 248707, IFU: "Neko Oji The Guy That Got Reincarnated As a Cat", HsS: HN],[dJ: 270657, IFU: "Tono to Inu", HsS: HN],[dJ: 271003, IFU: "Yandere Dark Elf", HsS: HN],[dJ: 274741, IFU: "The Too-Perfect Saint", HsS: HN],[dJ: 288419, IFU: "Chikuwa Senki", HsS: HN]];def LRf = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def ta = LRf == "IMDb" ? "tt${id}" : id;def Ll = n;iZ.each {if (it.dJ == ta && it.HsS == LRf) {Ll = it.IFU}};def OJH = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def ouE = Ll.replaceAll(OJH.collect { "\\" + it }.join('|'), '');ouE = ouE.replaceAll(/(\s|\.)*$/, '');ouE}{def HN = "TheMovieDB::TV";def QEu = [[ 95897, HN],[123542, HN],[235973, HN],[239779, HN],[257162, HN],[259140, HN],[276204, HN]];def ryn = QEu.find { it[0] == id && it[1] == info.database } != null;def fo = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def Ym = fo[info.database];ryn ? " ($y) [${Ym}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def OJH = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def ouE = sn.replaceAll(OJH.collect { "\\" + it }.join('|'), '_');def Zq = n.replaceAll(OJH.collect { "\\" + it }.join('|'), '_');def yDw = ouE.contains(Zq) ? "" : ouE;yDw == 'Season '+ s || yDw == 'Series '+ s ? "" : yDw ? " - " + yDw : ""}{"/"}{def LvL = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def KR = LvL.find { UR ->  fn.lower().contains(UR.lower()) } ?: "";def MTz = any {KR} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};MTz ? "[$MTz] " : ""}{def HN = "TheMovieDB::TV";def iZ = [[dJ: 199928, IFU: "Nights With a Cat", HsS: HN],[dJ: 219816, IFU: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", HsS: HN],[dJ: 248707, IFU: "Neko Oji The Guy That Got Reincarnated As a Cat", HsS: HN],[dJ: 270657, IFU: "Tono to Inu", HsS: HN],[dJ: 271003, IFU: "Yandere Dark Elf", HsS: HN],[dJ: 274741, IFU: "The Too-Perfect Saint", HsS: HN],[dJ: 288419, IFU: "Chikuwa Senki", HsS: HN]];def LRf = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def ta = LRf == "IMDb" ? "tt${id}" : id;def Ll = n;iZ.each {if (it.dJ == ta && it.HsS == LRf) {Ll = it.IFU}};def OJH = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def ouE = Ll.replaceAll(OJH.collect { "\\" + it }.join('|'), '');ouE = ouE.replaceAll(/(\s|\.)*$/, '');ouE}{" - "}{s00e00}{def OJH = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def ouE = t.replaceAll(OJH.collect { "\\" + it }.join('|'), '_');ouE = ouE.length() > 100 ? " " : " - $ouE ";def lA_ = any { e } { special };def zNq = "Episode $lA_";def GcK = ouE.contains(zNq) ? '' : ouE;GcK != '' ? GcK : ''}{" ["}{def Zl = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LAFTEL", "LFTL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["WETV"]];def uhr = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def sz = ["DB"];def udQ = ["Ruri-Saizen"];def ZwA = ["Erai-raws", "SubsPlease"];def nI = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def Uw = any {def PRi = Zl.find { _xw ->  _xw.find { Thb ->  fn.lower().contains(Thb.lower()) } }[0];PRi = PRi.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {PRi = PRi.replace(".WEBRip", "");PRi = PRi + ".WEBRip"} else {PRi = PRi + ".WEB-DL"};PRi} {source} {uhr.find { Gg ->  group == Gg || nI == Gg } ? "WEBRip" : ""} {sz.find { Gg ->  group == Gg || nI == Gg } ? "BDRip" : ""} {udQ.find { Gg ->  group == g__ || nI == g__} ? "HDTVRip" : ""} {def TY = ZwA.find { NeN ->  group == NeN || nI == NeN} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : TY} {vs} {""};Uw ? "$Uw " : ""}{def caL = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $caL, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def FIY = any { audioLanguages.size() } { 0 };def edM = FIY > 2 ? " MULTi-AUD" : FIY > 1 ? " DUAL-AUD" : "";def Rbt = FIY > 5 ? audioLanguages.take(5) : audioLanguages;def DsB = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";edM = FIY == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$edM$DsB";edM ? edM + Rbt.ISO2.joining(" ", " (", "").upper() + (FIY > 5 ? " ...)" : ")") : ""}{def DC = any { textLanguages.size() } { 0 };def edM = DC > 2 ? ", MULTi" : DC > 1 ? ", DUAL" : DC == 1 ? ", SUB" : null;def Rbt = DC > 5 ? textLanguages.take(5) : textLanguages;edM ? edM + Rbt.ISO2.joining(" ", " (", "").upper() + (DC > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def Ki = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def nvT = subt;Ki.values().each { ugK -> if (nvT.contains(ugK)) {nvT = nvT.replace(ugK, "")}};Ki.iso3b + nvT}}{f.image ? "-thumb" : ""}