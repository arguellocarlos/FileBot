{def WgU = { System.getProperty(it) };def It = WgU("os.name").toLowerCase().contains("windows");def ne = WgU("user.name");def dNr = "/run/media/${ne}";def WT = It ? "H:/" : "$dNr/Videos";def VVl = [[QlB: "Books", MEd: "F:/", AEw: "$dNr/Books"],[QlB: "Data", MEd: "D:/", AEw: "$dNr/Data"],[QlB: "Games", MEd: "G:/", AEw: "$dNr/Games"],[QlB: "Music", MEd: "E:/", AEw: "$dNr/Music"],[QlB: "Videos", MEd: "H:/", AEw: "$dNr/Videos"]];def nnh = (VVl.collect { it[It ? "MEd" : "AEw"] as File }.sort { PJ_, Ci ->  PJ_.exists() <=> Ci.exists() ?: PJ_.diskSpace <=> Ci.diskSpace }).last();def kl = WT ?: nnh;"$kl/"}{"Videos/"}{def US = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def BC = "TheMovieDB::TV";def LAd = [[ 74180, BC],[ 93821, BC],[ 95897, BC],[220118, BC],[249891, BC],[271026, BC]];def okw = [[236530, BC]];def Iu = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Wz = Iu == "IMDb" ? "tt${id}" : id;def Dl = any { info.adult } { false };def QgK = LAd.find { it[0] == Wz && it[1] == Iu } != null;def Fc = okw.find { it[0] == Wz && it[1] == Iu } != null;def Kvk = info.Keywords.findAll { it in US } || QgK || Dl;Kvk = Fc ? false : Kvk;Kvk ? "R18+ " : ""}{def Jzh = ["CN", "JP", "KR", "KP", "TW", "HK"];def qm = ["aeni", "donghua", "anime"];def OUW = any {anime} || info.Keywords.findAll { it in qm } || (Jzh.contains(country) && genres =~ /Animation/);OUW ? "Anime/" : "TV Series/"}{def BC = "TheMovieDB::TV";def CwW = [[grb: 199928, HG: "Nights With a Cat", Ty: BC],[grb: 232230, HG: "Lord of the Mysteries", Ty: BC],[grb: 248707, HG: "Neko Oji The Guy That Got Reincarnated As a Cat", Ty: BC],[grb: 270660, HG: "Pochars", Ty: BC],[grb: 277581, HG: "Dekin no Mogura", Ty: BC],[grb: 280038, HG: "Apocalypse Bringer Mynoghra", Ty: BC],[grb: 280078, HG: "The All-devouring Whale Homecoming", Ty: BC],[grb: 283704, HG: "Fermat Kitchen", Ty: BC],[grb: 283884, HG: "Chuhai Lips", Ty: BC],[grb: 288419, HG: "Chikuwa Senki", Ty: BC]];def Iu = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Wz = Iu == "IMDb" ? "tt${id}" : id;def lV = n;CwW.each {if (it.grb == Wz && it.Ty == Iu) {lV = it.HG}};def aYC = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def sm = lV.replaceAll(aYC.collect { "\\" + it }.join('|'), '');sm = sm.replaceAll(/(\s|\.)*$/, '');sm}{def BC = "TheMovieDB::TV";def rl = [[ 95897, BC],[123542, BC],[239779, BC],[257162, BC],[259140, BC],[276204, BC]];def pA = rl.find { it[0] == id && it[1] == info.database } != null;def xd = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def QXT = xd[info.database];pA ? " ($y) [${QXT}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def aYC = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def sm = sn.replaceAll(aYC.collect { "\\" + it }.join('|'), '_');def dn = n.replaceAll(aYC.collect { "\\" + it }.join('|'), '_');def IVI = sm.contains(dn) ? "" : sm;IVI == 'Season '+ s || IVI == 'Series '+ s ? "" : IVI ? " - " + IVI : ""}{"/"}{def Od = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def _V = Od.find { XPn ->  fn.lower().contains(XPn.lower()) } ?: "";def HOO = any {_V} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};HOO ? "[$HOO] " : ""}{def BC = "TheMovieDB::TV";def CwW = [[grb: 199928, HG: "Nights With a Cat", Ty: BC],[grb: 232230, HG: "Lord of the Mysteries", Ty: BC],[grb: 248707, HG: "Neko Oji The Guy That Got Reincarnated As a Cat", Ty: BC],[grb: 270660, HG: "Pochars", Ty: BC],[grb: 277581, HG: "Dekin no Mogura", Ty: BC],[grb: 280038, HG: "Apocalypse Bringer Mynoghra", Ty: BC],[grb: 280078, HG: "The All-devouring Whale Homecoming", Ty: BC],[grb: 283704, HG: "Fermat Kitchen", Ty: BC],[grb: 283884, HG: "Chuhai Lips", Ty: BC],[grb: 288419, HG: "Chikuwa Senki", Ty: BC]];def Iu = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Wz = Iu == "IMDb" ? "tt${id}" : id;def lV = n;CwW.each {if (it.grb == Wz && it.Ty == Iu) {lV = it.HG}};def aYC = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def sm = lV.replaceAll(aYC.collect { "\\" + it }.join('|'), '');sm = sm.replaceAll(/(\s|\.)*$/, '');sm}{" - "}{s00e00}{def aYC = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def sm = t.replaceAll(aYC.collect { "\\" + it }.join('|'), '_');sm = sm.length() > 100 ? " " : " - $sm ";def aI = any { e } { special };def Eny = "Episode $aI";def uHR = sm.contains(Eny) ? '' : sm;uHR != '' ? uHR : ''}{" ["}{def Jnz = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["FOD"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"],["INSTA", "INSTAGRAM"],["ANIMENOTANE"]];def vX = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def UW = ["DB"];def VY = ["Ruri-Saizen"];def hV = ["Erai-raws", "SubsPlease"];def LRt = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def qz = any {def NTq = Jnz.find { Qph ->  Qph.find { AgF ->  fn.lower().contains(AgF.lower()) } }[0];NTq = NTq.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {NTq = NTq.replace(".WEBRip", "");NTq = NTq + ".WEBRip"} else {NTq = NTq + ".WEB-DL"};NTq} {source} {vX.find { jWM ->  group == jWM || LRt == jWM } ? "WEBRip" : ""} {UW.find { jWM ->  group == jWM || LRt == jWM } ? "BDRip" : ""} {VY.find { jWM ->  group == g__ || LRt == g__} ? "HDTVRip" : ""} {def tBH = hV.find { aVy ->  group == aVy || LRt == aVy} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : tBH} {vs} {""};qz ? "$qz " : ""}{def pm = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $pm, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def HXZ = any { audioLanguages.size() } { 0 };def KV = HXZ > 2 ? " MULTi-AUD" : HXZ > 1 ? " DUAL-AUD" : "";def YQi = HXZ > 5 ? audioLanguages.take(5) : audioLanguages;def WTL = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";KV = HXZ == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$KV$WTL";KV ? KV + YQi.ISO2.joining(" ", " (", "").upper() + (HXZ > 5 ? " ...)" : ")") : ""}{def qFx = text.language.collect {['zh-Hans': 'ZH-S','zh-Hant': 'ZH-T','ar-001': 'AR-MSA'].get(it,it).toUpperCase()}.unique();def t_v = any { qFx.size() } { 0 };def KV = t_v > 2 ? ", MULTi" : t_v > 1 ? ", DUAL" : t_v == 1 ? ", SUB" : null;def YQi = t_v > 5 ? qFx.take(5) : qFx;KV ? KV + YQi.joining(" ", " (", "").upper() + (t_v > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def UfQ = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def SL = subt;UfQ.values().each { pAv -> if (SL.contains(pAv)) {SL = SL.replace(pAv, "")}};UfQ.iso3b + SL}}{f.image ? "-thumb" : ""}