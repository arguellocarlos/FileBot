{def Ll = { System.getProperty(it) };def tN = Ll("os.name").toLowerCase().contains("windows");def lr = Ll("user.name");def UVw = "/run/media/${lr}";def Ld = tN ? "H:/" : "$UVw/Videos";def UF = [[Ks: "Books", Lv: "F:/", lnD: "$UVw/Books"],[Ks: "Data", Lv: "D:/", lnD: "$UVw/Data"],[Ks: "Games", Lv: "G:/", lnD: "$UVw/Games"],[Ks: "Music", Lv: "E:/", lnD: "$UVw/Music"],[Ks: "Videos", Lv: "H:/", lnD: "$UVw/Videos"]];def qKA = (UF.collect { it[tN ? "Lv" : "lnD"] as File }.sort { uY, iMt ->  uY.exists() <=> iMt.exists() ?: uY.diskSpace <=> iMt.diskSpace }).last();def tH = Ld ?: qKA;"$tH/"}{"Videos/"}{def wv = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity"];def ZB = "TheMovieDB::TV";def Fz = [[ 74180, ZB],[ 93821, ZB],[ 95897, ZB],[220118, ZB],[271026, ZB]];def qQ = [[236530, ZB]];def rN = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def J_W = rN == "IMDb" ? "tt${id}" : id;def Kzp = any { info.adult } { false };def iRz = Fz.find { it[0] == J_W && it[1] == rN } != null;def XNm = qQ.find { it[0] == J_W && it[1] == rN } != null;def cc = info.Keywords.findAll { it in wv } || iRz || Kzp;cc = XNm ? false : cc;cc ? "R18+ " : ""}{def A_y = ["CN", "JP", "KR", "KP", "TW", "HK"];def qG = ["aeni", "donghua", "anime"];def WJu = any {anime} || info.Keywords.findAll { it in qG } || (A_y.contains(country) && genres =~ /Animation/);WJu ? "Anime/" : "TV Series/"}{def ZB = "TheMovieDB::TV";def ao = [[nQw: 68854, FQ: "From Me to You", ux: ZB],[nQw: 219816, FQ: "Fate/Grand Order: Fujimaru Ritsuka Doesn't Get It", ux: ZB],[nQw: 245561, FQ: "Okitsura", ux: ZB],[nQw: 248707, FQ: "Neko Oji The Guy That Got Reincarnated As a Cat", ux: ZB],[nQw: 259559, FQ: "Headhunted to Another World", ux: ZB],[nQw: 261301, FQ: "Botsuraku Kizoku", ux: ZB],[nQw: 262141, FQ: "Can You Keep a Secret", ux: ZB],[nQw: 276204, FQ: "Bogus Skill Fruitmaster", ux: ZB]];def rN = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def J_W = rN == "IMDb" ? "tt${id}" : id;def HU = n;ao.each {if (it.nQw == J_W && it.ux == rN) {HU = it.FQ}};def JK = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Qvy = HU.replaceAll(JK.collect { "\\" + it }.join('|'), '');Qvy = Qvy.replaceAll(/(\s|\.)*$/, '');Qvy}{def ZB = "TheMovieDB::TV";def pF = [[ 95897, ZB],[123542, ZB],[235973, ZB],[239779, ZB],[257162, ZB],[259140, ZB],[276204, ZB]];def wsm = pF.find { it[0] == id && it[1] == info.database } != null;def IA = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def qI = IA[info.database];wsm ? " ($y) [${qI}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def JK = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Qvy = sn.replaceAll(JK.collect { "\\" + it }.join('|'), '_');def KEK = n.replaceAll(JK.collect { "\\" + it }.join('|'), '_');def rJ = Qvy.contains(KEK) ? "" : Qvy;rJ == 'Season '+ s ? "" : rJ ? " - " + rJ : ""}{"/"}{def gMv = ["Alqanime","BlackLuster","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","Samehadaku"];def xM = gMv.find { qgq ->  fn.lower().contains(qgq.lower()) } ?: "";def xh = any {(fn =~ /^\[(.*?)\]/)[0][1]} {xM} {group} {""};xh ? "[$xh] " : ""}{def ZB = "TheMovieDB::TV";def ao = [[nQw: 68854, FQ: "From Me to You", ux: ZB],[nQw: 219816, FQ: "Fate/Grand Order: Fujimaru Ritsuka Doesn't Get It", ux: ZB],[nQw: 245561, FQ: "Okitsura", ux: ZB],[nQw: 248707, FQ: "Neko Oji The Guy That Got Reincarnated As a Cat", ux: ZB],[nQw: 259559, FQ: "Headhunted to Another World", ux: ZB],[nQw: 261301, FQ: "Botsuraku Kizoku", ux: ZB],[nQw: 262141, FQ: "Can You Keep a Secret", ux: ZB],[nQw: 276204, FQ: "Bogus Skill Fruitmaster", ux: ZB]];def rN = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def J_W = rN == "IMDb" ? "tt${id}" : id;def HU = n;ao.each {if (it.nQw == J_W && it.ux == rN) {HU = it.FQ}};def JK = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Qvy = HU.replaceAll(JK.collect { "\\" + it }.join('|'), '');Qvy = Qvy.replaceAll(/(\s|\.)*$/, '');Qvy}{" - "}{s00e00}{def JK = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Qvy = t.replaceAll(JK.collect { "\\" + it }.join('|'), '_');def Rd = any { e } { special };Qvy = Qvy.length() > 100 ? " " : " - $Qvy ";Qvy == " - Episode $Rd " ? " " : Qvy}{" ["}{def iFC = [["ABEMA"],["ADN"],["BBC"],["BILI", "B-Global", "BiliIntl", "B-Site", "BiliCN"],["COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LAFTEL", "LFTL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["SHAHID"],["TVER"],["UNEXT"],["WETV"],["YTB", "YT.WEB-DL", "YOUTUBE"]];def ocm = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs", "SAMEHADAKU"];def _a = ["Erai-raws", "SubsPlease"];def xg = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def uxS = any {def OR = iFC.find { IDt ->  IDt.find { jRa ->  fn.lower().contains(jRa.lower()) } }[0];OR = OR.replace(".WEB-DL", "");OR ? "${OR}.WEB-DL" : ""} {source} {ocm.find { NKz ->  group == NKz || xg == NKz } ? "WEBRip" : ""} {def jhI = _a.find { vO ->  group == vO || xg == vO} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : jhI} {vs} {""};uxS ? "$uxS " : ""}{def Iy = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $Iy, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def p_r = " Dub";def Uda = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : p_r;Uda = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : Uda;Uda}{def CN = any { audioLanguages.size() } { 0 };def Uda = CN > 2 ? " MAud" : CN > 1 ? " DAud" : null;def yzX = CN > 5 ? audioLanguages.take(5) : audioLanguages;Uda ? Uda + yzX.joining(" ", " (", "").upper() + (CN > 5 ? " ...)" : ")") : ""}{def VE = any { textLanguages.size() } { 0 };def Uda = VE > 2 ? ", MSub" : VE > 1 ? ", DSub" : null;def yzX = VE > 5 ? textLanguages.take(5) : textLanguages;Uda ? Uda + yzX.joining(" ", " (", "").upper() + (VE > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def _I = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def DdA = subt;_I.values().each { pOI -> if (DdA.contains(pOI)) {DdA = DdA.replace(pOI, "")}};_I.iso3b + DdA}}{f.image ? "-thumb" : ""}