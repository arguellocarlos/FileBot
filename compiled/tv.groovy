{def Mtz = { System.getProperty(it) };def aBB = Mtz("os.name").toLowerCase().contains("windows");def Oxr = Mtz("user.name");def xu = "/run/media/${Oxr}";def yi = aBB ? "H:/" : "$xu/Videos";def tIb = [[KJ: "Books", KmC: "F:/", eY: "$xu/Books"],[KJ: "Data", KmC: "D:/", eY: "$xu/Data"],[KJ: "Games", KmC: "G:/", eY: "$xu/Games"],[KJ: "Music", KmC: "E:/", eY: "$xu/Music"],[KJ: "Videos", KmC: "H:/", eY: "$xu/Videos"]];def tT = (tIb.collect { it[aBB ? "KmC" : "eY"] as File }.sort { In, YJ ->  In.exists() <=> YJ.exists() ?: In.diskSpace <=> YJ.diskSpace }).last();def Lp = yi ?: tT;"$Lp/"}{"Videos/"}{def oN = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def buZ = "TheMovieDB::TV";def JZF = [[ 74180, buZ],[ 93821, buZ],[ 95897, buZ],[220118, buZ],[249891, buZ],[271026, buZ]];def hc = [[236530, buZ]];def jf = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def kh = jf == "IMDb" ? "tt${id}" : id;def Bp = any { info.adult } { false };def kZ = JZF.find { it[0] == kh && it[1] == jf } != null;def Or = hc.find { it[0] == kh && it[1] == jf } != null;def Ay = info.Keywords.findAll { it in oN } || kZ || Bp;Ay = Or ? false : Ay;Ay ? "R18+ " : ""}{def zyl = ["CN", "JP", "KR", "KP", "TW", "HK"];def Ur = ["aeni", "donghua", "anime"];def NVi = any {anime} || info.Keywords.findAll { it in Ur } || (zyl.contains(country) && genres =~ /Animation/);NVi ? "Anime/" : "TV Series/"}{def buZ = "TheMovieDB::TV";def WG = [[Zuv: 199928, SHf: "Nights With a Cat", QC_: buZ],[Zuv: 219816, SHf: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", QC_: buZ],[Zuv: 248707, SHf: "Neko Oji The Guy That Got Reincarnated As a Cat", QC_: buZ],[Zuv: 270657, SHf: "Tono to Inu", QC_: buZ],[Zuv: 271003, SHf: "Yandere Dark Elf", QC_: buZ],[Zuv: 274741, SHf: "The Too-Perfect Saint", QC_: buZ],[Zuv: 288419, SHf: "Chikuwa Senki", QC_: buZ]];def jf = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def kh = jf == "IMDb" ? "tt${id}" : id;def Il = n;WG.each {if (it.Zuv == kh && it.QC_ == jf) {Il = it.SHf}};def Sg = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def PK = Il.replaceAll(Sg.collect { "\\" + it }.join('|'), '');PK = PK.replaceAll(/(\s|\.)*$/, '');PK}{def buZ = "TheMovieDB::TV";def _h = [[ 95897, buZ],[123542, buZ],[235973, buZ],[239779, buZ],[257162, buZ],[259140, buZ],[276204, buZ]];def YmB = _h.find { it[0] == id && it[1] == info.database } != null;def wxD = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def wQD = wxD[info.database];YmB ? " ($y) [${wQD}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def Sg = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def PK = sn.replaceAll(Sg.collect { "\\" + it }.join('|'), '_');def rL = n.replaceAll(Sg.collect { "\\" + it }.join('|'), '_');def tEu = PK.contains(rL) ? "" : PK;tEu == 'Season '+ s || tEu == 'Series '+ s ? "" : tEu ? " - " + tEu : ""}{"/"}{def SSZ = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def wJ = SSZ.find { po ->  fn.lower().contains(po.lower()) } ?: "";def hTg = any {wJ} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};hTg ? "[$hTg] " : ""}{def buZ = "TheMovieDB::TV";def WG = [[Zuv: 199928, SHf: "Nights With a Cat", QC_: buZ],[Zuv: 219816, SHf: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", QC_: buZ],[Zuv: 248707, SHf: "Neko Oji The Guy That Got Reincarnated As a Cat", QC_: buZ],[Zuv: 270657, SHf: "Tono to Inu", QC_: buZ],[Zuv: 271003, SHf: "Yandere Dark Elf", QC_: buZ],[Zuv: 274741, SHf: "The Too-Perfect Saint", QC_: buZ],[Zuv: 288419, SHf: "Chikuwa Senki", QC_: buZ]];def jf = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def kh = jf == "IMDb" ? "tt${id}" : id;def Il = n;WG.each {if (it.Zuv == kh && it.QC_ == jf) {Il = it.SHf}};def Sg = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def PK = Il.replaceAll(Sg.collect { "\\" + it }.join('|'), '');PK = PK.replaceAll(/(\s|\.)*$/, '');PK}{" - "}{s00e00}{def Sg = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def PK = t.replaceAll(Sg.collect { "\\" + it }.join('|'), '_');PK = PK.length() > 100 ? " " : " - $PK ";def kk = any { e } { special };def iz = "Episode $kk";def QLw = PK.contains(iz) ? '' : PK;QLw != '' ? QLw : ''}{" ["}{def Jmn = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"]];def AJo = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def kt = ["DB"];def oV = ["Ruri-Saizen"];def xdU = ["Erai-raws", "SubsPlease"];def FUI = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def mt = any {def Dl = Jmn.find { Asb ->  Asb.find { IJ ->  fn.lower().contains(IJ.lower()) } }[0];Dl = Dl.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {Dl = Dl.replace(".WEBRip", "");Dl = Dl + ".WEBRip"} else {Dl = Dl + ".WEB-DL"};Dl} {source} {AJo.find { io ->  group == io || FUI == io } ? "WEBRip" : ""} {kt.find { io ->  group == io || FUI == io } ? "BDRip" : ""} {oV.find { io ->  group == g__ || FUI == g__} ? "HDTVRip" : ""} {def oxj = xdU.find { zQ ->  group == zQ || FUI == zQ} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : oxj} {vs} {""};mt ? "$mt " : ""}{def iL = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $iL, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def fkz = any { audioLanguages.size() } { 0 };def DoF = fkz > 2 ? " MULTi-AUD" : fkz > 1 ? " DUAL-AUD" : "";def KZ = fkz > 5 ? audioLanguages.take(5) : audioLanguages;def lk = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";DoF = fkz == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$DoF$lk";DoF ? DoF + KZ.ISO2.joining(" ", " (", "").upper() + (fkz > 5 ? " ...)" : ")") : ""}{def zJz = any { textLanguages.size() } { 0 };def DoF = zJz > 2 ? ", MULTi" : zJz > 1 ? ", DUAL" : zJz == 1 ? ", SUB" : null;def KZ = zJz > 5 ? textLanguages.take(5) : textLanguages;DoF ? DoF + KZ.ISO2.joining(" ", " (", "").upper() + (zJz > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def zDC = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def rtY = subt;zDC.values().each { aI -> if (rtY.contains(aI)) {rtY = rtY.replace(aI, "")}};zDC.iso3b + rtY}}{f.image ? "-thumb" : ""}