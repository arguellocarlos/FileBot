{def dak = { System.getProperty(it) };def Mw = dak("os.name").toLowerCase().contains("windows");def ij = dak("user.name");def ufL = "/run/media/${ij}";def xMH = Mw ? "H:/" : "$ufL/Videos";def iqf = [[Ojo: "Books", _G: "F:/", GJ: "$ufL/Books"],[Ojo: "Data", _G: "D:/", GJ: "$ufL/Data"],[Ojo: "Games", _G: "G:/", GJ: "$ufL/Games"],[Ojo: "Music", _G: "E:/", GJ: "$ufL/Music"],[Ojo: "Videos", _G: "H:/", GJ: "$ufL/Videos"]];def ig = (iqf.collect { it[Mw ? "_G" : "GJ"] as File }.sort { gIX, Sfo ->  gIX.exists() <=> Sfo.exists() ?: gIX.diskSpace <=> Sfo.diskSpace }).last();def lpD = xMH ?: ig;"$lpD/"}{"Videos/"}{def ygK = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity"];def PmT = "TheMovieDB::TV";def gnJ = [[ 74180, PmT],[ 93821, PmT],[ 95897, PmT],[220118, PmT],[271026, PmT]];def ywy = [[236530, PmT]];def HuX = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Ck = HuX == "IMDb" ? "tt${id}" : id;def lT = any { info.adult } { false };def ph = gnJ.find { it[0] == Ck && it[1] == HuX } != null;def YJq = ywy.find { it[0] == Ck && it[1] == HuX } != null;def Ll = info.Keywords.findAll { it in ygK } || ph || lT;Ll = YJq ? false : Ll;Ll ? "R18+ " : ""}{def Dk = ["CN", "JP", "KR", "KP", "TW", "HK"];def WNg = ["aeni", "donghua", "anime"];def yxJ = any {anime} || info.Keywords.findAll { it in WNg } || (Dk.contains(country) && genres =~ /Animation/);yxJ ? "Anime/" : "TV Series/"}{def PmT = "TheMovieDB::TV";def eH = [[Es: 68854, mcV: "From Me to You", opO: PmT],[Es: 219816, mcV: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", opO: PmT],[Es: 245561, mcV: "Okitsura", opO: PmT],[Es: 248707, mcV: "Neko Oji The Guy That Got Reincarnated As a Cat", opO: PmT],[Es: 259559, mcV: "Headhunted to Another World", opO: PmT],[Es: 261301, mcV: "Botsuraku Kizoku", opO: PmT],[Es: 262141, mcV: "Can You Keep a Secret", opO: PmT],[Es: 270657, mcV: "Tono to Inu", opO: PmT],[Es: 276204, mcV: "Bogus Skill Fruitmaster", opO: PmT]];def HuX = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Ck = HuX == "IMDb" ? "tt${id}" : id;def Qs = n;eH.each {if (it.Es == Ck && it.opO == HuX) {Qs = it.mcV}};def Lpd = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Lg = Qs.replaceAll(Lpd.collect { "\\" + it }.join('|'), '');Lg = Lg.replaceAll(/(\s|\.)*$/, '');Lg}{def PmT = "TheMovieDB::TV";def JqQ = [[ 95897, PmT],[123542, PmT],[235973, PmT],[239779, PmT],[257162, PmT],[259140, PmT],[276204, PmT]];def oY = JqQ.find { it[0] == id && it[1] == info.database } != null;def ID = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def kk = ID[info.database];oY ? " ($y) [${kk}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def Lpd = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Lg = sn.replaceAll(Lpd.collect { "\\" + it }.join('|'), '_');def OS = n.replaceAll(Lpd.collect { "\\" + it }.join('|'), '_');def Ixg = Lg.contains(OS) ? "" : Lg;Ixg == 'Season '+ s ? "" : Ixg ? " - " + Ixg : ""}{"/"}{def zu = ["Alqanime","BlackLuster","darkflux","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def Aat = zu.find { BKh ->  fn.lower().contains(BKh.lower()) } ?: "";def Aef = any {(fn =~ /^\[(.*?)\]/)[0][1]} {Aat} {group} {""};Aef ? "[$Aef] " : ""}{def PmT = "TheMovieDB::TV";def eH = [[Es: 68854, mcV: "From Me to You", opO: PmT],[Es: 219816, mcV: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", opO: PmT],[Es: 245561, mcV: "Okitsura", opO: PmT],[Es: 248707, mcV: "Neko Oji The Guy That Got Reincarnated As a Cat", opO: PmT],[Es: 259559, mcV: "Headhunted to Another World", opO: PmT],[Es: 261301, mcV: "Botsuraku Kizoku", opO: PmT],[Es: 262141, mcV: "Can You Keep a Secret", opO: PmT],[Es: 270657, mcV: "Tono to Inu", opO: PmT],[Es: 276204, mcV: "Bogus Skill Fruitmaster", opO: PmT]];def HuX = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Ck = HuX == "IMDb" ? "tt${id}" : id;def Qs = n;eH.each {if (it.Es == Ck && it.opO == HuX) {Qs = it.mcV}};def Lpd = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Lg = Qs.replaceAll(Lpd.collect { "\\" + it }.join('|'), '');Lg = Lg.replaceAll(/(\s|\.)*$/, '');Lg}{" - "}{s00e00}{def Lpd = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Lg = t.replaceAll(Lpd.collect { "\\" + it }.join('|'), '_');Lg = Lg.length() > 100 ? " " : " - $Lg ";def sJr = any { e } { special };def Uen = "Episode $sJr";def _SL = Lg.contains(Uen) ? '' : Lg;_SL != '' ? _SL : ''}{" ["}{def TeY = [["ABEMA"],["ADN"],["BILI", "B-Global", "BiliIntl", "B-Site", "BiliCN"],["COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LAFTEL", "LFTL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["SHAHID"],["TVER"],["UNEXT"],["WETV"],["YTB", "YT.WEB-DL", "YOUTUBE"]];def ydn = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def Xe = ["Erai-raws", "SubsPlease"];def ms = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def dS = any {def OWO = TeY.find { ulr ->  ulr.find { _s ->  fn.lower().contains(_s.lower()) } }[0];OWO = OWO.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {OWO = OWO.replace(".WEBRip", "");OWO = OWO + ".WEBRip"} else {OWO = OWO + ".WEB-DL"};OWO} {source} {ydn.find { ih ->  group == ih || ms == ih } ? "WEBRip" : ""} {def ChO = Xe.find { quu ->  group == quu || ms == quu} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : ChO} {vs} {""};dS ? "$dS " : ""}{def txP = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $txP, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def pJ = " Dub";def Wa = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : pJ;Wa = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : Wa;Wa}{def CIy = any { audioLanguages.size() } { 0 };def Wa = CIy > 2 ? " MAud" : CIy > 1 ? " DAud" : null;def AL_ = CIy > 5 ? audioLanguages.take(5) : audioLanguages;Wa ? Wa + AL_.joining(" ", " (", "").upper() + (CIy > 5 ? " ...)" : ")") : ""}{def l_X = any { textLanguages.size() } { 0 };def Wa = l_X > 2 ? ", MSub" : l_X > 1 ? ", DSub" : null;def AL_ = l_X > 5 ? textLanguages.take(5) : textLanguages;Wa ? Wa + AL_.joining(" ", " (", "").upper() + (l_X > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def fH = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def Wxs = subt;fH.values().each { LRP -> if (Wxs.contains(LRP)) {Wxs = Wxs.replace(LRP, "")}};fH.iso3b + Wxs}}{f.image ? "-thumb" : ""}