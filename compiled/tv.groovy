{def DR = { System.getProperty(it) };def OV = DR("os.name").toLowerCase().contains("windows");def JZz = DR("user.name");def MTt = "/run/media/${JZz}";def M_k = OV ? "H:/" : "$MTt/Videos";def jH = [[DFm: "Books", Wf: "F:/", _J_: "$MTt/Books"],[DFm: "Data", Wf: "D:/", _J_: "$MTt/Data"],[DFm: "Games", Wf: "G:/", _J_: "$MTt/Games"],[DFm: "Music", Wf: "E:/", _J_: "$MTt/Music"],[DFm: "Videos", Wf: "H:/", _J_: "$MTt/Videos"]];def Uy = (jH.collect { it[OV ? "Wf" : "_J_"] as File }.sort { PM, VF ->  PM.exists() <=> VF.exists() ?: PM.diskSpace <=> VF.diskSpace }).last();def uVO = M_k ?: Uy;"$uVO/"}{"Videos/"}{def UdJ = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def VRk = "TheMovieDB::TV";def BDc = [[ 74180, VRk],[ 93821, VRk],[ 95897, VRk],[220118, VRk],[249891, VRk],[271026, VRk]];def LV = [[236530, VRk]];def CsF = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def NA = CsF == "IMDb" ? "tt${id}" : id;def jw = any { info.adult } { false };def Zec = BDc.find { it[0] == NA && it[1] == CsF } != null;def eib = LV.find { it[0] == NA && it[1] == CsF } != null;def CL = info.Keywords.findAll { it in UdJ } || Zec || jw;CL = eib ? false : CL;CL ? "R18+ " : ""}{def DHp = ["CN", "JP", "KR", "KP", "TW", "HK"];def hI = ["aeni", "donghua", "anime"];def CYk = any {anime} || info.Keywords.findAll { it in hI } || (DHp.contains(country) && genres =~ /Animation/);CYk ? "Anime/" : "TV Series/"}{def VRk = "TheMovieDB::TV";def We = [[iSj: 199928, UW: "Nights With a Cat", HC: VRk],[iSj: 248707, UW: "Neko Oji The Guy That Got Reincarnated As a Cat", HC: VRk],[iSj: 270660, UW: "Pochars", HC: VRk],[iSj: 280078, UW: "The All-devouring Whale Homecoming", HC: VRk],[iSj; 283884: UW: "Chuhai Lips", HC: VRk],[iSj: 288419, UW: "Chikuwa Senki", HC: VRk]];def CsF = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def NA = CsF == "IMDb" ? "tt${id}" : id;def JW = n;We.each {if (it.iSj == NA && it.HC == CsF) {JW = it.UW}};def SS = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Ir = JW.replaceAll(SS.collect { "\\" + it }.join('|'), '');Ir = Ir.replaceAll(/(\s|\.)*$/, '');Ir}{def VRk = "TheMovieDB::TV";def cc = [[ 95897, VRk],[123542, VRk],[239779, VRk],[257162, VRk],[259140, VRk],[276204, VRk]];def _G = cc.find { it[0] == id && it[1] == info.database } != null;def nL = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def bp = nL[info.database];_G ? " ($y) [${bp}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def SS = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Ir = sn.replaceAll(SS.collect { "\\" + it }.join('|'), '_');def fNu = n.replaceAll(SS.collect { "\\" + it }.join('|'), '_');def KHi = Ir.contains(fNu) ? "" : Ir;KHi == 'Season '+ s || KHi == 'Series '+ s ? "" : KHi ? " - " + KHi : ""}{"/"}{def sj = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def ZK = sj.find { Fbl ->  fn.lower().contains(Fbl.lower()) } ?: "";def hQ = any {ZK} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};hQ ? "[$hQ] " : ""}{def VRk = "TheMovieDB::TV";def We = [[iSj: 199928, UW: "Nights With a Cat", HC: VRk],[iSj: 248707, UW: "Neko Oji The Guy That Got Reincarnated As a Cat", HC: VRk],[iSj: 270660, UW: "Pochars", HC: VRk],[iSj: 280078, UW: "The All-devouring Whale Homecoming", HC: VRk],[iSj; 283884: UW: "Chuhai Lips", HC: VRk],[iSj: 288419, UW: "Chikuwa Senki", HC: VRk]];def CsF = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def NA = CsF == "IMDb" ? "tt${id}" : id;def JW = n;We.each {if (it.iSj == NA && it.HC == CsF) {JW = it.UW}};def SS = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Ir = JW.replaceAll(SS.collect { "\\" + it }.join('|'), '');Ir = Ir.replaceAll(/(\s|\.)*$/, '');Ir}{" - "}{s00e00}{def SS = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Ir = t.replaceAll(SS.collect { "\\" + it }.join('|'), '_');Ir = Ir.length() > 100 ? " " : " - $Ir ";def Hu = any { e } { special };def yD = "Episode $Hu";def oH = Ir.contains(yD) ? '' : Ir;oH != '' ? oH : ''}{" ["}{def ZxC = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["FOD"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"],["INSTA", "INSTAGRAM"],["ANIMENOTANE"]];def hu = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def Xj = ["DB"];def DeA = ["Ruri-Saizen"];def VZL = ["Erai-raws", "SubsPlease"];def wqH = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def caO = any {def JtX = ZxC.find { DbF ->  DbF.find { Hg ->  fn.lower().contains(Hg.lower()) } }[0];JtX = JtX.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {JtX = JtX.replace(".WEBRip", "");JtX = JtX + ".WEBRip"} else {JtX = JtX + ".WEB-DL"};JtX} {source} {hu.find { wBU ->  group == wBU || wqH == wBU } ? "WEBRip" : ""} {Xj.find { wBU ->  group == wBU || wqH == wBU } ? "BDRip" : ""} {DeA.find { wBU ->  group == g__ || wqH == g__} ? "HDTVRip" : ""} {def aE = VZL.find { uDA ->  group == uDA || wqH == uDA} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : aE} {vs} {""};caO ? "$caO " : ""}{def qa = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $qa, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def fIq = any { audioLanguages.size() } { 0 };def kt = fIq > 2 ? " MULTi-AUD" : fIq > 1 ? " DUAL-AUD" : "";def rL = fIq > 5 ? audioLanguages.take(5) : audioLanguages;def _L = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";kt = fIq == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$kt$_L";kt ? kt + rL.ISO2.joining(" ", " (", "").upper() + (fIq > 5 ? " ...)" : ")") : ""}{def tUw = text.language.collect {['zh-Hans': 'ZH-S','zh-Hant': 'ZH-T','ar-001': 'AR-MSA'].get(it,it).toUpperCase()}.unique();def Dap = any { tUw.size() } { 0 };def kt = Dap > 2 ? ", MULTi" : Dap > 1 ? ", DUAL" : Dap == 1 ? ", SUB" : null;def rL = Dap > 5 ? tUw.take(5) : tUw;kt ? kt + rL.joining(" ", " (", "").upper() + (Dap > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def UF = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def ola = subt;UF.values().each { LQ -> if (ola.contains(LQ)) {ola = ola.replace(LQ, "")}};UF.iso3b + ola}}{f.image ? "-thumb" : ""}