{def Hi = { System.getProperty(it) };def Ex = Hi("os.name").toLowerCase().contains("windows");def Hr = Hi("user.name");def R_v = "/run/media/${Hr}";def cvA = Ex ? "H:/" : "$R_v/Videos";def yB = [[g_N: "Books", cUN: "F:/", PdH: "$R_v/Books"],[g_N: "Data", cUN: "D:/", PdH: "$R_v/Data"],[g_N: "Games", cUN: "G:/", PdH: "$R_v/Games"],[g_N: "Music", cUN: "E:/", PdH: "$R_v/Music"],[g_N: "Videos", cUN: "H:/", PdH: "$R_v/Videos"]];def xJ = (yB.collect { it[Ex ? "cUN" : "PdH"] as File }.sort { nD, ox ->  nD.exists() <=> ox.exists() ?: nD.diskSpace <=> ox.diskSpace }).last();def Dx = cvA ?: xJ;"$Dx/"}{"Videos/"}{def Xa = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def vd = "TheMovieDB::TV";def NV = [[ 74180, vd],[ 93821, vd],[ 95897, vd],[220118, vd],[249891, vd],[271026, vd]];def epA = [[236530, vd]];def Cg = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def pe = Cg == "IMDb" ? "tt${id}" : id;def wM = any { info.adult } { false };def bq = NV.find { it[0] == pe && it[1] == Cg } != null;def dXW = epA.find { it[0] == pe && it[1] == Cg } != null;def aCC = info.Keywords.findAll { it in Xa } || bq || wM;aCC = dXW ? false : aCC;aCC ? "R18+ " : ""}{def Dfc = ["CN", "JP", "KR", "KP", "TW", "HK"];def PYX = ["aeni", "donghua", "anime"];def Fz = any {anime} || info.Keywords.findAll { it in PYX } || (Dfc.contains(country) && genres =~ /Animation/);Fz ? "Anime/" : "TV Series/"}{def vd = "TheMovieDB::TV";def It = [[Lac: 199928, Nn: "Nights With a Cat", y_Z: vd],[Lac: 219816, Nn: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", y_Z: vd],[Lac: 248707, Nn: "Neko Oji The Guy That Got Reincarnated As a Cat", y_Z: vd],[Lac: 271003, Nn: "Yandere Dark Elf", y_Z: vd],[Lac: 274741, Nn: "The Too-Perfect Saint", y_Z: vd],[Lac: 275623, Nn: "Chuzenji-sensei", y_Z: vd],[Lac: 281623, Nn: "SHIROHIYO", y_Z: vd],[Lac: 288419, Nn: "Chikuwa Senki", y_Z: vd]];def Cg = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def pe = Cg == "IMDb" ? "tt${id}" : id;def BIY = n;It.each {if (it.Lac == pe && it.y_Z == Cg) {BIY = it.Nn}};def Dpl = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def jvj = BIY.replaceAll(Dpl.collect { "\\" + it }.join('|'), '');jvj = jvj.replaceAll(/(\s|\.)*$/, '');jvj}{def vd = "TheMovieDB::TV";def BC = [[ 95897, vd],[123542, vd],[235973, vd],[239779, vd],[257162, vd],[259140, vd],[276204, vd]];def GYz = BC.find { it[0] == id && it[1] == info.database } != null;def tF = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def TS = tF[info.database];GYz ? " ($y) [${TS}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def Dpl = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def jvj = sn.replaceAll(Dpl.collect { "\\" + it }.join('|'), '_');def ONn = n.replaceAll(Dpl.collect { "\\" + it }.join('|'), '_');def LeN = jvj.contains(ONn) ? "" : jvj;LeN == 'Season '+ s || LeN == 'Series '+ s ? "" : LeN ? " - " + LeN : ""}{"/"}{def Oax = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def Lty = Oax.find { ND ->  fn.lower().contains(ND.lower()) } ?: "";def cU = any {Lty} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};cU ? "[$cU] " : ""}{def vd = "TheMovieDB::TV";def It = [[Lac: 199928, Nn: "Nights With a Cat", y_Z: vd],[Lac: 219816, Nn: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", y_Z: vd],[Lac: 248707, Nn: "Neko Oji The Guy That Got Reincarnated As a Cat", y_Z: vd],[Lac: 271003, Nn: "Yandere Dark Elf", y_Z: vd],[Lac: 274741, Nn: "The Too-Perfect Saint", y_Z: vd],[Lac: 275623, Nn: "Chuzenji-sensei", y_Z: vd],[Lac: 281623, Nn: "SHIROHIYO", y_Z: vd],[Lac: 288419, Nn: "Chikuwa Senki", y_Z: vd]];def Cg = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def pe = Cg == "IMDb" ? "tt${id}" : id;def BIY = n;It.each {if (it.Lac == pe && it.y_Z == Cg) {BIY = it.Nn}};def Dpl = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def jvj = BIY.replaceAll(Dpl.collect { "\\" + it }.join('|'), '');jvj = jvj.replaceAll(/(\s|\.)*$/, '');jvj}{" - "}{s00e00}{def Dpl = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def jvj = t.replaceAll(Dpl.collect { "\\" + it }.join('|'), '_');jvj = jvj.length() > 100 ? " " : " - $jvj ";def uL = any { e } { special };def Izu = "Episode $uL";def SdB = jvj.contains(Izu) ? '' : jvj;SdB != '' ? SdB : ''}{" ["}{def bMR = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"]];def VW = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def ovD = ["DB"];def kc = ["Ruri-Saizen"];def Mrv = ["Erai-raws", "SubsPlease"];def rRU = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def Pd = any {def Ea = bMR.find { AKF ->  AKF.find { HTW ->  fn.lower().contains(HTW.lower()) } }[0];Ea = Ea.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {Ea = Ea.replace(".WEBRip", "");Ea = Ea + ".WEBRip"} else {Ea = Ea + ".WEB-DL"};Ea} {source} {VW.find { _T ->  group == _T || rRU == _T } ? "WEBRip" : ""} {ovD.find { _T ->  group == _T || rRU == _T } ? "BDRip" : ""} {kc.find { _T ->  group == g__ || rRU == g__} ? "HDTVRip" : ""} {def dpJ = Mrv.find { DS ->  group == DS || rRU == DS} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : dpJ} {vs} {""};Pd ? "$Pd " : ""}{def KtP = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $KtP, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def Qqi = any { audioLanguages.size() } { 0 };def kK = Qqi > 2 ? " MULTi-AUD" : Qqi > 1 ? " DUAL-AUD" : "";def wHs = Qqi > 5 ? audioLanguages.take(5) : audioLanguages;def I_r = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";kK = Qqi == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$kK$I_r";kK ? kK + wHs.ISO2.joining(" ", " (", "").upper() + (Qqi > 5 ? " ...)" : ")") : ""}{def DRS = any { textLanguages.size() } { 0 };def kK = DRS > 2 ? ", MULTi" : DRS > 1 ? ", DUAL" : DRS == 1 ? ", SUB" : null;def wHs = DRS > 5 ? textLanguages.take(5) : textLanguages;kK ? kK + wHs.ISO2.joining(" ", " (", "").upper() + (DRS > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def Gm = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def VRx = subt;Gm.values().each { RLJ -> if (VRx.contains(RLJ)) {VRx = VRx.replace(RLJ, "")}};Gm.iso3b + VRx}}{f.image ? "-thumb" : ""}