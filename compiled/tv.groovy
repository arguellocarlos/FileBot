{def KjD = { System.getProperty(it) };def iz = KjD("os.name").toLowerCase().contains("windows");def jf = KjD("user.name");def kz = "/run/media/${jf}";def Bx = iz ? "H:/" : "$kz/Videos";def OYs = [[IB: "Books", Tti: "F:/", Fv: "$kz/Books"],[IB: "Data", Tti: "D:/", Fv: "$kz/Data"],[IB: "Games", Tti: "G:/", Fv: "$kz/Games"],[IB: "Music", Tti: "E:/", Fv: "$kz/Music"],[IB: "Videos", Tti: "H:/", Fv: "$kz/Videos"]];def Wm = (OYs.collect { it[iz ? "Tti" : "Fv"] as File }.sort { hrA, qHw ->  hrA.exists() <=> qHw.exists() ?: hrA.diskSpace <=> qHw.diskSpace }).last();def zD = Bx ?: Wm;"$zD/"}{"Videos/"}{def KlG = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity"];def Sxg = "TheMovieDB::TV";def Gu = [[ 74180, Sxg],[ 93821, Sxg],[ 95897, Sxg],[220118, Sxg],[271026, Sxg]];def tmZ = [[236530, Sxg]];def oN = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Td = oN == "IMDb" ? "tt${id}" : id;def qrJ = any { info.adult } { false };def zNj = Gu.find { it[0] == Td && it[1] == oN } != null;def eB = tmZ.find { it[0] == Td && it[1] == oN } != null;def sq = info.Keywords.findAll { it in KlG } || zNj || qrJ;sq = eB ? false : sq;sq ? "R18+ " : ""}{def Mf_ = ["CN", "JP", "KR", "KP", "TW", "HK"];def BP = ["aeni", "donghua", "anime"];def mkd = any {anime} || info.Keywords.findAll { it in BP } || (Mf_.contains(country) && genres =~ /Animation/);mkd ? "Anime/" : "TV Series/"}{def Sxg = "TheMovieDB::TV";def ZMh = [[VP: 68854, txF: "From Me to You", uBJ: Sxg],[VP: 219816, txF: "Fate/Grand Order: Fujimaru Ritsuka Doesn't Get It", uBJ: Sxg],[VP: 245561, txF: "Okitsura", uBJ: Sxg],[VP: 248707, txF: "Neko Oji The Guy That Got Reincarnated As a Cat", uBJ: Sxg],[VP: 259559, txF: "Headhunted to Another World", uBJ: Sxg],[VP: 261301, txF: "Botsuraku Kizoku", uBJ: Sxg],[VP: 262141, txF: "Can You Keep a Secret", uBJ: Sxg],[VP: 276204, txF: "Bogus Skill Fruitmaster", uBJ: Sxg]];def oN = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Td = oN == "IMDb" ? "tt${id}" : id;def mKA = n;ZMh.each {if (it.VP == Td && it.uBJ == oN) {mKA = it.txF}};def MPi = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def VCc = mKA.replaceAll(MPi.collect { "\\" + it }.join('|'), '');VCc = VCc.replaceAll(/(\s|\.)*$/, '');VCc}{def Sxg = "TheMovieDB::TV";def njS = [[ 95897, Sxg],[123542, Sxg],[235973, Sxg],[239779, Sxg],[257162, Sxg],[259140, Sxg],[276204, Sxg]];def lA = njS.find { it[0] == id && it[1] == info.database } != null;def Sk = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def V_P = Sk[info.database];lA ? " ($y) [${V_P}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def MPi = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def VCc = sn.replaceAll(MPi.collect { "\\" + it }.join('|'), '_');def aQO = n.replaceAll(MPi.collect { "\\" + it }.join('|'), '_');def NU = VCc.contains(aQO) ? "" : VCc;NU == 'Season '+ s ? "" : NU ? " - " + NU : ""}{"/"}{def MrJ = ["Alqanime","BlackLuster","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","Samehadaku"];def nCi = MrJ.find { CQ ->  fn.lower().contains(CQ.lower()) } ?: "";def iwD = any {(fn =~ /^\[(.*?)\]/)[0][1]} {nCi} {group} {""};iwD ? "[$iwD] " : ""}{def Sxg = "TheMovieDB::TV";def ZMh = [[VP: 68854, txF: "From Me to You", uBJ: Sxg],[VP: 219816, txF: "Fate/Grand Order: Fujimaru Ritsuka Doesn't Get It", uBJ: Sxg],[VP: 245561, txF: "Okitsura", uBJ: Sxg],[VP: 248707, txF: "Neko Oji The Guy That Got Reincarnated As a Cat", uBJ: Sxg],[VP: 259559, txF: "Headhunted to Another World", uBJ: Sxg],[VP: 261301, txF: "Botsuraku Kizoku", uBJ: Sxg],[VP: 262141, txF: "Can You Keep a Secret", uBJ: Sxg],[VP: 276204, txF: "Bogus Skill Fruitmaster", uBJ: Sxg]];def oN = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Td = oN == "IMDb" ? "tt${id}" : id;def mKA = n;ZMh.each {if (it.VP == Td && it.uBJ == oN) {mKA = it.txF}};def MPi = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def VCc = mKA.replaceAll(MPi.collect { "\\" + it }.join('|'), '');VCc = VCc.replaceAll(/(\s|\.)*$/, '');VCc}{" - "}{s00e00}{def MPi = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def VCc = t.replaceAll(MPi.collect { "\\" + it }.join('|'), '_');def Qz = any { e } { special };VCc = VCc.length() > 100 ? " " : " - $VCc ";VCc == " - Episode $Qz " ? " " : VCc}{" ["}{def ENV = [["ABEMA"],["ADN"],["BBC"],["BILI", "B-Global", "BiliIntl", "B-Site", "BiliCN"],["BOOKCUBE"],["COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LAFTEL", "LFTL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["SHAHID"],["TVER"],["UNEXT"],["WETV"],["YTB", "YT.WEB-DL", "YOUTUBE"]];def BEV = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs", "SAMEHADAKU"];def bf = ["Erai-raws", "SubsPlease"];def xf = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def krX = any {def CV = ENV.find { Gd ->  Gd.find { bRH ->  fn.lower().contains(bRH.lower()) } }[0];CV = CV.replace(".WEB-DL", "");CV ? "${CV}.WEB-DL" : ""} {source} {BEV.find { cqL ->  group == cqL || xf == cqL } ? "WEBRip" : ""} {def BMK = bf.find { dP ->  group == dP || xf == dP} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : BMK} {vs} {""};krX ? "$krX " : ""}{def XN = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $XN, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def Xw = " Dub";def oT = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : Xw;oT = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : oT;oT}{def XQ = any { audioLanguages.size() } { 0 };def oT = XQ > 2 ? " MAud" : XQ > 1 ? " DAud" : null;def ZDr = XQ > 5 ? audioLanguages.take(5) : audioLanguages;oT ? oT + ZDr.joining(" ", " (", "").upper() + (XQ > 5 ? " ...)" : ")") : ""}{def BN = any { textLanguages.size() } { 0 };def oT = BN > 2 ? ", MSub" : BN > 1 ? ", DSub" : null;def ZDr = BN > 5 ? textLanguages.take(5) : textLanguages;oT ? oT + ZDr.joining(" ", " (", "").upper() + (BN > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def bp = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def YcH = subt;bp.values().each { Ua -> if (YcH.contains(Ua)) {YcH = YcH.replace(Ua, "")}};bp.iso3b + YcH}}{f.image ? "-thumb" : ""}