{def zeN = "H:/";def rv = [home,"D:/","E:/","F:/","G:/","H:/"].collect { it as File }.sort { lo, yL ->  lo.exists() <=> yL.exists() ?: lo.diskSpace <=> yL.diskSpace }.last();def Pl = zeN ? zeN : rv;"$Pl/"}{"Videos/"}{def Mbw = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content"];def Dz = "TheMovieDB::TV";def hTz = [[271026, Dz],[220118, Dz],[ 74180, Dz]];def ccT = [[236530, Dz]];def QYY = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Ag = QYY == "IMDb" ? "tt${id}" : id;def MY = any { info.adult } { false };def jO = hTz.find { it[0] == Ag && it[1] == QYY } != null;def KOT = ccT.find { it[0] == Ag && it[1] == QYY } != null;def iU = info.Keywords.findAll { it in Mbw } || jO || MY;iU = KOT ? false : iU;iU ? "R18+ " : ""}{def bY = ["CN", "JP", "KR", "KP", "TW", "HK"];def UQ = ["aeni", "donghua", "anime"];def ov = any {anime} || info.Keywords.findAll { it in UQ } || (bY.contains(country) && genres =~ /Animation/);ov ? "Anime Movies/" : "Movies/"}{def Dz = "TheMovieDB::TV";def Prv = [[CnW: 68854, YPK: "From Me to You", ijt: Dz],[CnW: 229743, YPK: "VTuber Legend", ijt: Dz],[CnW: 234538, YPK: "Demon Lord 2099", ijt: Dz],[CnW: 237045, YPK: "Cherry Magic!", ijt: Dz],[CnW: 240633, YPK: "A Journey Through Another World", ijt: Dz],[CnW: 245285, YPK: "Failure Frame", ijt: Dz],[CnW: 271026, YPK: "Taisho Era Contract Marriage", ijt: Dz]];def QYY = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Ag = QYY == "IMDb" ? "tt${id}" : id;def JuD = n;Prv.each {if (it.CnW == Ag && it.ijt == QYY) {JuD = it.YPK}};def kh = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def xMu = JuD.replaceAll(kh.collect { "\\" + it }.join('|'), '');xMu = xMu.replaceAll(/(\s|\.)*$/, '');xMu}{" ("}{y}{")"}{def QYY = id == tmdbid ? "TheMovieDB" : "IMDb";def QK = ["TheMovieDB": "tmdbid","IMDb": "imdbid"];def vd = QK[QYY];def Ag = QYY == "IMDb" ? "tt${id}" : id;" [${vd}-${Ag}]/"}{def jWW = ["Alqanime","BlackLuster","NanDesuKa","ToonsHub","Tsundere-Raws"];def EX = jWW.find { FM ->  fn.contains(FM) } ?: "";def FIH = any {(fn =~ /^\[(.*?)\]/)[0][1]} {EX} {group} {""};FIH ? "[$FIH] " : ""}{def Dz = "TheMovieDB::TV";def Prv = [[CnW: 68854, YPK: "From Me to You", ijt: Dz],[CnW: 229743, YPK: "VTuber Legend", ijt: Dz],[CnW: 234538, YPK: "Demon Lord 2099", ijt: Dz],[CnW: 237045, YPK: "Cherry Magic!", ijt: Dz],[CnW: 240633, YPK: "A Journey Through Another World", ijt: Dz],[CnW: 245285, YPK: "Failure Frame", ijt: Dz],[CnW: 271026, YPK: "Taisho Era Contract Marriage", ijt: Dz]];def QYY = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Ag = QYY == "IMDb" ? "tt${id}" : id;def JuD = n;Prv.each {if (it.CnW == Ag && it.ijt == QYY) {JuD = it.YPK}};def kh = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def xMu = JuD.replaceAll(kh.collect { "\\" + it }.join('|'), '');xMu = xMu.replaceAll(/(\s|\.)*$/, '');xMu}{" ("}{y}{")"}{" ["}{def RJ = [[IUP: "ABEMA", sX: ["ABEMA"]],[IUP: "Bilibili.tv", sX: ["BILI", "B-Global", "BiliIntl", "B-Site", "BiliCN"]],[IUP: "Hulu", sX: ["HULU"]],[IUP: "iQIYI", sX: ["IQ.WEB-DL", "IQIYI"]],[IUP: "MeWatch", sX: ["MW.WEB-DL"]],[IUP: "Netflix", sX: ["NF.WEB-DL", "NF WEB"]],[IUP: "Prime Video", sX: ["AMZN"]],[IUP: "Shahid", sX: ["SHAHID"]],[IUP: "TVer", sX: ["TVER"]],[IUP: "U-NEXT", sX: ["UNEXT"]],[IUP: "YouTube", sX: ["YT.WEB-DL", "YOUTUBE", "YTB"]]];def bcM = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs"];def uC = ["Erai-raws", "SubsPlease"];def eEH = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def Jn = any {def JU = RJ.find { lz ->  lz.sX.find { iue ->  fn.contains(iue) } }?.sX.first() ?: "";JU = JU.replace(".WEB-DL", "");JU ? "${JU}.WEB-DL" : ""} {source} {bcM.find { Qa ->  group == Qa || eEH == Qa } ? "WEBRip" : ""} {def wTo = uC.find { TnJ ->  group == TnJ || eEH == TnJ} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : wTo} {vs} {""};Jn ? "$Jn " : ""}{def mFS = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $mFS, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def Lu = " Dub";def XPn = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : Lu;XPn = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : XPn;XPn}{def knR = any { audioLanguages.size() } { 0 };def XPn = knR > 2 ? " MAud" : knR > 1 ? " DAud" : null;def hF = knR > 5 ? audioLanguages.take(5) : audioLanguages;XPn ? XPn + hF.joining(" ", " (", "").upper() + (knR > 5 ? " ...)" : ")") : ""}{def kb = any { textLanguages.size() } { 0 };def XPn = kb > 2 ? ", MSub" : kb > 1 ? ", DSub" : null;def hF = kb > 5 ? textLanguages.take(5) : textLanguages;XPn ? XPn + hF.joining(" ", " (", "").upper() + (kb > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{def MMG = ["ass", "srt", "ssa", "vtt", "ttml"];def Tx = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def m_ = subt;Tx.values().each { GAQ -> if (m_.contains(GAQ)) {m_ = m_.replace(GAQ, "")}};MMG.contains(ext) ? Tx.iso3b + m_ : ""}{def MMG = ["jpg", "jpeg", "png", "bmp"];MMG.contains(ext) ? "-thumb" : ""}