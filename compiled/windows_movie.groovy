{def Er = "H:/";def oo = [home,"D:/","E:/","F:/","G:/","H:/"].collect { it as File }.sort { mZv, pqa ->  mZv.exists() <=> pqa.exists() ?: mZv.diskSpace <=> pqa.diskSpace }.last();def zo = Er ? Er : oo;"$zo/"}{"Videos/"}{def gOX = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","hentai", "sex", "lgbt", "explicit", "adult animation", "adult content"];def ngH = "TheMovieDB::TV";def oxM = [[271026, ngH],[220118, ngH]];def YW = [[236530, ngH]];def CQJ = any { info.database } { "IMDb" };def hhs = CQJ == "IMDb" ? "tt${id}" : id;def OQv = any { info.adult } { false };def LI = oxM.find { it[0] == hhs && it[1] == CQJ } != null;def rJl = YW.find { it[0] == hhs && it[1] == CQJ } != null;def D_g = info.Keywords.findAll { it in gOX } || LI || OQv;D_g = rJl ? false : D_g;D_g ? "R18+ " : ""}{def QXs = ["CN", "JP", "KR", "KP", "TW", "HK"];def bY = ["aeni", "donghua", "anime"];def iN = any {anime} || info.Keywords.findAll { it in bY } || (QXs.contains(country) && genres =~ /Animation/);iN ? "Anime Movies/" : "Movies/"}{def ngH = "TheMovieDB::TV";def vGu = [[vAK: 68854, Cn: "From Me to You", ep: ngH],[vAK: 229743, Cn: "VTuber Legend", ep: ngH],[vAK: 234538, Cn: "Demon Lord 2099", ep: ngH],[vAK: 237045, Cn: "Cherry Magic!", ep: ngH],[vAK: 240633, Cn: "A Journey Through Another World", ep: ngH],[vAK: 245285, Cn: "Failure Frame", ep: ngH],[vAK: 271026, Cn: "Taisho Era Contract Marriage", ep: ngH]];def CQJ = any { info.database } { "IMDb" };def hhs = CQJ == "IMDb" ? "tt${id}" : id;def vhf = n;vGu.each {if (it.vAK == hhs && it.ep == CQJ) {vhf = it.Cn}};def DX = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def _qM = vhf.replaceAll(DX.collect { "\\" + it }.join('|'), '');_qM = _qM.replaceAll(/(\s|\.)*$/, '');_qM}{" ("}{y}{")"}{def CQJ = any { info.database } { "IMDb" };def SR = ["TheMovieDB": "tmdbid","TheTVDB::Movie": "tvdbid","IMDb": "imdbid"];def mQ = SR[CQJ];def hhs = CQJ == "IMDb" ? "tt${id}" : id;" [${mQ}-${hhs}]/"}{def Bhq = ["Alqanime","BlackLuster","NanDesuKa","ToonsHub","Tsundere-Raws"];def TfV = Bhq.find { yZc ->  fn.contains(yZc) } ?: "";def vv = any {(fn =~ /^\[(.*?)\]/)[0][1]} {TfV} {group} {""};vv ? "[$vv] " : ""}{def ngH = "TheMovieDB::TV";def vGu = [[vAK: 68854, Cn: "From Me to You", ep: ngH],[vAK: 229743, Cn: "VTuber Legend", ep: ngH],[vAK: 234538, Cn: "Demon Lord 2099", ep: ngH],[vAK: 237045, Cn: "Cherry Magic!", ep: ngH],[vAK: 240633, Cn: "A Journey Through Another World", ep: ngH],[vAK: 245285, Cn: "Failure Frame", ep: ngH],[vAK: 271026, Cn: "Taisho Era Contract Marriage", ep: ngH]];def CQJ = any { info.database } { "IMDb" };def hhs = CQJ == "IMDb" ? "tt${id}" : id;def vhf = n;vGu.each {if (it.vAK == hhs && it.ep == CQJ) {vhf = it.Cn}};def DX = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def _qM = vhf.replaceAll(DX.collect { "\\" + it }.join('|'), '');_qM = _qM.replaceAll(/(\s|\.)*$/, '');_qM}{" ("}{y}{")"}{" ["}{def eC = [[dlC: "ABEMA", Qpk: ["ABEMA"]],[dlC: "Bilibili.tv", Qpk: ["B-Global", "BiliIntl", "BILI"]],[dlC: "Hulu", Qpk: ["HULU"]],[dlC: "MeWatch", Qpk: ["MW.WEB-DL"]],[dlC: "Netflix", Qpk: ["NF.WEB-DL", "NF WEB"]],[dlC: "Prime Video", Qpk: ["AMZN"]],[dlC: "TVer", Qpk: ["TVER"]],[dlC: "Shahid", Qpk: ["SHAHID"]],[dlC: "U-NEXT", Qpk: ["UNEXT"]],[dlC: "YouTube", Qpk: ["YT.WEB-DL", "YOUTUBE", "YTB"]]];def cc = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs"];def rIs = ["Erai-raws", "SubsPlease"];def sG = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def iiG = any {def Awk = eC.find { QW ->  QW.Qpk.find { GO ->  fn.contains(GO) } }?.Qpk.first() ?: "";Awk = Awk.replace(".WEB-DL", "");Awk ? "${Awk}.WEB-DL" : ""} {source} {cc.find { iV ->  group == iV || sG == iV } ? "WEBRip" : ""} {def IEG = rIs.find { hdE ->  group == hdE || sG == hdE} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : IEG} {vs} {""};iiG ? "$iiG " : ""}{def qnj = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $qnj, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def fc_ = " Dub";def Pi = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : fc_;Pi = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : Pi;Pi}{def Wie = any { audioLanguages.size() } { 0 };def Pi = Wie > 2 ? " MAud" : Wie > 1 ? " DAud" : null;def GE = Wie > 5 ? audioLanguages.take(5) : audioLanguages;Pi ? Pi + GE.joining(" ", " (", "").upper() + (Wie > 5 ? " ...)" : ")") : ""}{def saC = any { textLanguages.size() } { 0 };def Pi = saC > 2 ? ", MSub" : saC > 1 ? ", DSub" : null;def GE = saC > 5 ? textLanguages.take(5) : textLanguages;Pi ? Pi + GE.joining(" ", " (", "").upper() + (saC > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{def mkK = ["ass", "srt", "ssa", "vtt", "ttml"];def s_ = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def pmh = subt;s_.values().each { HYp -> if (pmh.contains(HYp)) {pmh = pmh.replace(HYp, "")}};mkK.contains(ext) ? s_.iso3b + pmh : ""}{def mkK = ["jpg", "jpeg", "png", "bmp"];mkK.contains(ext) ? "-thumb" : ""}