{def VP = "H:/";def DST = [home,"D:/","E:/","F:/","G:/","H:/"].collect { it as File }.sort { mzX, AwO ->  mzX.exists() <=> AwO.exists() ?: mzX.diskSpace <=> AwO.diskSpace }.last();def hI = VP ? VP : DST;"$hI/"}{"Videos/"}{def pPq = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content"];def OJ = "TheMovieDB::TV";def Vgu = [[271026, OJ],[220118, OJ],[ 74180, OJ]];def le = [[236530, OJ]];def yr = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def tm = yr == "IMDb" ? "tt${id}" : id;def In = any { info.adult } { false };def moU = Vgu.find { it[0] == tm && it[1] == yr } != null;def OpH = le.find { it[0] == tm && it[1] == yr } != null;def onx = info.Keywords.findAll { it in pPq } || moU || In;onx = OpH ? false : onx;onx ? "R18+ " : ""}{def xGP = ["CN", "JP", "KR", "KP", "TW", "HK"];def Mj = ["aeni", "donghua", "anime"];def Fl = any {anime} || info.Keywords.findAll { it in Mj } || (xGP.contains(country) && genres =~ /Animation/);Fl ? "Anime Movies/" : "Movies/"}{def OJ = "TheMovieDB::TV";def zF = [[MZ: 68854, XCq: "From Me to You", eY: OJ],[MZ: 94904, XCq: "My Next Life as a Villainess", eY: OJ],[MZ: 229743, XCq: "VTuber Legend", eY: OJ],[MZ: 234538, XCq: "Demon Lord 2099", eY: OJ],[MZ: 237045, XCq: "Cherry Magic!", eY: OJ],[MZ: 240633, XCq: "A Journey Through Another World", eY: OJ],[MZ: 245285, XCq: "Failure Frame", eY: OJ],[MZ: 271026, XCq: "Taisho Era Contract Marriage", eY: OJ]];def yr = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def tm = yr == "IMDb" ? "tt${id}" : id;def jq = n;zF.each {if (it.MZ == tm && it.eY == yr) {jq = it.XCq}};def BEg = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def HH = jq.replaceAll(BEg.collect { "\\" + it }.join('|'), '');HH = HH.replaceAll(/(\s|\.)*$/, '');HH}{" ("}{y}{")"}{def yr = id == tmdbid ? "TheMovieDB" : "IMDb";def dAW = ["TheMovieDB": "tmdbid","IMDb": "imdbid"];def Ujy = dAW[yr];def tm = yr == "IMDb" ? "tt${id}" : id;" [${Ujy}-${tm}]/"}{def iK = ["Alqanime","BlackLuster","NanDesuKa","ToonsHub","Tsundere-Raws"];def hzZ = iK.find { Bo ->  fn.contains(Bo) } ?: "";def ptS = any {(fn =~ /^\[(.*?)\]/)[0][1]} {hzZ} {group} {""};ptS ? "[$ptS] " : ""}{def OJ = "TheMovieDB::TV";def zF = [[MZ: 68854, XCq: "From Me to You", eY: OJ],[MZ: 94904, XCq: "My Next Life as a Villainess", eY: OJ],[MZ: 229743, XCq: "VTuber Legend", eY: OJ],[MZ: 234538, XCq: "Demon Lord 2099", eY: OJ],[MZ: 237045, XCq: "Cherry Magic!", eY: OJ],[MZ: 240633, XCq: "A Journey Through Another World", eY: OJ],[MZ: 245285, XCq: "Failure Frame", eY: OJ],[MZ: 271026, XCq: "Taisho Era Contract Marriage", eY: OJ]];def yr = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def tm = yr == "IMDb" ? "tt${id}" : id;def jq = n;zF.each {if (it.MZ == tm && it.eY == yr) {jq = it.XCq}};def BEg = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def HH = jq.replaceAll(BEg.collect { "\\" + it }.join('|'), '');HH = HH.replaceAll(/(\s|\.)*$/, '');HH}{" ("}{y}{")"}{" ["}{def AMg = [[vKm: "ABEMA", Fz: ["ABEMA"]],[vKm: "Bilibili.tv", Fz: ["BILI", "B-Global", "BiliIntl", "B-Site", "BiliCN"]],[vKm: "Hulu", Fz: ["HULU"]],[vKm: "iQIYI", Fz: ["IQ.WEB-DL", "IQIYI"]],[vKm: "Laftel.tv", Fz: ["LAFTEL", "LFTL"]],[vKm: "MeWatch", Fz: ["MW.WEB-DL"]],[vKm: "Netflix", Fz: ["NF.WEB-DL", "NF WEB"]],[vKm: "Prime Video", Fz: ["AMZN"]],[vKm: "Shahid", Fz: ["SHAHID"]],[vKm: "TVer", Fz: ["TVER"]],[vKm: "U-NEXT", Fz: ["UNEXT"]],[vKm: "YouTube", Fz: ["YT.WEB-DL", "YOUTUBE", "YTB"]]];def Ne = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs"];def MT = ["Erai-raws", "SubsPlease"];def yDJ = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def MlU = any {def Xx = AMg.find { TKg ->  TKg.Fz.find { TQU ->  fn.contains(TQU) } }?.Fz.mzX() ?: "";Xx = Xx.replace(".WEB-DL", "");Xx ? "${Xx}.WEB-DL" : ""} {source} {Ne.find { PZf ->  group == PZf || yDJ == PZf } ? "WEBRip" : ""} {def q_V = MT.find { Zsi ->  group == Zsi || yDJ == Zsi} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : q_V} {vs} {""};MlU ? "$MlU " : ""}{def Dt = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $Dt, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def W_ = " Dub";def zFr = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : W_;zFr = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : zFr;zFr}{def M_V = any { audioLanguages.size() } { 0 };def zFr = M_V > 2 ? " MAud" : M_V > 1 ? " DAud" : null;def IRF = M_V > 5 ? audioLanguages.take(5) : audioLanguages;zFr ? zFr + IRF.joining(" ", " (", "").upper() + (M_V > 5 ? " ...)" : ")") : ""}{def TM = any { textLanguages.size() } { 0 };def zFr = TM > 2 ? ", MSub" : TM > 1 ? ", DSub" : null;def IRF = TM > 5 ? textLanguages.take(5) : textLanguages;zFr ? zFr + IRF.joining(" ", " (", "").upper() + (TM > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{def HRj = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def NgX = subt;HRj.values().each { qWO -> if (NgX.contains(qWO)) {NgX = NgX.replace(qWO, "")}};f.subtitle ? HRj.iso3b + NgX : ""}{f.image ? "-thumb" : ""}