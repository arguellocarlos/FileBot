{def Fjv = "H:/";def Yze = [home,"D:/","E:/","F:/","G:/","H:/"].collect { it as File }.sort { qP, nzk ->  qP.exists() <=> nzk.exists() ?: qP.diskSpace <=> nzk.diskSpace }.last();def cG = Fjv ? Fjv : Yze;"$cG/"}{"Videos/"}{def GZ = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content"];def GHL = "TheMovieDB::TV";def ZQ = [[271026, GHL],[220118, GHL],[ 74180, GHL]];def LIH = [[236530, GHL]];def Dxt = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def MBm = Dxt == "IMDb" ? "tt${id}" : id;def bt = any { info.adult } { false };def Cd = ZQ.find { it[0] == MBm && it[1] == Dxt } != null;def tZ = LIH.find { it[0] == MBm && it[1] == Dxt } != null;def xs = info.Keywords.findAll { it in GZ } || Cd || bt;xs = tZ ? false : xs;xs ? "R18+ " : ""}{def PU = ["CN", "JP", "KR", "KP", "TW", "HK"];def Nn = ["aeni", "donghua", "anime"];def cm = any {anime} || info.Keywords.findAll { it in Nn } || (PU.contains(country) && genres =~ /Animation/);cm ? "Anime Movies/" : "Movies/"}{def GHL = "TheMovieDB::TV";def Od = [[OPc: 68854, hJP: "From Me to You", ZA: GHL],[OPc: 94904, hJP: "My Next Life as a Villainess", ZA: GHL],[OPc: 229743, hJP: "VTuber Legend", ZA: GHL],[OPc: 234538, hJP: "Demon Lord 2099", ZA: GHL],[OPc: 237045, hJP: "Cherry Magic!", ZA: GHL],[OPc: 240633, hJP: "A Journey Through Another World", ZA: GHL],[OPc: 245285, hJP: "Failure Frame", ZA: GHL],[OPc: 271026, hJP: "Taisho Era Contract Marriage", ZA: GHL]];def Dxt = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def MBm = Dxt == "IMDb" ? "tt${id}" : id;def Bj = n;Od.each {if (it.OPc == MBm && it.ZA == Dxt) {Bj = it.hJP}};def srB = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Bd = Bj.replaceAll(srB.collect { "\\" + it }.join('|'), '');Bd = Bd.replaceAll(/(\s|\.)*$/, '');Bd}{" ("}{y}{")"}{def Dxt = id == tmdbid ? "TheMovieDB" : "IMDb";def sZ_ = ["TheMovieDB": "tmdbid","IMDb": "imdbid"];def Lr = sZ_[Dxt];def MBm = Dxt == "IMDb" ? "tt${id}" : id;" [${Lr}-${MBm}]/"}{def yM = ["Alqanime","BlackLuster","NanDesuKa","ToonsHub","Tsundere-Raws"];def eSK = yM.find { oZ ->  fn.contains(oZ) } ?: "";def Te = any {(fn =~ /^\[(.*?)\]/)[0][1]} {eSK} {group} {""};Te ? "[$Te] " : ""}{def GHL = "TheMovieDB::TV";def Od = [[OPc: 68854, hJP: "From Me to You", ZA: GHL],[OPc: 94904, hJP: "My Next Life as a Villainess", ZA: GHL],[OPc: 229743, hJP: "VTuber Legend", ZA: GHL],[OPc: 234538, hJP: "Demon Lord 2099", ZA: GHL],[OPc: 237045, hJP: "Cherry Magic!", ZA: GHL],[OPc: 240633, hJP: "A Journey Through Another World", ZA: GHL],[OPc: 245285, hJP: "Failure Frame", ZA: GHL],[OPc: 271026, hJP: "Taisho Era Contract Marriage", ZA: GHL]];def Dxt = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def MBm = Dxt == "IMDb" ? "tt${id}" : id;def Bj = n;Od.each {if (it.OPc == MBm && it.ZA == Dxt) {Bj = it.hJP}};def srB = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Bd = Bj.replaceAll(srB.collect { "\\" + it }.join('|'), '');Bd = Bd.replaceAll(/(\s|\.)*$/, '');Bd}{" ("}{y}{")"}{" ["}{def El = [[HE: "ABEMA", fav: ["ABEMA"]],[HE: "Bilibili.tv", fav: ["BILI", "B-Global", "BiliIntl", "B-Site", "BiliCN"]],[HE: "Hulu", fav: ["HULU"]],[HE: "iQIYI", fav: ["IQ.WEB-DL", "IQIYI"]],[HE: "MeWatch", fav: ["MW.WEB-DL"]],[HE: "Netflix", fav: ["NF.WEB-DL", "NF WEB"]],[HE: "Prime Video", fav: ["AMZN"]],[HE: "Shahid", fav: ["SHAHID"]],[HE: "TVer", fav: ["TVER"]],[HE: "U-NEXT", fav: ["UNEXT"]],[HE: "YouTube", fav: ["YT.WEB-DL", "YOUTUBE", "YTB"]]];def mW = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs"];def nR = ["Erai-raws", "SubsPlease"];def Ed = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def IdX = any {def jZM = El.find { TW ->  TW.fav.find { mfr ->  fn.contains(mfr) } }?.fav.qP() ?: "";jZM = jZM.replace(".WEB-DL", "");jZM ? "${jZM}.WEB-DL" : ""} {source} {mW.find { ea ->  group == ea || Ed == ea } ? "WEBRip" : ""} {def qE = nR.find { ZcG ->  group == ZcG || Ed == ZcG} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : qE} {vs} {""};IdX ? "$IdX " : ""}{def t_ = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $t_, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def Iw = " Dub";def iK = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : Iw;iK = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : iK;iK}{def Pp = any { audioLanguages.size() } { 0 };def iK = Pp > 2 ? " MAud" : Pp > 1 ? " DAud" : null;def GA = Pp > 5 ? audioLanguages.take(5) : audioLanguages;iK ? iK + GA.joining(" ", " (", "").upper() + (Pp > 5 ? " ...)" : ")") : ""}{def hZ = any { textLanguages.size() } { 0 };def iK = hZ > 2 ? ", MSub" : hZ > 1 ? ", DSub" : null;def GA = hZ > 5 ? textLanguages.take(5) : textLanguages;iK ? iK + GA.joining(" ", " (", "").upper() + (hZ > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{def yP = ["ass", "srt", "ssa", "vtt", "ttml"];def HyU = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def rP = subt;HyU.values().each { he -> if (rP.contains(he)) {rP = rP.replace(he, "")}};yP.contains(ext) ? HyU.iso3b + rP : ""}{def yP = ["jpg", "jpeg", "png", "bmp"];yP.contains(ext) ? "-thumb" : ""}