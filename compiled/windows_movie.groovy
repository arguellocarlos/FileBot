{def SY = "H:/";def FUM = [home,"D:/","E:/","F:/","G:/","H:/"].collect { it as File }.sort { Pk, v_ ->  Pk.exists() <=> v_.exists() ?: Pk.diskSpace <=> v_.diskSpace }.last();def PV_ = SY ? SY : FUM;"$PV_/"}{def I_X = /(CN|JP|KR|KP|TW|HK)/;def Fn = /(aeni|donghua|anime)/;def qL = anime || info.Keywords =~ Fn || any {(genres =~ /Animation/ && country =~ I_X)}{false} ? true : false;def yZ = qL ? "Videos/Anime " : "Videos/";"$yZ" + "Movies/"}{def hPU = [[EEZ: 229743, EC: "VTuber Legend"],[EEZ: 240633, EC: "A Journey Through Another World"],[EEZ: 245285, EC: "Failure Frame"],[EEZ: 237045, EC: "Cherry Magic!"],[EEZ: 68854, EC: "From Me to You"],[EEZ: 271026, EC: "Taisho Era Contract Marriage"],[EEZ: 234538, EC: "Demon Lord 2099"]];def RVz = n;hPU.each {if (it.EEZ == tmdbid && type.toString() != "Movie") {RVz = it.EC}};def HXl = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def ZB = RVz.replaceAll(HXl.collect { "\\" + it }.join('|'), '');ZB = ZB.replaceAll(/(\s|\.)*$/, '');ZB}{" ("}{y}{") [tmdbid-"}{tmdbid}{"]/"}{def fJc = ["Alqanime","BlackLuster","NanDesuKa","ToonsHub","Tsundere-Raws"];def Xzl = fJc.find { bzE ->  fn.contains(bzE) } ?: "";def iBN = any {(fn =~ /^\[(.*?)\]/)[0][1]} {Xzl} {group} {""};iBN ? "[$iBN] " : ""}{def hPU = [[EEZ: 229743, EC: "VTuber Legend"],[EEZ: 240633, EC: "A Journey Through Another World"],[EEZ: 245285, EC: "Failure Frame"],[EEZ: 237045, EC: "Cherry Magic!"],[EEZ: 68854, EC: "From Me to You"],[EEZ: 271026, EC: "Taisho Era Contract Marriage"],[EEZ: 234538, EC: "Demon Lord 2099"]];def RVz = n;hPU.each {if (it.EEZ == tmdbid && type.toString() != "Movie") {RVz = it.EC}};def HXl = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def ZB = RVz.replaceAll(HXl.collect { "\\" + it }.join('|'), '');ZB = ZB.replaceAll(/(\s|\.)*$/, '');ZB}{" ("}{y}{")"} [{def uMO = [[tfJ: "Bilibili.tv", Bbg: ["B-Global", "BiliIntl", "BILI"]],[tfJ: "Prime Video", Bbg: ["AMZN"]],[tfJ: "U-NEXT", Bbg: ["UNEXT"]],[tfJ: "ABEMA", Bbg: ["ABEMA"]],[tfJ: "Hulu", Bbg: ["HULU"]],[tfJ: "Shahid", Bbg: ["SHAHID"]],[tfJ: "YouTube", Bbg: ["YT.WEB-DL", "YOUTUBE", "YTB"]],[tfJ: "Netflix", Bbg: ["NF.WEB-DL", "NF WEB"]]];def zgF = ["ASW", "Judas", "JRx7"];def Kc = ["Erai-raws", "SubsPlease"];def JJ = (fn =~ /^\[(.*?)\]/)[0][1];def BI_ = any {def wRm = uMO.find { moy ->  moy.Bbg.find { kAE ->  fn.contains(kAE) } }?.Bbg.first() ?: "";wRm = wRm.replace(".WEB-DL", "");wRm ? "${wRm}.WEB-DL" : ""} {source} {zgF.find { HP ->  group == HP || JJ == HP } ? "WEBRip" : ""} {Kc.find { NET ->  group == NET || JJ == NET} ? "WEB-DL" : ""} {vs} {""};BI_ ? "$BI_ " : ""}{resolution} {vcf.upper()}{bitdepth ? " ${bitdepth}bit" : ""}, {ac} {af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0',)}{def Kif = " Dub";def Nei = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : Kif;Nei = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : Nei;Nei}{def VN = any { audioLanguages.size() } { 0 };def Nei = VN > 2 ? " MAud" : VN > 1 ? " DAud" : null;def Yv = VN > 5 ? audioLanguages.take(5) : audioLanguages;Nei ? Nei + Yv.joining(" ", " (", "").upper() + (VN > 5 ? " ...)" : ")") : ""}{def hd = any { textLanguages.size() } { 0 };def Nei = hd > 2 ? ", MSub" : hd > 1 ? ", DSub" : null;def Yv = hd > 5 ? textLanguages.take(5) : textLanguages;Nei ? Nei + Yv.joining(" ", " (", "").upper() + (hd > 5 ? " ...)" : ")") : ""}][{crc32.upper()}]{ext =~ /(ass|srt|ssa|vtt)/ ? '.' + lang.ISO3B : ""}{ext =~ /jp(?:e)?g|png/ ? "-thumb" : ""}