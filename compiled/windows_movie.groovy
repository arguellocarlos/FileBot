{def WyP = "H:/";def xUP = [home,"D:/","E:/","F:/","G:/","H:/"].collect { it as File }.sort { wE, IF ->  wE.exists() <=> IF.exists() ?: wE.diskSpace <=> IF.diskSpace }.last();def Mp = WyP ? WyP : xUP;"$Mp/"}{"Videos/"}{def yCl = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content"];def Lg = "TheMovieDB::TV";def hs = [[271026, Lg],[220118, Lg],[ 74180, Lg]];def uR = [[236530, Lg]];def wGW = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def ud = wGW == "IMDb" ? "tt${id}" : id;def NYu = any { info.adult } { false };def VY = hs.find { it[0] == ud && it[1] == wGW } != null;def LV = uR.find { it[0] == ud && it[1] == wGW } != null;def pCA = info.Keywords.findAll { it in yCl } || VY || NYu;pCA = LV ? false : pCA;pCA ? "R18+ " : ""}{def _c = ["CN", "JP", "KR", "KP", "TW", "HK"];def Upr = ["aeni", "donghua", "anime"];def bMl = any {anime} || info.Keywords.findAll { it in Upr } || (_c.contains(country) && genres =~ /Animation/);bMl ? "Anime Movies/" : "Movies/"}{def Lg = "TheMovieDB::TV";def tu = [[ojN: 68854, IJr: "From Me to You", w_: Lg],[ojN: 229743, IJr: "VTuber Legend", w_: Lg],[ojN: 234538, IJr: "Demon Lord 2099", w_: Lg],[ojN: 237045, IJr: "Cherry Magic!", w_: Lg],[ojN: 240633, IJr: "A Journey Through Another World", w_: Lg],[ojN: 245285, IJr: "Failure Frame", w_: Lg],[ojN: 271026, IJr: "Taisho Era Contract Marriage", w_: Lg]];def wGW = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def ud = wGW == "IMDb" ? "tt${id}" : id;def fk = n;tu.each {if (it.ojN == ud && it.w_ == wGW) {fk = it.IJr}};def mGO = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def VC = fk.replaceAll(mGO.collect { "\\" + it }.join('|'), '');VC = VC.replaceAll(/(\s|\.)*$/, '');VC}{" ("}{y}{")"}{def wGW = id == tmdbid ? "TheMovieDB" : "IMDb";def xeT = ["TheMovieDB": "tmdbid","IMDb": "imdbid"];def PLt = xeT[wGW];def ud = wGW == "IMDb" ? "tt${id}" : id;" [${PLt}-${ud}]/"}{def eG = ["Alqanime","BlackLuster","NanDesuKa","ToonsHub","Tsundere-Raws"];def szO = eG.find { kJ ->  fn.contains(kJ) } ?: "";def A_ = any {(fn =~ /^\[(.*?)\]/)[0][1]} {szO} {group} {""};A_ ? "[$A_] " : ""}{def Lg = "TheMovieDB::TV";def tu = [[ojN: 68854, IJr: "From Me to You", w_: Lg],[ojN: 229743, IJr: "VTuber Legend", w_: Lg],[ojN: 234538, IJr: "Demon Lord 2099", w_: Lg],[ojN: 237045, IJr: "Cherry Magic!", w_: Lg],[ojN: 240633, IJr: "A Journey Through Another World", w_: Lg],[ojN: 245285, IJr: "Failure Frame", w_: Lg],[ojN: 271026, IJr: "Taisho Era Contract Marriage", w_: Lg]];def wGW = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def ud = wGW == "IMDb" ? "tt${id}" : id;def fk = n;tu.each {if (it.ojN == ud && it.w_ == wGW) {fk = it.IJr}};def mGO = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def VC = fk.replaceAll(mGO.collect { "\\" + it }.join('|'), '');VC = VC.replaceAll(/(\s|\.)*$/, '');VC}{" ("}{y}{")"}{" ["}{def EPV = [[JV: "ABEMA", WP: ["ABEMA"]],[JV: "Bilibili.tv", WP: ["B-Global", "BiliIntl", "BILI"]],[JV: "Hulu", WP: ["HULU"]],[JV: "MeWatch", WP: ["MW.WEB-DL"]],[JV: "Netflix", WP: ["NF.WEB-DL", "NF WEB"]],[JV: "Prime Video", WP: ["AMZN"]],[JV: "TVer", WP: ["TVER"]],[JV: "Shahid", WP: ["SHAHID"]],[JV: "U-NEXT", WP: ["UNEXT"]],[JV: "YouTube", WP: ["YT.WEB-DL", "YOUTUBE", "YTB"]]];def gx = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs"];def yt = ["Erai-raws", "SubsPlease"];def gmI = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def na = any {def tDo = EPV.find { Xqo ->  Xqo.WP.find { pSr ->  fn.contains(pSr) } }?.WP.first() ?: "";tDo = tDo.replace(".WEB-DL", "");tDo ? "${tDo}.WEB-DL" : ""} {source} {gx.find { Gd ->  group == Gd || gmI == Gd } ? "WEBRip" : ""} {def uKS = yt.find { fpl ->  group == fpl || gmI == fpl} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : uKS} {vs} {""};na ? "$na " : ""}{def kN = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $kN, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def kkc = " Dub";def SQ = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : kkc;SQ = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : SQ;SQ}{def ad = any { audioLanguages.size() } { 0 };def SQ = ad > 2 ? " MAud" : ad > 1 ? " DAud" : null;def _i = ad > 5 ? audioLanguages.take(5) : audioLanguages;SQ ? SQ + _i.joining(" ", " (", "").upper() + (ad > 5 ? " ...)" : ")") : ""}{def brn = any { textLanguages.size() } { 0 };def SQ = brn > 2 ? ", MSub" : brn > 1 ? ", DSub" : null;def _i = brn > 5 ? textLanguages.take(5) : textLanguages;SQ ? SQ + _i.joining(" ", " (", "").upper() + (brn > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{def Af = ["ass", "srt", "ssa", "vtt", "ttml"];def xA = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def vKH = subt;xA.values().each { HqG -> if (vKH.contains(HqG)) {vKH = vKH.replace(HqG, "")}};Af.contains(ext) ? xA.iso3b + vKH : ""}{def Af = ["jpg", "jpeg", "png", "bmp"];Af.contains(ext) ? "-thumb" : ""}