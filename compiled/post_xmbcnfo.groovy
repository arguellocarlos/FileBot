{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def yk = target.dir;def UM_ = any{ s } { 0 };def iJi = any{ e } { special };def Umx = 0;def co = null;try {if (db.TheTVDB?.id) {def IH = "https://api.tvmaze.com";def rrP = curl "$IH/lookup/shows?thetvdb=${db.TheTVDB.id}";def OJ = rrP.id;co = curl "$IH/shows/$OJ/episodebynumber?season=$UM_&number=$iJi";Umx = co.id}} catch (Exception err) {};def AD = "";def vou = "en-US";def zP = null;def nKC = new File("$home/.filebotsecrets.json");if (nKC.exists()) {def FHP = new groovy.json.JsonSlurper().parseText(nKC.text);AD = FHP.AD;vou = FHP.language;zP = FHP.person_info_dir};def Hu = "https://api.themoviedb.org/3/tv/$id/season/$UM_/episode/$iJi";def vhM = ["accept": "application/json"];def AZx = curl(vhM, "$Hu?language=$vou&api_key=$AD");def MMk = curl(vhM, "$Hu/external_ids?api_key=$AD");def Xx = curl(vhM, "$Hu/credits?language=$vou&api_key=$AD");def OBA = curl(vhM, "$Hu/images?include_image_language=en%2Cnull&api_key=$AD");def uma = (yk / target.nameWithoutExtension + "-thumb.jpg").toString();def QI = new File(uma);def XNV = new File(uma.replace("-thumb",""));if (!(QI.exists() || XNV.exists()) && OBA.stills.size() > 0) {def aU = "https://image.tmdb.org/t/p/original${OBA.stills[0].file_path}";system "curl", "-o", yk / target.nameWithoutExtension + "-thumb.jpg", aU};def hN = [];(Xx.cast + Xx.guest_stars).eachWithIndex { sJ, Uoc ->  def Kmn = "$zP/${sJ.name[0]}/${sJ.name}";def eEA = sJ.order ?: Uoc + hN.size();hN << [jqy: sJ.name, xEG: sJ.character, VHg: eEA, Kmn: "${Kmn}/folder.jpg"];if (zP) {def F_S = new File(Kmn);if (!F_S.exists()) {F_S.mkdirs();system "curl", "-o", "${Kmn}/folder.jpg", "https://image.tmdb.org/t/p/original${sJ.profile_path}"}}};def ui = yk / target.nameWithoutExtension + ".nfo";XML(ui) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(AZx.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (MMk?.imdb_id) {uniqueid(type: "imdb", value: MMk.imdb_id, MMk.imdb_id);imdbid(MMk.imdb_id)};if (MMk?.tvdb_id) {uniqueid(type: "tvdb", value: MMk.tvdb_id, MMk.tvdb_id);tvdbid(MMk.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (Umx) {uniqueid(type: "tvmaze", value: Umx, Umx);tvmazeid(Umx)}} catch (Exception err) {};if (QI.exists()) {art {poster(uma)}};hN.each { GKf ->  actor {name(GKf.jqy);role(GKf.xEG);sortorder(GKf.VHg);if (zP) { thumb(GKf.Kmn) }}};showtitle(n);episode(iJi);season(UM_);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { iDE ->  video {def lK = Float.parseFloat(iDE.'Duration');codec(iDE.'Format');micodec(iDE.'Format');bitrate(iDE.'BitRate');width(iDE.'Width');height(iDE.'Height');aspect(iDE.'DisplayAspectRatio/String');aspectratio(iDE.'DisplayAspectRatio/String');framerate(iDE.'FrameRate');'default'(iDE.'Default' == "Yes" ? "True" : "False");forced(iDE.'Forced' == "Yes" ? "True" : "False");duration(iDE.'Duration' ? (int) Math.floor(lK / 60000) : 0);durationinseconds(iDE.'Duration' ? (int) Math.floor(lK / 1000) : 0)}};target.mediaInfo.Audio.each { NHV ->  audio {codec(NHV.'Format');micodec(NHV.'Format');language(NHV.'Language/String3');channels(NHV.'Channel(s)');samplingrate(NHV.'SamplingRate');'default'(NHV.'Default' == "Yes" ? "True" : "False");forced(NHV.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { kln ->  subtitle {codec(kln.'Format');micodec(kln.'Format');width('0');height('0');language(kln.'Language/String3');'default'(kln.'Default' == "Yes" ? "True" : "False");forced(kln.'Forced' == "Yes" ? "True" : "False")}}}}}}}