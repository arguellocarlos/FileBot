{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def rz = target.dir;def Puk = any{ s } { 0 };def ge = any{ e } { special };def ADq = 0;def d_ = null;try {if (db.TheTVDB?.id) {def WQ_ = "https://api.tvmaze.com";def au = curl "$WQ_/lookup/shows?thetvdb=${db.TheTVDB.id}";def _hP = au.id;d_ = curl "$WQ_/shows/$_hP/episodebynumber?season=$Puk&number=$ge";ADq = d_.id}} catch (Exception err) {};def SN = "";def mH = "en-US";def snZ = null;def dq = new File("$home/.filebotsecrets.json");if (dq.exists()) {def pQN = new groovy.json.JsonSlurper().parseText(dq.text);SN = pQN.SN;mH = pQN.language;snZ = pQN.person_info_dir};def HiK = "https://api.themoviedb.org/3/tv/$id/season/$Puk/episode/$ge";def qMZ = ["accept": "application/json"];def tD = curl(qMZ, "$HiK?language=$mH&api_key=$SN");def EG = curl(qMZ, "$HiK/external_ids?api_key=$SN");def pxz = curl(qMZ, "$HiK/credits?language=$mH&api_key=$SN");def PRG = curl(qMZ, "$HiK/images?include_image_language=en%2Cnull&api_key=$SN");def nG = (rz / target.nameWithoutExtension + "-thumb.jpg").toString();def vg = new File(nG);def bO = new File(nG.replace("-thumb",""));if (!(vg.exists() || bO.exists()) && PRG.stills.size() > 0) {def bu = "https://image.tmdb.org/t/p/original${PRG.stills[0].file_path}";system "curl", "-o", rz / target.nameWithoutExtension + "-thumb.jpg", bu};def tFK = [];(pxz.cast + pxz.guest_stars).eachWithIndex { BPN, Vp ->  def FBP = "$snZ/${BPN.name[0]}/${BPN.name}";def lZ = BPN.order ?: Vp + tFK.size();tFK << [qoY: BPN.name, wt: BPN.character, Zk: lZ, FBP: "${FBP}/folder.jpg"];if (snZ) {def hD = new File(FBP);if (!hD.exists()) {hD.mkdirs();system "curl", "-o", "${FBP}/folder.jpg", "https://image.tmdb.org/t/p/original${BPN.profile_path}"}}};def YFB = rz / target.nameWithoutExtension + ".nfo";XML(YFB) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(tD.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (EG?.imdb_id) {uniqueid(type: "imdb", value: EG.imdb_id, EG.imdb_id);imdbid(EG.imdb_id)};if (EG?.tvdb_id) {uniqueid(type: "tvdb", value: EG.tvdb_id, EG.tvdb_id);tvdbid(EG.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (ADq) {uniqueid(type: "tvmaze", value: ADq, ADq);tvmazeid(ADq)}} catch (Exception err) {};if (vg.exists()) {art {poster(nG)}};tFK.each { bU ->  actor {name(bU.qoY);role(bU.wt);sortorder(bU.Zk);if (snZ) { thumb(bU.FBP) }}};showtitle(n);episode(ge);season(Puk);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { _l ->  video {def uMg = Float.parseFloat(_l.'Duration');codec(_l.'Format');micodec(_l.'Format');bitrate(_l.'BitRate');width(_l.'Width');height(_l.'Height');aspect(_l.'DisplayAspectRatio/String');aspectratio(_l.'DisplayAspectRatio/String');framerate(_l.'FrameRate');'default'(_l.'Default' == "Yes" ? "True" : "False");forced(_l.'Forced' == "Yes" ? "True" : "False");duration(_l.'Duration' ? (int) Math.floor(uMg / 60000) : 0);durationinseconds(_l.'Duration' ? (int) Math.floor(uMg / 1000) : 0)}};target.mediaInfo.Audio.each { xP ->  audio {codec(xP.'Format');micodec(xP.'Format');language(xP.'Language/String3');channels(xP.'Channel(s)');samplingrate(xP.'SamplingRate');'default'(xP.'Default' == "Yes" ? "True" : "False");forced(xP.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { pcd ->  subtitle {codec(pcd.'Format');micodec(pcd.'Format');width('0');height('0');language(pcd.'Language/String3');'default'(pcd.'Default' == "Yes" ? "True" : "False");forced(pcd.'Forced' == "Yes" ? "True" : "False")}}}}}}}