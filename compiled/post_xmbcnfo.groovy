{ source, target, metadata ->  if (type.toString() != "Episode" || !vf || f.subtitle || f.audio || f.image) {return null};def ezI = target.dir;def hS = any{ s } { 0 };def PHz = any{ e } { special };def kr = 0;def tR = null;try {if (db.TheTVDB?.id) {def Pbu = "https://api.tvmaze.com";def cfS = curl "$Pbu/lookup/shows?thetvdb=${db.TheTVDB.id}";def wIH = cfS.id;tR = curl "$Pbu/shows/$wIH/episodebynumber?season=$hS&number=$PHz";kr = tR.id}} catch (Exception err) {};def TiV = "";def Io = "en-US";def ZVz = null;def YMA = new File("$home/.filebotsecrets.json");if (YMA.exists()) {def HD = new groovy.json.JsonSlurper().parseText(YMA.text);TiV = HD.TiV;Io = HD.language;ZVz = HD.person_info_dir};def RF = "https://api.themoviedb.org/3/tv/$id/season/$hS/episode/$PHz";def mcF = ["accept": "application/json"];def ali = curl(mcF, "$RF?language=$Io&api_key=$TiV");def tS = curl(mcF, "$RF/external_ids?api_key=$TiV");def ovW = curl(mcF, "$RF/credits?language=$Io&api_key=$TiV");def Qo = curl(mcF, "$RF/images?include_image_language=en%2Cnull&api_key=$TiV");def jlU = (ezI / target.nameWithoutExtension + "-thumb.jpg").toString();def RC = new File(jlU);def mLI = new File(jlU.replace("-thumb",""));if (!(RC.exists() || mLI.exists()) && Qo.stills.size() > 0) {def ZWF = "https://image.tmdb.org/t/p/original${Qo.stills[0].file_path}";system "curl", "-o", ezI / target.nameWithoutExtension + "-thumb.jpg", ZWF};def sW = [];(ovW.cast + ovW.guest_stars).eachWithIndex { MHg, vQp ->  def FP = "$ZVz/${MHg.name[0]}/${MHg.name}";def LEO = MHg.order ?: vQp + sW.size();sW << [_q: MHg.name, eg: MHg.character, ZWS: LEO, FP: "${FP}/folder.jpg"];if (ZVz) {def zs = new File(FP);if (!zs.exists()) {zs.mkdirs();system "curl", "-o", "${FP}/folder.jpg", "https://image.tmdb.org/t/p/original${MHg.profile_path}"}}};def Rvc = ezI / target.nameWithoutExtension + ".nfo";XML(Rvc) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(ali.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);year(airdate.format("yyyy"));uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (tS?.imdb_id) {uniqueid(type: "imdb", value: tS.imdb_id, tS.imdb_id);imdbid(tS.imdb_id)};if (tS?.tvdb_id) {uniqueid(type: "tvdb", value: tS.tvdb_id, tS.tvdb_id);tvdbid(tS.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (kr) {uniqueid(type: "tvmaze", value: kr, kr);tvmazeid(kr)}} catch (Exception err) {};if (RC.exists()) {art {poster(jlU)}};sW.each { le ->  actor {name(le._q);role(le.eg);sortorder(le.ZWS);if (ZVz) { thumb(le.FP) }}};showtitle(n);episode(PHz);season(hS);aired(airdate.format("yyyy-MM-dd"));fileinfo {streamdetails {target.mediaInfo.Video.each { qvu ->  video {def Rw = Float.parseFloat(qvu.'Duration');codec(qvu.'Format');micodec(qvu.'Format');bitrate(qvu.'BitRate');width(qvu.'Width');height(qvu.'Height');aspect(qvu.'DisplayAspectRatio/String');aspectratio(qvu.'DisplayAspectRatio/String');framerate(qvu.'FrameRate');'default'(qvu.'Default' == "Yes" ? "True" : "False");forced(qvu.'Forced' == "Yes" ? "True" : "False");duration(qvu.'Duration' ? (int) Math.floor(Rw / 60000) : 0);durationinseconds(qvu.'Duration' ? (int) Math.floor(Rw / 1000) : 0)}};target.mediaInfo.Audio.each { SKs ->  audio {codec(SKs.'Format');micodec(SKs.'Format');language(SKs.'Language/String3');channels(SKs.'Channel(s)');samplingrate(SKs.'SamplingRate');'default'(SKs.'Default' == "Yes" ? "True" : "False");forced(SKs.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { ZlP ->  subtitle {codec(ZlP.'Format');micodec(ZlP.'Format');width('0');height('0');language(ZlP.'Language/String3');'default'(ZlP.'Default' == "Yes" ? "True" : "False");forced(ZlP.'Forced' == "Yes" ? "True" : "False")}}}}}}}