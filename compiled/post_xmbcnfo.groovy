{ source, target, metadata -> if (type.toString() != "Episode" || !vf || ext =~ /(ass|srt|ssa|vtt)/) {return null};def sbs = target.dir;def hSM = any{ s } { 0 };def EZy = any{ e } { special };def dd = 0;def YlJ = null;try {if (db.TheTVDB?.id) {def fgy = curl "https://api.tvmaze.com/lookup/shows?thetvdb=${db.TheTVDB.id}";def EdZ = fgy.id;YlJ = curl "https://api.tvmaze.com/shows/$EdZ/episodebynumber?season=$hSM&number=$EZy";dd = YlJ.id}} catch (Exception err) {};def QNM = "";def FNr = "en-US";def _f = null;def wWC = new File("$home/.filebotsecrets.json");if (wWC.exists()) {def ZRD = new groovy.json.JsonSlurper().parseText(wWC.text);QNM = ZRD.QNM;FNr = ZRD.language;_f = ZRD.person_info_dir};def SDD = "https://api.themoviedb.org/3/tv/$id/season/$hSM/episode/$EZy";def kTf = curl(["accept": "application/json"], "$SDD?language=$FNr&api_key=$QNM");def gRz = curl(["accept": "application/json"], "$SDD/external_ids?api_key=$QNM");def kS = curl(["accept": "application/json"], "$SDD/credits?language=$FNr&api_key=$QNM");def aF = curl(["accept": "application/json"], "$SDD/images?include_image_language=en%2Cnull&api_key=$QNM");def cgN = (sbs / target.nameWithoutExtension + "-thumb.jpg").toString();def UE = new File(cgN);def Fe = new File(cgN.replace("-thumb",""));if (!(UE.exists() || Fe.exists()) && aF.stills.size() > 0) {def sbH = "https://image.tmdb.org/t/p/original${aF.stills[0].file_path}";system "curl", "-o", sbs / target.nameWithoutExtension + "-thumb.jpg", sbH};def RY = [];(kS.cast + kS.guest_stars).eachWithIndex { dD, Vju -> def bl = "$_f/${dD.name[0]}/${dD.name}";def Jp_ = dD.order ?: Vju + RY.size();RY << [rIF: dD.name, nNi: dD.character, ha: Jp_, bl: "${bl}/folder.jpg"];if (_f) {def mWb = new File(bl);if (!mWb.exists()) {mWb.mkdirs();system "curl", "-o", "${bl}/folder.jpg", "https://image.tmdb.org/t/p/original${dD.profile_path}"}}};def FBY = sbs / target.nameWithoutExtension + ".nfo";XML(FBY) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(kTf.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);year(airdate.format("yyyy"));uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (gRz?.imdb_id) {uniqueid(type: "imdb", value: gRz.imdb_id, gRz.imdb_id);imdbid(gRz.imdb_id)};if (gRz?.tvdb_id) {uniqueid(type: "tvdb", value: gRz.tvdb_id, gRz.tvdb_id);tvdbid(gRz.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (dd) {uniqueid(type: "tvmaze", value: dd, dd);tvmazeid(dd)}} catch (Exception err) {};if (UE.exists()) {art {poster(cgN)}};RY.each { SnR ->  actor {name(SnR.rIF);role(SnR.nNi);sortorder(SnR.ha);if (_f) { thumb(SnR.bl) }}};showtitle(n);episode(EZy);season(hSM);aired(airdate.format("yyyy-MM-dd"));fileinfo {streamdetails {target.mediaInfo.Video.each { fqk ->  video {def VFs = Float.parseFloat(fqk.'Duration');codec(fqk.'Format');micodec(fqk.'Format');bitrate(fqk.'BitRate');width(fqk.'Width');height(fqk.'Height');aspect(fqk.'DisplayAspectRatio/String');aspectratio(fqk.'DisplayAspectRatio/String');framerate(fqk.'FrameRate');'default'(fqk.'Default' == "Yes" ? "True" : "False");forced(fqk.'Forced' == "Yes" ? "True" : "False");duration(fqk.'Duration' ? (int) Math.floor(VFs / 60000) : 0);durationinseconds(fqk.'Duration' ? (int) Math.floor(VFs / 1000) : 0)}};target.mediaInfo.Audio.each { yu ->  audio {codec(yu.'Format');micodec(yu.'Format');language(yu.'Language/String3');channels(yu.'Channel(s)');samplingrate(yu.'SamplingRate');'default'(yu.'Default' == "Yes" ? "True" : "False");forced(yu.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { mX ->  subtitle {codec(mX.'Format');micodec(mX.'Format');width('0');height('0');language(mX.'Language/String3');'default'(mX.'Default' == "Yes" ? "True" : "False");forced(mX.'Forced' == "Yes" ? "True" : "False")}}}}}}}