{ source, target, metadata ->  if (type.toString() != "Episode" || !vf || f.subtitle || f.audio || f.image) {return null};def LDT = target.dir;def AA = any{ s } { 0 };def Bmm = any{ e } { special };def GmA = 0;def KU_ = null;try {if (db.TheTVDB?.id) {def SV = "https://api.tvmaze.com";def MZS = curl "$SV/lookup/shows?thetvdb=${db.TheTVDB.id}";def Yp = MZS.id;KU_ = curl "$SV/shows/$Yp/episodebynumber?season=$AA&number=$Bmm";GmA = KU_.id}} catch (Exception err) {};def Nc = "";def evN = "en-US";def HzQ = null;def pvy = new File("$home/.filebotsecrets.json");if (pvy.exists()) {def pMU = new groovy.json.JsonSlurper().parseText(pvy.text);Nc = pMU.Nc;evN = pMU.language;HzQ = pMU.person_info_dir};def doi = "https://api.themoviedb.org/3/tv/$id/season/$AA/episode/$Bmm";def WR = ["accept": "application/json"];def OQ = curl(WR, "$doi?language=$evN&api_key=$Nc");def sYG = curl(WR, "$doi/external_ids?api_key=$Nc");def Gq = curl(WR, "$doi/credits?language=$evN&api_key=$Nc");def bUH = curl(WR, "$doi/images?include_image_language=en%2Cnull&api_key=$Nc");def sUm = (LDT / target.nameWithoutExtension + "-thumb.jpg").toString();def jZ = new File(sUm);def Tr = new File(sUm.replace("-thumb",""));if (!(jZ.exists() || Tr.exists()) && bUH.stills.size() > 0) {def JEB = "https://image.tmdb.org/t/p/original${bUH.stills[0].file_path}";system "curl", "-o", LDT / target.nameWithoutExtension + "-thumb.jpg", JEB};def zu = [];(Gq.cast + Gq.guest_stars).eachWithIndex { yK, YWU ->  def tV = "$HzQ/${yK.name[0]}/${yK.name}";def oE = yK.order ?: YWU + zu.size();zu << [Cs: yK.name, jf: yK.character, AT: oE, tV: "${tV}/folder.jpg"];if (HzQ) {def HjE = new File(tV);if (!HjE.exists()) {HjE.mkdirs();system "curl", "-o", "${tV}/folder.jpg", "https://image.tmdb.org/t/p/original${yK.profile_path}"}}};def GhA = LDT / target.nameWithoutExtension + ".nfo";XML(GhA) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(OQ.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);year(airdate.format("yyyy"));uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (sYG?.imdb_id) {uniqueid(type: "imdb", value: sYG.imdb_id, sYG.imdb_id);imdbid(sYG.imdb_id)};if (sYG?.tvdb_id) {uniqueid(type: "tvdb", value: sYG.tvdb_id, sYG.tvdb_id);tvdbid(sYG.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (GmA) {uniqueid(type: "tvmaze", value: GmA, GmA);tvmazeid(GmA)}} catch (Exception err) {};if (jZ.exists()) {art {poster(sUm)}};zu.each { mPe ->  actor {name(mPe.Cs);role(mPe.jf);sortorder(mPe.AT);if (HzQ) { thumb(mPe.tV) }}};showtitle(n);episode(Bmm);season(AA);aired(airdate.format("yyyy-MM-dd"));fileinfo {streamdetails {target.mediaInfo.Video.each { Sh ->  video {def bk_ = Float.parseFloat(Sh.'Duration');codec(Sh.'Format');micodec(Sh.'Format');bitrate(Sh.'BitRate');width(Sh.'Width');height(Sh.'Height');aspect(Sh.'DisplayAspectRatio/String');aspectratio(Sh.'DisplayAspectRatio/String');framerate(Sh.'FrameRate');'default'(Sh.'Default' == "Yes" ? "True" : "False");forced(Sh.'Forced' == "Yes" ? "True" : "False");duration(Sh.'Duration' ? (int) Math.floor(bk_ / 60000) : 0);durationinseconds(Sh.'Duration' ? (int) Math.floor(bk_ / 1000) : 0)}};target.mediaInfo.Audio.each { l_ ->  audio {codec(l_.'Format');micodec(l_.'Format');language(l_.'Language/String3');channels(l_.'Channel(s)');samplingrate(l_.'SamplingRate');'default'(l_.'Default' == "Yes" ? "True" : "False");forced(l_.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { CNE ->  subtitle {codec(CNE.'Format');micodec(CNE.'Format');width('0');height('0');language(CNE.'Language/String3');'default'(CNE.'Default' == "Yes" ? "True" : "False");forced(CNE.'Forced' == "Yes" ? "True" : "False")}}}}}}}