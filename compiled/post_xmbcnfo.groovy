{ source, target, metadata -> if (type.toString() != "Episode" || !vf || ext =~ /(ass|srt|ssa|vtt)/) {return null};def lS = target.dir;def LWO = any{ s } { 0 };def HX = any{ e } { special };def BF = 0;def oj = null;try {if (db.TheTVDB?.id) {def Hj = "https://api.tvmaze.com";def ja = curl "$Hj/lookup/shows?thetvdb=${db.TheTVDB.id}";def neK = ja.id;oj = curl "$Hj/shows/$neK/episodebynumber?season=$LWO&number=$HX";BF = oj.id}} catch (Exception err) {};def JIU = "";def LJZ = "en-US";def dI = null;def NN = new File("$home/.filebotsecrets.json");if (NN.exists()) {def yNB = new groovy.json.JsonSlurper().parseText(NN.text);JIU = yNB.JIU;LJZ = yNB.language;dI = yNB.person_info_dir};def VA = "https://api.themoviedb.org/3/tv/$id/season/$LWO/episode/$HX";def KK = ["accept": "application/json"];def mpk = curl(KK, "$VA?language=$LJZ&api_key=$JIU");def xW = curl(KK, "$VA/external_ids?api_key=$JIU");def zZ = curl(KK, "$VA/credits?language=$LJZ&api_key=$JIU");def ucD = curl(KK, "$VA/images?include_image_language=en%2Cnull&api_key=$JIU");def Gb = (lS / target.nameWithoutExtension + "-thumb.jpg").toString();def _a = new File(Gb);def afN = new File(Gb.replace("-thumb",""));if (!(_a.exists() || afN.exists()) && ucD.stills.size() > 0) {def GtP = "https://image.tmdb.org/t/p/original${ucD.stills[0].file_path}";system "curl", "-o", lS / target.nameWithoutExtension + "-thumb.jpg", GtP};def bwQ = [];(zZ.cast + zZ.guest_stars).eachWithIndex { keQ, eWE -> def Jc = "$dI/${keQ.name[0]}/${keQ.name}";def Mg = keQ.order ?: eWE + bwQ.size();bwQ << [Hp: keQ.name, EZD: keQ.character, pGs: Mg, Jc: "${Jc}/folder.jpg"];if (dI) {def _X = new File(Jc);if (!_X.exists()) {_X.mkdirs();system "curl", "-o", "${Jc}/folder.jpg", "https://image.tmdb.org/t/p/original${keQ.profile_path}"}}};def Neq = lS / target.nameWithoutExtension + ".nfo";XML(Neq) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(mpk.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);year(airdate.format("yyyy"));uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (xW?.imdb_id) {uniqueid(type: "imdb", value: xW.imdb_id, xW.imdb_id);imdbid(xW.imdb_id)};if (xW?.tvdb_id) {uniqueid(type: "tvdb", value: xW.tvdb_id, xW.tvdb_id);tvdbid(xW.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (BF) {uniqueid(type: "tvmaze", value: BF, BF);tvmazeid(BF)}} catch (Exception err) {};if (_a.exists()) {art {poster(Gb)}};bwQ.each { wbC ->  actor {name(wbC.Hp);role(wbC.EZD);sortorder(wbC.pGs);if (dI) { thumb(wbC.Jc) }}};showtitle(n);episode(HX);season(LWO);aired(airdate.format("yyyy-MM-dd"));fileinfo {streamdetails {target.mediaInfo.Video.each { RBp ->  video {def cw = Float.parseFloat(RBp.'Duration');codec(RBp.'Format');micodec(RBp.'Format');bitrate(RBp.'BitRate');width(RBp.'Width');height(RBp.'Height');aspect(RBp.'DisplayAspectRatio/String');aspectratio(RBp.'DisplayAspectRatio/String');framerate(RBp.'FrameRate');'default'(RBp.'Default' == "Yes" ? "True" : "False");forced(RBp.'Forced' == "Yes" ? "True" : "False");duration(RBp.'Duration' ? (int) Math.floor(cw / 60000) : 0);durationinseconds(RBp.'Duration' ? (int) Math.floor(cw / 1000) : 0)}};target.mediaInfo.Audio.each { qS ->  audio {codec(qS.'Format');micodec(qS.'Format');language(qS.'Language/String3');channels(qS.'Channel(s)');samplingrate(qS.'SamplingRate');'default'(qS.'Default' == "Yes" ? "True" : "False");forced(qS.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { OvC ->  subtitle {codec(OvC.'Format');micodec(OvC.'Format');width('0');height('0');language(OvC.'Language/String3');'default'(OvC.'Default' == "Yes" ? "True" : "False");forced(OvC.'Forced' == "Yes" ? "True" : "False")}}}}}}}