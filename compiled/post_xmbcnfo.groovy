{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def Rxd = target.dir;def FK = any{ s } { 0 };def dND = any{ e } { special };def Um = 0;def Fo = null;try {if (db.TheTVDB?.id) {def _vs = "https://api.tvmaze.com";def LN = curl "$_vs/lookup/shows?thetvdb=${db.TheTVDB.id}";def Unm = LN.id;Fo = curl "$_vs/shows/$Unm/episodebynumber?season=$FK&number=$dND";Um = Fo.id}} catch (Exception err) {};def IXE = "";def oLX = "en-US";def eBF = null;def Ot = new File("$home/.filebotsecrets.json");if (Ot.exists()) {def vfy = new groovy.json.JsonSlurper().parseText(Ot.text);IXE = vfy.IXE;oLX = vfy.language;eBF = vfy.person_info_dir};def Te = "https://api.themoviedb.org/3/tv/$id/season/$FK/episode/$dND";def Gp = ["accept": "application/json"];def qM = curl(Gp, "$Te?language=$oLX&api_key=$IXE");def _ow = curl(Gp, "$Te/external_ids?api_key=$IXE");def ut = curl(Gp, "$Te/credits?language=$oLX&api_key=$IXE");def psx = curl(Gp, "$Te/images?include_image_language=en%2Cnull&api_key=$IXE");def Fmj = (Rxd / target.nameWithoutExtension + "-thumb.jpg").toString();def xM = new File(Fmj);def _UV = new File(Fmj.replace("-thumb",""));if (!(xM.exists() || _UV.exists()) && psx.stills.size() > 0) {def GM = "https://image.tmdb.org/t/p/original${psx.stills[0].file_path}";system "curl", "-o", Rxd / target.nameWithoutExtension + "-thumb.jpg", GM};def Obt = [];(ut.cast + ut.guest_stars).eachWithIndex { UCU, gWZ ->  def fv = "$eBF/${UCU.name[0]}/${UCU.name}";def JC = UCU.order ?: gWZ + Obt.size();Obt << [RSL: UCU.name, jEU: UCU.character, iF: JC, fv: "${fv}/folder.jpg"];if (eBF) {def tZY = new File(fv);if (!tZY.exists()) {tZY.mkdirs();system "curl", "-o", "${fv}/folder.jpg", "https://image.tmdb.org/t/p/original${UCU.profile_path}"}}};def QZK = Rxd / target.nameWithoutExtension + ".nfo";XML(QZK) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(qM.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (_ow?.imdb_id) {uniqueid(type: "imdb", value: _ow.imdb_id, _ow.imdb_id);imdbid(_ow.imdb_id)};if (_ow?.tvdb_id) {uniqueid(type: "tvdb", value: _ow.tvdb_id, _ow.tvdb_id);tvdbid(_ow.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (Um) {uniqueid(type: "tvmaze", value: Um, Um);tvmazeid(Um)}} catch (Exception err) {};if (xM.exists()) {art {poster(Fmj)}};Obt.each { Mz ->  actor {name(Mz.RSL);role(Mz.jEU);sortorder(Mz.iF);if (eBF) { thumb(Mz.fv) }}};showtitle(n);episode(dND);season(FK);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { GP ->  video {def EaB = Float.parseFloat(GP.'Duration');codec(GP.'Format');micodec(GP.'Format');bitrate(GP.'BitRate');width(GP.'Width');height(GP.'Height');aspect(GP.'DisplayAspectRatio/String');aspectratio(GP.'DisplayAspectRatio/String');framerate(GP.'FrameRate');'default'(GP.'Default' == "Yes" ? "True" : "False");forced(GP.'Forced' == "Yes" ? "True" : "False");duration(GP.'Duration' ? (int) Math.floor(EaB / 60000) : 0);durationinseconds(GP.'Duration' ? (int) Math.floor(EaB / 1000) : 0)}};target.mediaInfo.Audio.each { tnO ->  audio {codec(tnO.'Format');micodec(tnO.'Format');language(tnO.'Language/String3');channels(tnO.'Channel(s)');samplingrate(tnO.'SamplingRate');'default'(tnO.'Default' == "Yes" ? "True" : "False");forced(tnO.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { df ->  subtitle {codec(df.'Format');micodec(df.'Format');width('0');height('0');language(df.'Language/String3');'default'(df.'Default' == "Yes" ? "True" : "False");forced(df.'Forced' == "Yes" ? "True" : "False")}}}}}}}