{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def Oa = target.dir;def Fq = any{ s } { 0 };def wOR = any{ e } { special };def THT = 0;def PyZ = null;try {if (db.TheTVDB?.id) {def Jk = "https://api.tvmaze.com";def Jd = curl "$Jk/lookup/shows?thetvdb=${db.TheTVDB.id}";def Mq = Jd.id;PyZ = curl "$Jk/shows/$Mq/episodebynumber?season=$Fq&number=$wOR";THT = PyZ.id}} catch (Exception err) {};def Ci = "";def LlF = "en-US";def xmF = null;def Faf = new File("$home/.filebotsecrets.json");if (Faf.exists()) {def ifo = new groovy.json.JsonSlurper().parseText(Faf.text);Ci = ifo.Ci;LlF = ifo.language;xmF = ifo.person_info_dir};def JAC = "https://api.themoviedb.org/3/tv/$id/season/$Fq/episode/$wOR";def Qu = ["accept": "application/json"];def Or = curl(Qu, "$JAC?language=$LlF&api_key=$Ci");def bsa = curl(Qu, "$JAC/external_ids?api_key=$Ci");def pj = curl(Qu, "$JAC/credits?language=$LlF&api_key=$Ci");def Ctw = curl(Qu, "$JAC/images?include_image_language=en%2Cnull&api_key=$Ci");def CtY = (Oa / target.nameWithoutExtension + "-thumb.jpg").toString();def ka = new File(CtY);def d_S = new File(CtY.replace("-thumb",""));if (!(ka.exists() || d_S.exists()) && Ctw.stills.size() > 0) {def qh = "https://image.tmdb.org/t/p/original${Ctw.stills[0].file_path}";system "curl", "-o", Oa / target.nameWithoutExtension + "-thumb.jpg", qh};def jK = [];(pj.cast + pj.guest_stars).eachWithIndex { gv, IA ->  def El = "$xmF/${gv.name[0]}/${gv.name}";def vYI = gv.order ?: IA + jK.size();jK << [Ke: gv.name, C_E: gv.character, sso: vYI, El: "${El}/folder.jpg"];if (xmF) {def aNg = new File(El);if (!aNg.exists()) {aNg.mkdirs();system "curl", "-o", "${El}/folder.jpg", "https://image.tmdb.org/t/p/original${gv.profile_path}"}}};def ARy = Oa / target.nameWithoutExtension + ".nfo";XML(ARy) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(Or.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);year(airdate.format("yyyy"));uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (bsa?.imdb_id) {uniqueid(type: "imdb", value: bsa.imdb_id, bsa.imdb_id);imdbid(bsa.imdb_id)};if (bsa?.tvdb_id) {uniqueid(type: "tvdb", value: bsa.tvdb_id, bsa.tvdb_id);tvdbid(bsa.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (THT) {uniqueid(type: "tvmaze", value: THT, THT);tvmazeid(THT)}} catch (Exception err) {};if (ka.exists()) {art {poster(CtY)}};jK.each { GVO ->  actor {name(GVO.Ke);role(GVO.C_E);sortorder(GVO.sso);if (xmF) { thumb(GVO.El) }}};showtitle(n);episode(wOR);season(Fq);aired(airdate.format("yyyy-MM-dd"));fileinfo {streamdetails {target.mediaInfo.Video.each { qgj ->  video {def hF_ = Float.parseFloat(qgj.'Duration');codec(qgj.'Format');micodec(qgj.'Format');bitrate(qgj.'BitRate');width(qgj.'Width');height(qgj.'Height');aspect(qgj.'DisplayAspectRatio/String');aspectratio(qgj.'DisplayAspectRatio/String');framerate(qgj.'FrameRate');'default'(qgj.'Default' == "Yes" ? "True" : "False");forced(qgj.'Forced' == "Yes" ? "True" : "False");duration(qgj.'Duration' ? (int) Math.floor(hF_ / 60000) : 0);durationinseconds(qgj.'Duration' ? (int) Math.floor(hF_ / 1000) : 0)}};target.mediaInfo.Audio.each { YCi ->  audio {codec(YCi.'Format');micodec(YCi.'Format');language(YCi.'Language/String3');channels(YCi.'Channel(s)');samplingrate(YCi.'SamplingRate');'default'(YCi.'Default' == "Yes" ? "True" : "False");forced(YCi.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { DZp ->  subtitle {codec(DZp.'Format');micodec(DZp.'Format');width('0');height('0');language(DZp.'Language/String3');'default'(DZp.'Default' == "Yes" ? "True" : "False");forced(DZp.'Forced' == "Yes" ? "True" : "False")}}}}}}}