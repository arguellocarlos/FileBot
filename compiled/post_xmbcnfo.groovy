{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def l_O = target.dir;def cv = any{ s } { 0 };def Iv = any{ e } { special };def ntM = 0;def _Ex = null;try {if (db.TheTVDB?.id) {def GJ = "https://api.tvmaze.com";def ME = curl "$GJ/lookup/shows?thetvdb=${db.TheTVDB.id}";def FS = ME.id;_Ex = curl "$GJ/shows/$FS/episodebynumber?season=$cv&number=$Iv";ntM = _Ex.id}} catch (Exception err) {};def EXp = "";def cP = "en-US";def gLf = null;def iL = new File("$home/.filebotsecrets.json");if (iL.exists()) {def yT = new groovy.json.JsonSlurper().parseText(iL.text);EXp = yT.EXp;cP = yT.language;gLf = yT.person_info_dir};def jlj = "https://api.themoviedb.org/3/tv/$id/season/$cv/episode/$Iv";def lW = ["accept": "application/json"];def Wzu = curl(lW, "$jlj?language=$cP&api_key=$EXp");def vPS = curl(lW, "$jlj/external_ids?api_key=$EXp");def Xj = curl(lW, "$jlj/credits?language=$cP&api_key=$EXp");def mXY = curl(lW, "$jlj/images?include_image_language=en%2Cnull&api_key=$EXp");def td = (l_O / target.nameWithoutExtension + "-thumb.jpg").toString();def aL = new File(td);def Gxy = new File(td.replace("-thumb",""));if (!(aL.exists() || Gxy.exists()) && mXY.stills.size() > 0) {def du = "https://image.tmdb.org/t/p/original${mXY.stills[0].file_path}";system "curl", "-o", l_O / target.nameWithoutExtension + "-thumb.jpg", du};def Vf = [];(Xj.cast + Xj.guest_stars).eachWithIndex { qd, CR ->  def Nv = "$gLf/${qd.name[0]}/${qd.name}";def Yae = qd.order ?: CR + Vf.size();Vf << [yO: qd.name, AF: qd.character, tPh: Yae, Nv: "${Nv}/folder.jpg"];if (gLf) {def La = new File(Nv);if (!La.exists()) {La.mkdirs();system "curl", "-o", "${Nv}/folder.jpg", "https://image.tmdb.org/t/p/original${qd.profile_path}"}}};def PSF = l_O / target.nameWithoutExtension + ".nfo";XML(PSF) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(Wzu.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (vPS?.imdb_id) {uniqueid(type: "imdb", value: vPS.imdb_id, vPS.imdb_id);imdbid(vPS.imdb_id)};if (vPS?.tvdb_id) {uniqueid(type: "tvdb", value: vPS.tvdb_id, vPS.tvdb_id);tvdbid(vPS.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (ntM) {uniqueid(type: "tvmaze", value: ntM, ntM);tvmazeid(ntM)}} catch (Exception err) {};if (aL.exists()) {art {poster(td)}};Vf.each { Wne ->  actor {name(Wne.yO);role(Wne.AF);sortorder(Wne.tPh);if (gLf) { thumb(Wne.Nv) }}};showtitle(n);episode(Iv);season(cv);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { Xk ->  video {def Pe = Float.parseFloat(Xk.'Duration');codec(Xk.'Format');micodec(Xk.'Format');bitrate(Xk.'BitRate');width(Xk.'Width');height(Xk.'Height');aspect(Xk.'DisplayAspectRatio/String');aspectratio(Xk.'DisplayAspectRatio/String');framerate(Xk.'FrameRate');'default'(Xk.'Default' == "Yes" ? "True" : "False");forced(Xk.'Forced' == "Yes" ? "True" : "False");duration(Xk.'Duration' ? (int) Math.floor(Pe / 60000) : 0);durationinseconds(Xk.'Duration' ? (int) Math.floor(Pe / 1000) : 0)}};target.mediaInfo.Audio.each { XeB ->  audio {codec(XeB.'Format');micodec(XeB.'Format');language(XeB.'Language/String3');channels(XeB.'Channel(s)');samplingrate(XeB.'SamplingRate');'default'(XeB.'Default' == "Yes" ? "True" : "False");forced(XeB.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { Tp ->  subtitle {codec(Tp.'Format');micodec(Tp.'Format');width('0');height('0');language(Tp.'Language/String3');'default'(Tp.'Default' == "Yes" ? "True" : "False");forced(Tp.'Forced' == "Yes" ? "True" : "False")}}}}}}}