{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def jE = target.dir;def jn = any{ s } { 0 };def nE = any{ e } { special };def Qkw = 0;def tsF = null;try {if (db.TheTVDB?.id) {def hO = "https://api.tvmaze.com";def OO = curl "$hO/lookup/shows?thetvdb=${db.TheTVDB.id}";def FE = OO.id;tsF = curl "$hO/shows/$FE/episodebynumber?season=$jn&number=$nE";Qkw = tsF.id}} catch (Exception err) {};def htM = "";def APF = "en-US";def Km = null;def zYa = new File("$home/.filebotsecrets.json");if (zYa.exists()) {def u_Q = new groovy.json.JsonSlurper().parseText(zYa.text);htM = u_Q.htM;APF = u_Q.language;Km = u_Q.person_info_dir};def fZ = "https://api.themoviedb.org/3/tv/$id/season/$jn/episode/$nE";def rbB = ["accept": "application/json"];def _Lq = curl(rbB, "$fZ?language=$APF&api_key=$htM");def dJ = curl(rbB, "$fZ/external_ids?api_key=$htM");def sf = curl(rbB, "$fZ/credits?language=$APF&api_key=$htM");def TPY = curl(rbB, "$fZ/images?include_image_language=en%2Cnull&api_key=$htM");def qP = (jE / target.nameWithoutExtension + "-thumb.jpg").toString();def Cbf = new File(qP);def xkm = new File(qP.replace("-thumb",""));if (!(Cbf.exists() || xkm.exists()) && TPY.stills.size() > 0) {def Qp = "https://image.tmdb.org/t/p/original${TPY.stills[0].file_path}";system "curl", "-o", jE / target.nameWithoutExtension + "-thumb.jpg", Qp};def XUf = [];(sf.cast + sf.guest_stars).eachWithIndex { su, VvV ->  def KbS = "$Km/${su.name[0]}/${su.name}";def El = su.order ?: VvV + XUf.size();XUf << [hK: su.name, OdM: su.character, Hfe: El, KbS: "${KbS}/folder.jpg"];if (Km) {def _uJ = new File(KbS);if (!_uJ.exists()) {_uJ.mkdirs();system "curl", "-o", "${KbS}/folder.jpg", "https://image.tmdb.org/t/p/original${su.profile_path}"}}};def pF = jE / target.nameWithoutExtension + ".nfo";XML(pF) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(_Lq.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (dJ?.imdb_id) {uniqueid(type: "imdb", value: dJ.imdb_id, dJ.imdb_id);imdbid(dJ.imdb_id)};if (dJ?.tvdb_id) {uniqueid(type: "tvdb", value: dJ.tvdb_id, dJ.tvdb_id);tvdbid(dJ.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (Qkw) {uniqueid(type: "tvmaze", value: Qkw, Qkw);tvmazeid(Qkw)}} catch (Exception err) {};if (Cbf.exists()) {art {poster(qP)}};XUf.each { WZ ->  actor {name(WZ.hK);role(WZ.OdM);sortorder(WZ.Hfe);if (Km) { thumb(WZ.KbS) }}};showtitle(n);episode(nE);season(jn);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { xF ->  video {def EBX = Float.parseFloat(xF.'Duration');codec(xF.'Format');micodec(xF.'Format');bitrate(xF.'BitRate');width(xF.'Width');height(xF.'Height');aspect(xF.'DisplayAspectRatio/String');aspectratio(xF.'DisplayAspectRatio/String');framerate(xF.'FrameRate');'default'(xF.'Default' == "Yes" ? "True" : "False");forced(xF.'Forced' == "Yes" ? "True" : "False");duration(xF.'Duration' ? (int) Math.floor(EBX / 60000) : 0);durationinseconds(xF.'Duration' ? (int) Math.floor(EBX / 1000) : 0)}};target.mediaInfo.Audio.each { p_d ->  audio {codec(p_d.'Format');micodec(p_d.'Format');language(p_d.'Language/String3');channels(p_d.'Channel(s)');samplingrate(p_d.'SamplingRate');'default'(p_d.'Default' == "Yes" ? "True" : "False");forced(p_d.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { taY ->  subtitle {codec(taY.'Format');micodec(taY.'Format');width('0');height('0');language(taY.'Language/String3');'default'(taY.'Default' == "Yes" ? "True" : "False");forced(taY.'Forced' == "Yes" ? "True" : "False")}}}}}}}