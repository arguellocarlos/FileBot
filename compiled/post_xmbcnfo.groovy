{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def mKd = target.dir;def tx = any{ s } { 0 };def Uu = any{ e } { special };def bu = 0;def Fh = null;try {if (db.TheTVDB?.id) {def lt = "https://api.tvmaze.com";def CP = curl "$lt/lookup/shows?thetvdb=${db.TheTVDB.id}";def yd = CP.id;Fh = curl "$lt/shows/$yd/episodebynumber?season=$tx&number=$Uu";bu = Fh.id}} catch (Exception err) {};def AZN = "";def GF = "en-US";def vj = null;def _um = new File("$home/.filebotsecrets.json");if (_um.exists()) {def kfc = new groovy.json.JsonSlurper().parseText(_um.text);AZN = kfc.AZN;GF = kfc.language;vj = kfc.person_info_dir};def TF = "https://api.themoviedb.org/3/tv/$id/season/$tx/episode/$Uu";def hr = ["accept": "application/json"];def cR = curl(hr, "$TF?language=$GF&api_key=$AZN");def GCF = curl(hr, "$TF/external_ids?api_key=$AZN");def epF = curl(hr, "$TF/credits?language=$GF&api_key=$AZN");def QA = curl(hr, "$TF/images?include_image_language=en%2Cnull&api_key=$AZN");def cYr = (mKd / target.nameWithoutExtension + "-thumb.jpg").toString();def XK = new File(cYr);def xEQ = new File(cYr.replace("-thumb",""));if (!(XK.exists() || xEQ.exists()) && QA.stills.size() > 0) {def JMQ = "https://image.tmdb.org/t/p/original${QA.stills[0].file_path}";system "curl", "-o", mKd / target.nameWithoutExtension + "-thumb.jpg", JMQ};def dvt = [];(epF.cast + epF.guest_stars).eachWithIndex { goG, TV ->  def FYq = "$vj/${goG.name[0]}/${goG.name}";def AfW = goG.order ?: TV + dvt.size();dvt << [DNU: goG.name, eDC: goG.character, HY: AfW, FYq: "${FYq}/folder.jpg"];if (vj) {def jC = new File(FYq);if (!jC.exists()) {jC.mkdirs();system "curl", "-o", "${FYq}/folder.jpg", "https://image.tmdb.org/t/p/original${goG.profile_path}"}}};def IoZ = mKd / target.nameWithoutExtension + ".nfo";XML(IoZ) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(cR.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (GCF?.imdb_id) {uniqueid(type: "imdb", value: GCF.imdb_id, GCF.imdb_id);imdbid(GCF.imdb_id)};if (GCF?.tvdb_id) {uniqueid(type: "tvdb", value: GCF.tvdb_id, GCF.tvdb_id);tvdbid(GCF.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (bu) {uniqueid(type: "tvmaze", value: bu, bu);tvmazeid(bu)}} catch (Exception err) {};if (XK.exists()) {art {poster(cYr)}};dvt.each { AaQ ->  actor {name(AaQ.DNU);role(AaQ.eDC);sortorder(AaQ.HY);if (vj) { thumb(AaQ.FYq) }}};showtitle(n);episode(Uu);season(tx);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { qC ->  video {def Sb = Float.parseFloat(qC.'Duration');codec(qC.'Format');micodec(qC.'Format');bitrate(qC.'BitRate');width(qC.'Width');height(qC.'Height');aspect(qC.'DisplayAspectRatio/String');aspectratio(qC.'DisplayAspectRatio/String');framerate(qC.'FrameRate');'default'(qC.'Default' == "Yes" ? "True" : "False");forced(qC.'Forced' == "Yes" ? "True" : "False");duration(qC.'Duration' ? (int) Math.floor(Sb / 60000) : 0);durationinseconds(qC.'Duration' ? (int) Math.floor(Sb / 1000) : 0)}};target.mediaInfo.Audio.each { Zbc ->  audio {codec(Zbc.'Format');micodec(Zbc.'Format');language(Zbc.'Language/String3');channels(Zbc.'Channel(s)');samplingrate(Zbc.'SamplingRate');'default'(Zbc.'Default' == "Yes" ? "True" : "False");forced(Zbc.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { oP ->  subtitle {codec(oP.'Format');micodec(oP.'Format');width('0');height('0');language(oP.'Language/String3');'default'(oP.'Default' == "Yes" ? "True" : "False");forced(oP.'Forced' == "Yes" ? "True" : "False")}}}}}}}