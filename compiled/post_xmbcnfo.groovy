{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def IO = target.dir;def QGy = any{ s } { 0 };def pFn = any{ e } { special };def ikw = 0;def XZ = null;try {if (db.TheTVDB?.id) {def ToQ = "https://api.tvmaze.com";def Csn = curl "$ToQ/lookup/shows?thetvdb=${db.TheTVDB.id}";def XMs = Csn.id;XZ = curl "$ToQ/shows/$XMs/episodebynumber?season=$QGy&number=$pFn";ikw = XZ.id}} catch (Exception err) {};def HTb = "";def lq = "en-US";def wxQ = null;def Gs = new File("$home/.filebotsecrets.json");if (Gs.exists()) {def enI = new groovy.json.JsonSlurper().parseText(Gs.text);HTb = enI.HTb;lq = enI.language;wxQ = enI.person_info_dir};def Snm = "https://api.themoviedb.org/3/tv/$id/season/$QGy/episode/$pFn";def pk = ["accept": "application/json"];def wi = curl(pk, "$Snm?language=$lq&api_key=$HTb");def Qj = curl(pk, "$Snm/external_ids?api_key=$HTb");def VNK = curl(pk, "$Snm/credits?language=$lq&api_key=$HTb");def MLa = curl(pk, "$Snm/images?include_image_language=en%2Cnull&api_key=$HTb");def O_ = (IO / target.nameWithoutExtension + "-thumb.jpg").toString();def arE = new File(O_);def qzp = new File(O_.replace("-thumb",""));if (!(arE.exists() || qzp.exists()) && MLa.stills.size() > 0) {def XxF = "https://image.tmdb.org/t/p/original${MLa.stills[0].file_path}";system "curl", "-o", IO / target.nameWithoutExtension + "-thumb.jpg", XxF};def Agz = [];(VNK.cast + VNK.guest_stars).eachWithIndex { jq, tt ->  def gL_ = "$wxQ/${jq.name[0]}/${jq.name}";def HyV = jq.order ?: tt + Agz.size();Agz << [OY: jq.name, jk: jq.character, Lp: HyV, gL_: "${gL_}/folder.jpg"];if (wxQ) {def Bv = new File(gL_);if (!Bv.exists()) {Bv.mkdirs();system "curl", "-o", "${gL_}/folder.jpg", "https://image.tmdb.org/t/p/original${jq.profile_path}"}}};def VDO = IO / target.nameWithoutExtension + ".nfo";XML(VDO) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(wi.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (Qj?.imdb_id) {uniqueid(type: "imdb", value: Qj.imdb_id, Qj.imdb_id);imdbid(Qj.imdb_id)};if (Qj?.tvdb_id) {uniqueid(type: "tvdb", value: Qj.tvdb_id, Qj.tvdb_id);tvdbid(Qj.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (ikw) {uniqueid(type: "tvmaze", value: ikw, ikw);tvmazeid(ikw)}} catch (Exception err) {};if (arE.exists()) {art {poster(O_)}};Agz.each { PnD ->  actor {name(PnD.OY);role(PnD.jk);sortorder(PnD.Lp);if (wxQ) { thumb(PnD.gL_) }}};showtitle(n);episode(pFn);season(QGy);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { CV ->  video {def bN = Float.parseFloat(CV.'Duration');codec(CV.'Format');micodec(CV.'Format');bitrate(CV.'BitRate');width(CV.'Width');height(CV.'Height');aspect(CV.'DisplayAspectRatio/String');aspectratio(CV.'DisplayAspectRatio/String');framerate(CV.'FrameRate');'default'(CV.'Default' == "Yes" ? "True" : "False");forced(CV.'Forced' == "Yes" ? "True" : "False");duration(CV.'Duration' ? (int) Math.floor(bN / 60000) : 0);durationinseconds(CV.'Duration' ? (int) Math.floor(bN / 1000) : 0)}};target.mediaInfo.Audio.each { AK ->  audio {codec(AK.'Format');micodec(AK.'Format');language(AK.'Language/String3');channels(AK.'Channel(s)');samplingrate(AK.'SamplingRate');'default'(AK.'Default' == "Yes" ? "True" : "False");forced(AK.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { is ->  subtitle {codec(is.'Format');micodec(is.'Format');width('0');height('0');language(is.'Language/String3');'default'(is.'Default' == "Yes" ? "True" : "False");forced(is.'Forced' == "Yes" ? "True" : "False")}}}}}}}