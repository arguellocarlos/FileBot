{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def oTy = target.dir;def lwV = any{ s } { 0 };def ULp = any{ e } { special };def YJ = 0;def YV = null;try {if (db.TheTVDB?.id) {def mO = "https://api.tvmaze.com";def hG = curl "$mO/lookup/shows?thetvdb=${db.TheTVDB.id}";def kjy = hG.id;YV = curl "$mO/shows/$kjy/episodebynumber?season=$lwV&number=$ULp";YJ = YV.id}} catch (Exception err) {};def Ua_ = "";def Vq = "en-US";def rAk = null;def HnY = new File("$home/.filebotsecrets.json");if (HnY.exists()) {def Zq = new groovy.json.JsonSlurper().parseText(HnY.text);Ua_ = Zq.Ua_;Vq = Zq.language;rAk = Zq.person_info_dir};def hh = "https://api.themoviedb.org/3/tv/$id/season/$lwV/episode/$ULp";def Bk = ["accept": "application/json"];def RLp = curl(Bk, "$hh?language=$Vq&api_key=$Ua_");def Df = curl(Bk, "$hh/external_ids?api_key=$Ua_");def bC = curl(Bk, "$hh/credits?language=$Vq&api_key=$Ua_");def XK = curl(Bk, "$hh/images?include_image_language=en%2Cnull&api_key=$Ua_");def GR = (oTy / target.nameWithoutExtension + "-thumb.jpg").toString();def PT = new File(GR);def oE = new File(GR.replace("-thumb",""));if (!(PT.exists() || oE.exists()) && XK.stills.size() > 0) {def xHS = "https://image.tmdb.org/t/p/original${XK.stills[0].file_path}";system "curl", "-o", oTy / target.nameWithoutExtension + "-thumb.jpg", xHS};def DSd = [];(bC.cast + bC.guest_stars).eachWithIndex { St, Oh ->  def UfN = "$rAk/${St.name[0]}/${St.name}";def YNx = St.order ?: Oh + DSd.size();DSd << [Sug: St.name, NmO: St.character, mCH: YNx, UfN: "${UfN}/folder.jpg"];if (rAk) {def Dk = new File(UfN);if (!Dk.exists()) {Dk.mkdirs();system "curl", "-o", "${UfN}/folder.jpg", "https://image.tmdb.org/t/p/original${St.profile_path}"}}};def gK = oTy / target.nameWithoutExtension + ".nfo";XML(gK) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(RLp.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);year(airdate.format("yyyy"));uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (Df?.imdb_id) {uniqueid(type: "imdb", value: Df.imdb_id, Df.imdb_id);imdbid(Df.imdb_id)};if (Df?.tvdb_id) {uniqueid(type: "tvdb", value: Df.tvdb_id, Df.tvdb_id);tvdbid(Df.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (YJ) {uniqueid(type: "tvmaze", value: YJ, YJ);tvmazeid(YJ)}} catch (Exception err) {};if (PT.exists()) {art {poster(GR)}};DSd.each { Mv ->  actor {name(Mv.Sug);role(Mv.NmO);sortorder(Mv.mCH);if (rAk) { thumb(Mv.UfN) }}};showtitle(n);episode(ULp);season(lwV);aired(airdate.format("yyyy-MM-dd"));fileinfo {streamdetails {target.mediaInfo.Video.each { xpH ->  video {def Rg = Float.parseFloat(xpH.'Duration');codec(xpH.'Format');micodec(xpH.'Format');bitrate(xpH.'BitRate');width(xpH.'Width');height(xpH.'Height');aspect(xpH.'DisplayAspectRatio/String');aspectratio(xpH.'DisplayAspectRatio/String');framerate(xpH.'FrameRate');'default'(xpH.'Default' == "Yes" ? "True" : "False");forced(xpH.'Forced' == "Yes" ? "True" : "False");duration(xpH.'Duration' ? (int) Math.floor(Rg / 60000) : 0);durationinseconds(xpH.'Duration' ? (int) Math.floor(Rg / 1000) : 0)}};target.mediaInfo.Audio.each { __q ->  audio {codec(__q.'Format');micodec(__q.'Format');language(__q.'Language/String3');channels(__q.'Channel(s)');samplingrate(__q.'SamplingRate');'default'(__q.'Default' == "Yes" ? "True" : "False");forced(__q.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { Yuu ->  subtitle {codec(Yuu.'Format');micodec(Yuu.'Format');width('0');height('0');language(Yuu.'Language/String3');'default'(Yuu.'Default' == "Yes" ? "True" : "False");forced(Yuu.'Forced' == "Yes" ? "True" : "False")}}}}}}}