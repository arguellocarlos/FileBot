{ source, target, metadata ->  if (type.toString() != "Episode" || !vf || f.subtitle || f.audio || f.image) {return null};def IJh = target.dir;def _p = any{ s } { 0 };def sOZ = any{ e } { special };def jgS = 0;def tsU = null;try {if (db.TheTVDB?.id) {def IEd = "https://api.tvmaze.com";def vme = curl "$IEd/lookup/shows?thetvdb=${db.TheTVDB.id}";def Fx = vme.id;tsU = curl "$IEd/shows/$Fx/episodebynumber?season=$_p&number=$sOZ";jgS = tsU.id}} catch (Exception err) {};def kTI = "";def dI = "en-US";def KQ = null;def kgg = new File("$home/.filebotsecrets.json");if (kgg.exists()) {def GKW = new groovy.json.JsonSlurper().parseText(kgg.text);kTI = GKW.kTI;dI = GKW.language;KQ = GKW.person_info_dir};def DAD = "https://api.themoviedb.org/3/tv/$id/season/$_p/episode/$sOZ";def rvB = ["accept": "application/json"];def IN = curl(rvB, "$DAD?language=$dI&api_key=$kTI");def zJm = curl(rvB, "$DAD/external_ids?api_key=$kTI");def Dw = curl(rvB, "$DAD/credits?language=$dI&api_key=$kTI");def nVD = curl(rvB, "$DAD/images?include_image_language=en%2Cnull&api_key=$kTI");def bo = (IJh / target.nameWithoutExtension + "-thumb.jpg").toString();def wSS = new File(bo);def znV = new File(bo.replace("-thumb",""));if (!(wSS.exists() || znV.exists()) && nVD.stills.size() > 0) {def vE = "https://image.tmdb.org/t/p/original${nVD.stills[0].file_path}";system "curl", "-o", IJh / target.nameWithoutExtension + "-thumb.jpg", vE};def QnF = [];(Dw.cast + Dw.guest_stars).eachWithIndex { qx, uw ->  def Dva = "$KQ/${qx.name[0]}/${qx.name}";def vPL = qx.order ?: uw + QnF.size();QnF << [jQ_: qx.name, UO: qx.character, V_: vPL, Dva: "${Dva}/folder.jpg"];if (KQ) {def HX = new File(Dva);if (!HX.exists()) {HX.mkdirs();system "curl", "-o", "${Dva}/folder.jpg", "https://image.tmdb.org/t/p/original${qx.profile_path}"}}};def Qg = IJh / target.nameWithoutExtension + ".nfo";XML(Qg) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(IN.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);year(airdate.format("yyyy"));uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (zJm?.imdb_id) {uniqueid(type: "imdb", value: zJm.imdb_id, zJm.imdb_id);imdbid(zJm.imdb_id)};if (zJm?.tvdb_id) {uniqueid(type: "tvdb", value: zJm.tvdb_id, zJm.tvdb_id);tvdbid(zJm.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (jgS) {uniqueid(type: "tvmaze", value: jgS, jgS);tvmazeid(jgS)}} catch (Exception err) {};if (wSS.exists()) {art {poster(bo)}};QnF.each { OI ->  actor {name(OI.jQ_);role(OI.UO);sortorder(OI.V_);if (KQ) { thumb(OI.Dva) }}};showtitle(n);episode(sOZ);season(_p);aired(airdate.format("yyyy-MM-dd"));fileinfo {streamdetails {target.mediaInfo.Video.each { iA ->  video {def oV = Float.parseFloat(iA.'Duration');codec(iA.'Format');micodec(iA.'Format');bitrate(iA.'BitRate');width(iA.'Width');height(iA.'Height');aspect(iA.'DisplayAspectRatio/String');aspectratio(iA.'DisplayAspectRatio/String');framerate(iA.'FrameRate');'default'(iA.'Default' == "Yes" ? "True" : "False");forced(iA.'Forced' == "Yes" ? "True" : "False");duration(iA.'Duration' ? (int) Math.floor(oV / 60000) : 0);durationinseconds(iA.'Duration' ? (int) Math.floor(oV / 1000) : 0)}};target.mediaInfo.Audio.each { pp ->  audio {codec(pp.'Format');micodec(pp.'Format');language(pp.'Language/String3');channels(pp.'Channel(s)');samplingrate(pp.'SamplingRate');'default'(pp.'Default' == "Yes" ? "True" : "False");forced(pp.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { gf ->  subtitle {codec(gf.'Format');micodec(gf.'Format');width('0');height('0');language(gf.'Language/String3');'default'(gf.'Default' == "Yes" ? "True" : "False");forced(gf.'Forced' == "Yes" ? "True" : "False")}}}}}}}