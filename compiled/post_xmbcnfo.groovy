{ source, target, metadata ->  if (type.toString() != "Episode" || !vf || f.subtitle || f.audio || f.image) {return null};def NU = target.dir;def CEb = any{ s } { 0 };def Jn = any{ e } { special };def zv = 0;def YzV = null;try {if (db.TheTVDB?.id) {def IrY = "https://api.tvmaze.com";def ayE = curl "$IrY/lookup/shows?thetvdb=${db.TheTVDB.id}";def ZM = ayE.id;YzV = curl "$IrY/shows/$ZM/episodebynumber?season=$CEb&number=$Jn";zv = YzV.id}} catch (Exception err) {};def GQO = "";def iWy = "en-US";def dZ = null;def Bb = new File("$home/.filebotsecrets.json");if (Bb.exists()) {def Uw = new groovy.json.JsonSlurper().parseText(Bb.text);GQO = Uw.GQO;iWy = Uw.language;dZ = Uw.person_info_dir};def IZ = "https://api.themoviedb.org/3/tv/$id/season/$CEb/episode/$Jn";def NZh = ["accept": "application/json"];def syt = curl(NZh, "$IZ?language=$iWy&api_key=$GQO");def LnT = curl(NZh, "$IZ/external_ids?api_key=$GQO");def gOx = curl(NZh, "$IZ/credits?language=$iWy&api_key=$GQO");def lr = curl(NZh, "$IZ/images?include_image_language=en%2Cnull&api_key=$GQO");def Iw = (NU / target.nameWithoutExtension + "-thumb.jpg").toString();def qCG = new File(Iw);def BK = new File(Iw.replace("-thumb",""));if (!(qCG.exists() || BK.exists()) && lr.stills.size() > 0) {def PZf = "https://image.tmdb.org/t/p/original${lr.stills[0].file_path}";system "curl", "-o", NU / target.nameWithoutExtension + "-thumb.jpg", PZf};def EeM = [];(gOx.cast + gOx.guest_stars).eachWithIndex { BCM, Xb ->  def mP_ = "$dZ/${BCM.name[0]}/${BCM.name}";def Cl = BCM.order ?: Xb + EeM.size();EeM << [rTt: BCM.name, RI: BCM.character, yvY: Cl, mP_: "${mP_}/folder.jpg"];if (dZ) {def Hf = new File(mP_);if (!Hf.exists()) {Hf.mkdirs();system "curl", "-o", "${mP_}/folder.jpg", "https://image.tmdb.org/t/p/original${BCM.profile_path}"}}};def qVc = NU / target.nameWithoutExtension + ".nfo";XML(qVc) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(syt.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);year(airdate.format("yyyy"));uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (LnT?.imdb_id) {uniqueid(type: "imdb", value: LnT.imdb_id, LnT.imdb_id);imdbid(LnT.imdb_id)};if (LnT?.tvdb_id) {uniqueid(type: "tvdb", value: LnT.tvdb_id, LnT.tvdb_id);tvdbid(LnT.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (zv) {uniqueid(type: "tvmaze", value: zv, zv);tvmazeid(zv)}} catch (Exception err) {};if (qCG.exists()) {art {poster(Iw)}};EeM.each { JK ->  actor {name(JK.rTt);role(JK.RI);sortorder(JK.yvY);if (dZ) { thumb(JK.mP_) }}};showtitle(n);episode(Jn);season(CEb);aired(airdate.format("yyyy-MM-dd"));fileinfo {streamdetails {target.mediaInfo.Video.each { qQd ->  video {def Vva = Float.parseFloat(qQd.'Duration');codec(qQd.'Format');micodec(qQd.'Format');bitrate(qQd.'BitRate');width(qQd.'Width');height(qQd.'Height');aspect(qQd.'DisplayAspectRatio/String');aspectratio(qQd.'DisplayAspectRatio/String');framerate(qQd.'FrameRate');'default'(qQd.'Default' == "Yes" ? "True" : "False");forced(qQd.'Forced' == "Yes" ? "True" : "False");duration(qQd.'Duration' ? (int) Math.floor(Vva / 60000) : 0);durationinseconds(qQd.'Duration' ? (int) Math.floor(Vva / 1000) : 0)}};target.mediaInfo.Audio.each { OF ->  audio {codec(OF.'Format');micodec(OF.'Format');language(OF.'Language/String3');channels(OF.'Channel(s)');samplingrate(OF.'SamplingRate');'default'(OF.'Default' == "Yes" ? "True" : "False");forced(OF.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { sD ->  subtitle {codec(sD.'Format');micodec(sD.'Format');width('0');height('0');language(sD.'Language/String3');'default'(sD.'Default' == "Yes" ? "True" : "False");forced(sD.'Forced' == "Yes" ? "True" : "False")}}}}}}}