{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def PV = target.dir;def u_ = any{ s } { 0 };def WL = any{ e } { special };def IiN = 0;def xD = null;try {if (db.TheTVDB?.id) {def px = "https://api.tvmaze.com";def VFW = curl "$px/lookup/shows?thetvdb=${db.TheTVDB.id}";def KmV = VFW.id;xD = curl "$px/shows/$KmV/episodebynumber?season=$u_&number=$WL";IiN = xD.id}} catch (Exception err) {};def Zb = "";def fd = "en-US";def bbV = null;def NwK = new File("$home/.filebotsecrets.json");if (NwK.exists()) {def NY = new groovy.json.JsonSlurper().parseText(NwK.text);Zb = NY.Zb;fd = NY.language;bbV = NY.person_info_dir};def dZ = "https://api.themoviedb.org/3/tv/$id/season/$u_/episode/$WL";def Omf = ["accept": "application/json"];def MJ_ = curl(Omf, "$dZ?language=$fd&api_key=$Zb");def Oko = curl(Omf, "$dZ/external_ids?api_key=$Zb");def uM = curl(Omf, "$dZ/credits?language=$fd&api_key=$Zb");def cNe = curl(Omf, "$dZ/images?include_image_language=en%2Cnull&api_key=$Zb");def aWm = (PV / target.nameWithoutExtension + "-thumb.jpg").toString();def _j = new File(aWm);def DP = new File(aWm.replace("-thumb",""));if (!(_j.exists() || DP.exists()) && cNe.stills.size() > 0) {def yj = "https://image.tmdb.org/t/p/original${cNe.stills[0].file_path}";system "curl", "-o", PV / target.nameWithoutExtension + "-thumb.jpg", yj};def njO = [];(uM.cast + uM.guest_stars).eachWithIndex { ydD, PHx ->  def dC = "$bbV/${ydD.name[0]}/${ydD.name}";def ef = ydD.order ?: PHx + njO.size();njO << [QK: ydD.name, wCp: ydD.character, dw: ef, dC: "${dC}/folder.jpg"];if (bbV) {def Lv = new File(dC);if (!Lv.exists()) {Lv.mkdirs();system "curl", "-o", "${dC}/folder.jpg", "https://image.tmdb.org/t/p/original${ydD.profile_path}"}}};def fV = PV / target.nameWithoutExtension + ".nfo";XML(fV) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(MJ_.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (Oko?.imdb_id) {uniqueid(type: "imdb", value: Oko.imdb_id, Oko.imdb_id);imdbid(Oko.imdb_id)};if (Oko?.tvdb_id) {uniqueid(type: "tvdb", value: Oko.tvdb_id, Oko.tvdb_id);tvdbid(Oko.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (IiN) {uniqueid(type: "tvmaze", value: IiN, IiN);tvmazeid(IiN)}} catch (Exception err) {};if (_j.exists()) {art {poster(aWm)}};njO.each { qDd ->  actor {name(qDd.QK);role(qDd.wCp);sortorder(qDd.dw);if (bbV) { thumb(qDd.dC) }}};showtitle(n);episode(WL);season(u_);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { AX ->  video {def qd = Float.parseFloat(AX.'Duration');codec(AX.'Format');micodec(AX.'Format');bitrate(AX.'BitRate');width(AX.'Width');height(AX.'Height');aspect(AX.'DisplayAspectRatio/String');aspectratio(AX.'DisplayAspectRatio/String');framerate(AX.'FrameRate');'default'(AX.'Default' == "Yes" ? "True" : "False");forced(AX.'Forced' == "Yes" ? "True" : "False");duration(AX.'Duration' ? (int) Math.floor(qd / 60000) : 0);durationinseconds(AX.'Duration' ? (int) Math.floor(qd / 1000) : 0)}};target.mediaInfo.Audio.each { FM ->  audio {codec(FM.'Format');micodec(FM.'Format');language(FM.'Language/String3');channels(FM.'Channel(s)');samplingrate(FM.'SamplingRate');'default'(FM.'Default' == "Yes" ? "True" : "False");forced(FM.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { jH ->  subtitle {codec(jH.'Format');micodec(jH.'Format');width('0');height('0');language(jH.'Language/String3');'default'(jH.'Default' == "Yes" ? "True" : "False");forced(jH.'Forced' == "Yes" ? "True" : "False")}}}}}}}