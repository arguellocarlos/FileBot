{ source, target, metadata -> if (type.toString() != "Episode" || !vf || ext =~ /(ass|srt|ssa|vtt)/) {return null};def Xqz = target.dir;def kDj = any{ s } { 0 };def nz = any{ e } { special };def fRH = 0;def iKX = null;try {if (db.TheTVDB?.id) {def qG = "https://api.tvmaze.com";def GA = curl "$qG/lookup/shows?thetvdb=${db.TheTVDB.id}";def yxC = GA.id;iKX = curl "$qG/shows/$yxC/episodebynumber?season=$kDj&number=$nz";fRH = iKX.id}} catch (Exception err) {};def ZB = "";def gj = "en-US";def kxv = null;def EnA = new File("$home/.filebotsecrets.json");if (EnA.exists()) {def an = new groovy.json.JsonSlurper().parseText(EnA.text);ZB = an.ZB;gj = an.language;kxv = an.person_info_dir};def TxO = "https://api.themoviedb.org/3/tv/$id/season/$kDj/episode/$nz";def Lrk = ["accept": "application/json"];def ZzX = curl(Lrk, "$TxO?language=$gj&api_key=$ZB");def Tcj = curl(Lrk, "$TxO/external_ids?api_key=$ZB");def dBR = curl(Lrk, "$TxO/credits?language=$gj&api_key=$ZB");def cU = curl(Lrk, "$TxO/images?include_image_language=en%2Cnull&api_key=$ZB");def Kk = (Xqz / target.nameWithoutExtension + "-thumb.jpg").toString();def Nz = new File(Kk);def hJA = new File(Kk.replace("-thumb",""));if (!(Nz.exists() || hJA.exists()) && cU.stills.size() > 0) {def xa = "https://image.tmdb.org/t/p/original${cU.stills[0].file_path}";system "curl", "-o", Xqz / target.nameWithoutExtension + "-thumb.jpg", xa};def js = [];(dBR.cast + dBR.guest_stars).eachWithIndex { Dbs, Am -> def tV = "$kxv/${Dbs.name[0]}/${Dbs.name}";def sg = Dbs.order ?: Am + js.size();js << [tOR: Dbs.name, EF: Dbs.character, Cq: sg, tV: "${tV}/folder.jpg"];if (kxv) {def ZW = new File(tV);if (!ZW.exists()) {ZW.mkdirs();system "curl", "-o", "${tV}/folder.jpg", "https://image.tmdb.org/t/p/original${Dbs.profile_path}"}}};def NVD = Xqz / target.nameWithoutExtension + ".nfo";XML(NVD) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(ZzX.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);year(airdate.format("yyyy"));uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (Tcj?.imdb_id) {uniqueid(type: "imdb", value: Tcj.imdb_id, Tcj.imdb_id);imdbid(Tcj.imdb_id)};if (Tcj?.tvdb_id) {uniqueid(type: "tvdb", value: Tcj.tvdb_id, Tcj.tvdb_id);tvdbid(Tcj.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (fRH) {uniqueid(type: "tvmaze", value: fRH, fRH);tvmazeid(fRH)}} catch (Exception err) {};if (Nz.exists()) {art {poster(Kk)}};js.each { Ar ->  actor {name(Ar.tOR);role(Ar.EF);sortorder(Ar.Cq);if (kxv) { thumb(Ar.tV) }}};showtitle(n);episode(nz);season(kDj);aired(airdate.format("yyyy-MM-dd"));fileinfo {streamdetails {target.mediaInfo.Video.each { gt ->  video {def srS = Float.parseFloat(gt.'Duration');codec(gt.'Format');micodec(gt.'Format');bitrate(gt.'BitRate');width(gt.'Width');height(gt.'Height');aspect(gt.'DisplayAspectRatio/String');aspectratio(gt.'DisplayAspectRatio/String');framerate(gt.'FrameRate');'default'(gt.'Default' == "Yes" ? "True" : "False");forced(gt.'Forced' == "Yes" ? "True" : "False");duration(gt.'Duration' ? (int) Math.floor(srS / 60000) : 0);durationinseconds(gt.'Duration' ? (int) Math.floor(srS / 1000) : 0)}};target.mediaInfo.Audio.each { NBF ->  audio {codec(NBF.'Format');micodec(NBF.'Format');language(NBF.'Language/String3');channels(NBF.'Channel(s)');samplingrate(NBF.'SamplingRate');'default'(NBF.'Default' == "Yes" ? "True" : "False");forced(NBF.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { Sa ->  subtitle {codec(Sa.'Format');micodec(Sa.'Format');width('0');height('0');language(Sa.'Language/String3');'default'(Sa.'Default' == "Yes" ? "True" : "False");forced(Sa.'Forced' == "Yes" ? "True" : "False")}}}}}}}