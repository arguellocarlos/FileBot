{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def MZI = target.dir;def NrY = any{ s } { 0 };def yM = any{ e } { special };def Wue = 0;def Vz = null;try {if (db.TheTVDB?.id) {def FQ = "https://api.tvmaze.com";def oDG = curl "$FQ/lookup/shows?thetvdb=${db.TheTVDB.id}";def cQ = oDG.id;Vz = curl "$FQ/shows/$cQ/episodebynumber?season=$NrY&number=$yM";Wue = Vz.id}} catch (Exception err) {};def Vth = "";def zY = "en-US";def uDO = null;def HKW = new File("$home/.filebotsecrets.json");if (HKW.exists()) {def Nnq = new groovy.json.JsonSlurper().parseText(HKW.text);Vth = Nnq.Vth;zY = Nnq.language;uDO = Nnq.person_info_dir};def Qe = "https://api.themoviedb.org/3/tv/$id/season/$NrY/episode/$yM";def Yuv = ["accept": "application/json"];def ZJ = curl(Yuv, "$Qe?language=$zY&api_key=$Vth");def Ov = curl(Yuv, "$Qe/external_ids?api_key=$Vth");def lQD = curl(Yuv, "$Qe/credits?language=$zY&api_key=$Vth");def bt = curl(Yuv, "$Qe/images?include_image_language=en%2Cnull&api_key=$Vth");def oKn = (MZI / target.nameWithoutExtension + "-thumb.jpg").toString();def lI = new File(oKn);def JFa = new File(oKn.replace("-thumb",""));if (!(lI.exists() || JFa.exists()) && bt.stills.size() > 0) {def Or = "https://image.tmdb.org/t/p/original${bt.stills[0].file_path}";system "curl", "-o", MZI / target.nameWithoutExtension + "-thumb.jpg", Or};def iT = [];(lQD.cast + lQD.guest_stars).eachWithIndex { oaY, RW ->  def Yyh = "$uDO/${oaY.name[0]}/${oaY.name}";def ba = oaY.order ?: RW + iT.size();iT << [tqv: oaY.name, BDv: oaY.character, qJ: ba, Yyh: "${Yyh}/folder.jpg"];if (uDO) {def geD = new File(Yyh);if (!geD.exists()) {geD.mkdirs();system "curl", "-o", "${Yyh}/folder.jpg", "https://image.tmdb.org/t/p/original${oaY.profile_path}"}}};def tk = MZI / target.nameWithoutExtension + ".nfo";XML(tk) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(ZJ.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (Ov?.imdb_id) {uniqueid(type: "imdb", value: Ov.imdb_id, Ov.imdb_id);imdbid(Ov.imdb_id)};if (Ov?.tvdb_id) {uniqueid(type: "tvdb", value: Ov.tvdb_id, Ov.tvdb_id);tvdbid(Ov.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (Wue) {uniqueid(type: "tvmaze", value: Wue, Wue);tvmazeid(Wue)}} catch (Exception err) {};if (lI.exists()) {art {poster(oKn)}};iT.each { VK ->  actor {name(VK.tqv);role(VK.BDv);sortorder(VK.qJ);if (uDO) { thumb(VK.Yyh) }}};showtitle(n);episode(yM);season(NrY);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { Fl ->  video {def VW = Float.parseFloat(Fl.'Duration');codec(Fl.'Format');micodec(Fl.'Format');bitrate(Fl.'BitRate');width(Fl.'Width');height(Fl.'Height');aspect(Fl.'DisplayAspectRatio/String');aspectratio(Fl.'DisplayAspectRatio/String');framerate(Fl.'FrameRate');'default'(Fl.'Default' == "Yes" ? "True" : "False");forced(Fl.'Forced' == "Yes" ? "True" : "False");duration(Fl.'Duration' ? (int) Math.floor(VW / 60000) : 0);durationinseconds(Fl.'Duration' ? (int) Math.floor(VW / 1000) : 0)}};target.mediaInfo.Audio.each { TB ->  audio {codec(TB.'Format');micodec(TB.'Format');language(TB.'Language/String3');channels(TB.'Channel(s)');samplingrate(TB.'SamplingRate');'default'(TB.'Default' == "Yes" ? "True" : "False");forced(TB.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { lmz ->  subtitle {codec(lmz.'Format');micodec(lmz.'Format');width('0');height('0');language(lmz.'Language/String3');'default'(lmz.'Default' == "Yes" ? "True" : "False");forced(lmz.'Forced' == "Yes" ? "True" : "False")}}}}}}}