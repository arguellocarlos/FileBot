{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def dnU = target.dir;def gl = any{ s } { 0 };def lxH = any{ e } { special };def ZZM = 0;def dDM = null;try {if (db.TheTVDB?.id) {def vb = "https://api.tvmaze.com";def B_t = curl "$vb/lookup/shows?thetvdb=${db.TheTVDB.id}";def ann = B_t.id;dDM = curl "$vb/shows/$ann/episodebynumber?season=$gl&number=$lxH";ZZM = dDM.id}} catch (Exception err) {};def KCD = "";def ud = "en-US";def Qf = null;def PWc = new File("$home/.filebotsecrets.json");if (PWc.exists()) {def Urw = new groovy.json.JsonSlurper().parseText(PWc.text);KCD = Urw.KCD;ud = Urw.language;Qf = Urw.person_info_dir};def fFr = "https://api.themoviedb.org/3/tv/$id/season/$gl/episode/$lxH";def KP = ["accept": "application/json"];def jM = curl(KP, "$fFr?language=$ud&api_key=$KCD");def _B = curl(KP, "$fFr/external_ids?api_key=$KCD");def YB = curl(KP, "$fFr/credits?language=$ud&api_key=$KCD");def Kyq = curl(KP, "$fFr/images?include_image_language=en%2Cnull&api_key=$KCD");def lOz = (dnU / target.nameWithoutExtension + "-thumb.jpg").toString();def bH = new File(lOz);def uTk = new File(lOz.replace("-thumb",""));if (!(bH.exists() || uTk.exists()) && Kyq.stills.size() > 0) {def uj = "https://image.tmdb.org/t/p/original${Kyq.stills[0].file_path}";system "curl", "-o", dnU / target.nameWithoutExtension + "-thumb.jpg", uj};def Xy_ = [];(YB.cast + YB.guest_stars).eachWithIndex { pG, pbt ->  def aSY = "$Qf/${pG.name[0]}/${pG.name}";def xNi = pG.order ?: pbt + Xy_.size();Xy_ << [fx: pG.name, sZo: pG.character, ZKx: xNi, aSY: "${aSY}/folder.jpg"];if (Qf) {def EE = new File(aSY);if (!EE.exists()) {EE.mkdirs();system "curl", "-o", "${aSY}/folder.jpg", "https://image.tmdb.org/t/p/original${pG.profile_path}"}}};def fS = dnU / target.nameWithoutExtension + ".nfo";XML(fS) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(jM.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (_B?.imdb_id) {uniqueid(type: "imdb", value: _B.imdb_id, _B.imdb_id);imdbid(_B.imdb_id)};if (_B?.tvdb_id) {uniqueid(type: "tvdb", value: _B.tvdb_id, _B.tvdb_id);tvdbid(_B.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (ZZM) {uniqueid(type: "tvmaze", value: ZZM, ZZM);tvmazeid(ZZM)}} catch (Exception err) {};if (bH.exists()) {art {poster(lOz)}};Xy_.each { Wmp ->  actor {name(Wmp.fx);role(Wmp.sZo);sortorder(Wmp.ZKx);if (Qf) { thumb(Wmp.aSY) }}};showtitle(n);episode(lxH);season(gl);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { ZKO ->  video {def sn = Float.parseFloat(ZKO.'Duration');codec(ZKO.'Format');micodec(ZKO.'Format');bitrate(ZKO.'BitRate');width(ZKO.'Width');height(ZKO.'Height');aspect(ZKO.'DisplayAspectRatio/String');aspectratio(ZKO.'DisplayAspectRatio/String');framerate(ZKO.'FrameRate');'default'(ZKO.'Default' == "Yes" ? "True" : "False");forced(ZKO.'Forced' == "Yes" ? "True" : "False");duration(ZKO.'Duration' ? (int) Math.floor(sn / 60000) : 0);durationinseconds(ZKO.'Duration' ? (int) Math.floor(sn / 1000) : 0)}};target.mediaInfo.Audio.each { nk ->  audio {codec(nk.'Format');micodec(nk.'Format');language(nk.'Language/String3');channels(nk.'Channel(s)');samplingrate(nk.'SamplingRate');'default'(nk.'Default' == "Yes" ? "True" : "False");forced(nk.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { qC ->  subtitle {codec(qC.'Format');micodec(qC.'Format');width('0');height('0');language(qC.'Language/String3');'default'(qC.'Default' == "Yes" ? "True" : "False");forced(qC.'Forced' == "Yes" ? "True" : "False")}}}}}}}