{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def PBa = target.dir;def lpX = any{ s } { 0 };def dgt = any{ e } { special };def QY = 0;def iLD = null;try {if (db.TheTVDB?.id) {def OkC = "https://api.tvmaze.com";def qU = curl "$OkC/lookup/shows?thetvdb=${db.TheTVDB.id}";def Vwg = qU.id;iLD = curl "$OkC/shows/$Vwg/episodebynumber?season=$lpX&number=$dgt";QY = iLD.id}} catch (Exception err) {};def zqO = "";def Oa = "en-US";def Zto = null;def NiE = new File("$home/.filebotsecrets.json");if (NiE.exists()) {def tVH = new groovy.json.JsonSlurper().parseText(NiE.text);zqO = tVH.zqO;Oa = tVH.language;Zto = tVH.person_info_dir};def wX = "https://api.themoviedb.org/3/tv/$id/season/$lpX/episode/$dgt";def JCD = ["accept": "application/json"];def jc = curl(JCD, "$wX?language=$Oa&api_key=$zqO");def rE = curl(JCD, "$wX/external_ids?api_key=$zqO");def _U = curl(JCD, "$wX/credits?language=$Oa&api_key=$zqO");def aV = curl(JCD, "$wX/images?include_image_language=en%2Cnull&api_key=$zqO");def _KL = (PBa / target.nameWithoutExtension + "-thumb.jpg").toString();def jx = new File(_KL);def EQ = new File(_KL.replace("-thumb",""));if (!(jx.exists() || EQ.exists()) && aV.stills.size() > 0) {def rq = "https://image.tmdb.org/t/p/original${aV.stills[0].file_path}";system "curl", "-o", PBa / target.nameWithoutExtension + "-thumb.jpg", rq};def il = [];(_U.cast + _U.guest_stars).eachWithIndex { bLX, Fyn ->  def HWn = "$Zto/${bLX.name[0]}/${bLX.name}";def hJY = bLX.order ?: Fyn + il.size();il << [Kky: bLX.name, jX: bLX.character, wx: hJY, HWn: "${HWn}/folder.jpg"];if (Zto) {def sg = new File(HWn);if (!sg.exists()) {sg.mkdirs();system "curl", "-o", "${HWn}/folder.jpg", "https://image.tmdb.org/t/p/original${bLX.profile_path}"}}};def XT = PBa / target.nameWithoutExtension + ".nfo";XML(XT) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(jc.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);year(airdate.format("yyyy"));uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (rE?.imdb_id) {uniqueid(type: "imdb", value: rE.imdb_id, rE.imdb_id);imdbid(rE.imdb_id)};if (rE?.tvdb_id) {uniqueid(type: "tvdb", value: rE.tvdb_id, rE.tvdb_id);tvdbid(rE.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (QY) {uniqueid(type: "tvmaze", value: QY, QY);tvmazeid(QY)}} catch (Exception err) {};if (jx.exists()) {art {poster(_KL)}};il.each { JP ->  actor {name(JP.Kky);role(JP.jX);sortorder(JP.wx);if (Zto) { thumb(JP.HWn) }}};showtitle(n);episode(dgt);season(lpX);aired(airdate.format("yyyy-MM-dd"));fileinfo {streamdetails {target.mediaInfo.Video.each { TP ->  video {def Fg = Float.parseFloat(TP.'Duration');codec(TP.'Format');micodec(TP.'Format');bitrate(TP.'BitRate');width(TP.'Width');height(TP.'Height');aspect(TP.'DisplayAspectRatio/String');aspectratio(TP.'DisplayAspectRatio/String');framerate(TP.'FrameRate');'default'(TP.'Default' == "Yes" ? "True" : "False");forced(TP.'Forced' == "Yes" ? "True" : "False");duration(TP.'Duration' ? (int) Math.floor(Fg / 60000) : 0);durationinseconds(TP.'Duration' ? (int) Math.floor(Fg / 1000) : 0)}};target.mediaInfo.Audio.each { VAo ->  audio {codec(VAo.'Format');micodec(VAo.'Format');language(VAo.'Language/String3');channels(VAo.'Channel(s)');samplingrate(VAo.'SamplingRate');'default'(VAo.'Default' == "Yes" ? "True" : "False");forced(VAo.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { Uwm ->  subtitle {codec(Uwm.'Format');micodec(Uwm.'Format');width('0');height('0');language(Uwm.'Language/String3');'default'(Uwm.'Default' == "Yes" ? "True" : "False");forced(Uwm.'Forced' == "Yes" ? "True" : "False")}}}}}}}