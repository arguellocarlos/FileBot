{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def fq = target.dir;def vX = any{ s } { 0 };def Iy = any{ e } { special };def RR = 0;def tDW = null;try {if (db.TheTVDB?.id) {def xRm = "https://api.tvmaze.com";def vop = curl "$xRm/lookup/shows?thetvdb=${db.TheTVDB.id}";def kXn = vop.id;tDW = curl "$xRm/shows/$kXn/episodebynumber?season=$vX&number=$Iy";RR = tDW.id}} catch (Exception err) {};def VIP = "";def JQO = "en-US";def dw = null;def UtT = new File("$home/.filebotsecrets.json");if (UtT.exists()) {def TP = new groovy.json.JsonSlurper().parseText(UtT.text);VIP = TP.VIP;JQO = TP.language;dw = TP.person_info_dir};def SNI = "https://api.themoviedb.org/3/tv/$id/season/$vX/episode/$Iy";def amV = ["accept": "application/json"];def Tpp = curl(amV, "$SNI?language=$JQO&api_key=$VIP");def GFC = curl(amV, "$SNI/external_ids?api_key=$VIP");def IX = curl(amV, "$SNI/credits?language=$JQO&api_key=$VIP");def UPA = curl(amV, "$SNI/images?include_image_language=en%2Cnull&api_key=$VIP");def NFU = (fq / target.nameWithoutExtension + "-thumb.jpg").toString();def mZV = new File(NFU);def il = new File(NFU.replace("-thumb",""));if (!(mZV.exists() || il.exists()) && UPA.stills.size() > 0) {def ARw = "https://image.tmdb.org/t/p/original${UPA.stills[0].file_path}";system "curl", "-o", fq / target.nameWithoutExtension + "-thumb.jpg", ARw};def Yj = [];(IX.cast + IX.guest_stars).eachWithIndex { tdN, sas ->  def wQ = "$dw/${tdN.name[0]}/${tdN.name}";def xLt = tdN.order ?: sas + Yj.size();Yj << [Eo: tdN.name, _U: tdN.character, Ci: xLt, wQ: "${wQ}/folder.jpg"];if (dw) {def PjU = new File(wQ);if (!PjU.exists()) {PjU.mkdirs();system "curl", "-o", "${wQ}/folder.jpg", "https://image.tmdb.org/t/p/original${tdN.profile_path}"}}};def CY = fq / target.nameWithoutExtension + ".nfo";XML(CY) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(Tpp.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (GFC?.imdb_id) {uniqueid(type: "imdb", value: GFC.imdb_id, GFC.imdb_id);imdbid(GFC.imdb_id)};if (GFC?.tvdb_id) {uniqueid(type: "tvdb", value: GFC.tvdb_id, GFC.tvdb_id);tvdbid(GFC.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (RR) {uniqueid(type: "tvmaze", value: RR, RR);tvmazeid(RR)}} catch (Exception err) {};if (mZV.exists()) {art {poster(NFU)}};Yj.each { ckU ->  actor {name(ckU.Eo);role(ckU._U);sortorder(ckU.Ci);if (dw) { thumb(ckU.wQ) }}};showtitle(n);episode(Iy);season(vX);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { vS ->  video {def Oa = Float.parseFloat(vS.'Duration');codec(vS.'Format');micodec(vS.'Format');bitrate(vS.'BitRate');width(vS.'Width');height(vS.'Height');aspect(vS.'DisplayAspectRatio/String');aspectratio(vS.'DisplayAspectRatio/String');framerate(vS.'FrameRate');'default'(vS.'Default' == "Yes" ? "True" : "False");forced(vS.'Forced' == "Yes" ? "True" : "False");duration(vS.'Duration' ? (int) Math.floor(Oa / 60000) : 0);durationinseconds(vS.'Duration' ? (int) Math.floor(Oa / 1000) : 0)}};target.mediaInfo.Audio.each { uct ->  audio {codec(uct.'Format');micodec(uct.'Format');language(uct.'Language/String3');channels(uct.'Channel(s)');samplingrate(uct.'SamplingRate');'default'(uct.'Default' == "Yes" ? "True" : "False");forced(uct.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { me ->  subtitle {codec(me.'Format');micodec(me.'Format');width('0');height('0');language(me.'Language/String3');'default'(me.'Default' == "Yes" ? "True" : "False");forced(me.'Forced' == "Yes" ? "True" : "False")}}}}}}}