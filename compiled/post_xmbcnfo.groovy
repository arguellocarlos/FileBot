{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def wCR = target.dir;def Su = any{ s } { 0 };def fNU = any{ e } { special };def dIE = 0;def jxA = null;try {if (db.TheTVDB?.id) {def pUX = "https://api.tvmaze.com";def JM = curl "$pUX/lookup/shows?thetvdb=${db.TheTVDB.id}";def kw = JM.id;jxA = curl "$pUX/shows/$kw/episodebynumber?season=$Su&number=$fNU";dIE = jxA.id}} catch (Exception err) {};def XSc = "";def rI = "en-US";def RJj = null;def OPO = new File("$home/.filebotsecrets.json");if (OPO.exists()) {def JXH = new groovy.json.JsonSlurper().parseText(OPO.text);XSc = JXH.XSc;rI = JXH.language;RJj = JXH.person_info_dir};def jVT = "https://api.themoviedb.org/3/tv/$id/season/$Su/episode/$fNU";def JB = ["accept": "application/json"];def zkC = curl(JB, "$jVT?language=$rI&api_key=$XSc");def Amj = curl(JB, "$jVT/external_ids?api_key=$XSc");def KsV = curl(JB, "$jVT/credits?language=$rI&api_key=$XSc");def nz = curl(JB, "$jVT/images?include_image_language=en%2Cnull&api_key=$XSc");def clB = (wCR / target.nameWithoutExtension + "-thumb.jpg").toString();def ULL = new File(clB);def DjZ = new File(clB.replace("-thumb",""));if (!(ULL.exists() || DjZ.exists()) && nz.stills.size() > 0) {def uT = "https://image.tmdb.org/t/p/original${nz.stills[0].file_path}";system "curl", "-o", wCR / target.nameWithoutExtension + "-thumb.jpg", uT};def Kx = [];(KsV.cast + KsV.guest_stars).eachWithIndex { Lc, Wog ->  def qp = "$RJj/${Lc.name[0]}/${Lc.name}";def CB = Lc.order ?: Wog + Kx.size();Kx << [cT: Lc.name, CH: Lc.character, XsE: CB, qp: "${qp}/folder.jpg"];if (RJj) {def DbF = new File(qp);if (!DbF.exists()) {DbF.mkdirs();system "curl", "-o", "${qp}/folder.jpg", "https://image.tmdb.org/t/p/original${Lc.profile_path}"}}};def OK = wCR / target.nameWithoutExtension + ".nfo";XML(OK) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(zkC.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd CH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (Amj?.imdb_id) {uniqueid(type: "imdb", value: Amj.imdb_id, Amj.imdb_id);imdbid(Amj.imdb_id)};if (Amj?.tvdb_id) {uniqueid(type: "tvdb", value: Amj.tvdb_id, Amj.tvdb_id);tvdbid(Amj.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (dIE) {uniqueid(type: "tvmaze", value: dIE, dIE);tvmazeid(dIE)}} catch (Exception err) {};if (ULL.exists()) {art {poster(clB)}};Kx.each { ovH ->  actor {name(ovH.cT);role(ovH.CH);sortorder(ovH.XsE);if (RJj) { thumb(ovH.qp) }}};showtitle(n);episode(fNU);season(Su);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { cW ->  video {def gFj = Float.parseFloat(cW.'Duration');codec(cW.'Format');micodec(cW.'Format');bitrate(cW.'BitRate');width(cW.'Width');height(cW.'Height');aspect(cW.'DisplayAspectRatio/String');aspectratio(cW.'DisplayAspectRatio/String');framerate(cW.'FrameRate');'default'(cW.'Default' == "Yes" ? "True" : "False");forced(cW.'Forced' == "Yes" ? "True" : "False");duration(cW.'Duration' ? (int) Math.floor(gFj / 60000) : 0);durationinseconds(cW.'Duration' ? (int) Math.floor(gFj / 1000) : 0)}};target.mediaInfo.Audio.each { WK ->  audio {codec(WK.'Format');micodec(WK.'Format');language(WK.'Language/String3');channels(WK.'Channel(s)');samplingrate(WK.'SamplingRate');'default'(WK.'Default' == "Yes" ? "True" : "False");forced(WK.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { lG ->  subtitle {codec(lG.'Format');micodec(lG.'Format');width('0');height('0');language(lG.'Language/String3');'default'(lG.'Default' == "Yes" ? "True" : "False");forced(lG.'Forced' == "Yes" ? "True" : "False")}}}}}}}