{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def uX = target.dir;def NQ = any{ s } { 0 };def fTq = any{ e } { special };def yTQ = 0;def _Wz = null;try {if (db.TheTVDB?.id) {def QG = "https://api.tvmaze.com";def ow = curl "$QG/lookup/shows?thetvdb=${db.TheTVDB.id}";def QHe = ow.id;_Wz = curl "$QG/shows/$QHe/episodebynumber?season=$NQ&number=$fTq";yTQ = _Wz.id}} catch (Exception err) {};def At = "";def Szv = "en-US";def MHx = null;def eqR = new File("$home/.filebotsecrets.json");if (eqR.exists()) {def RV = new groovy.json.JsonSlurper().parseText(eqR.text);At = RV.At;Szv = RV.language;MHx = RV.person_info_dir};def Ds = "https://api.themoviedb.org/3/tv/$id/season/$NQ/episode/$fTq";def ts = ["accept": "application/json"];def BGJ = curl(ts, "$Ds?language=$Szv&api_key=$At");def XK = curl(ts, "$Ds/external_ids?api_key=$At");def pKM = curl(ts, "$Ds/credits?language=$Szv&api_key=$At");def neT = curl(ts, "$Ds/images?include_image_language=en%2Cnull&api_key=$At");def eZn = (uX / target.nameWithoutExtension + "-thumb.jpg").toString();def bf = new File(eZn);def xOv = new File(eZn.replace("-thumb",""));if (!(bf.exists() || xOv.exists()) && neT.stills.size() > 0) {def krE = "https://image.tmdb.org/t/p/original${neT.stills[0].file_path}";system "curl", "-o", uX / target.nameWithoutExtension + "-thumb.jpg", krE};def hra = [];(pKM.cast + pKM.guest_stars).eachWithIndex { jum, Wq ->  def uyR = "$MHx/${jum.name[0]}/${jum.name}";def aJ = jum.order ?: Wq + hra.size();hra << [sk: jum.name, Mli: jum.character, Lba: aJ, uyR: "${uyR}/folder.jpg"];if (MHx) {def If = new File(uyR);if (!If.exists()) {If.mkdirs();system "curl", "-o", "${uyR}/folder.jpg", "https://image.tmdb.org/t/p/original${jum.profile_path}"}}};def Ndv = uX / target.nameWithoutExtension + ".nfo";XML(Ndv) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(BGJ.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (XK?.imdb_id) {uniqueid(type: "imdb", value: XK.imdb_id, XK.imdb_id);imdbid(XK.imdb_id)};if (XK?.tvdb_id) {uniqueid(type: "tvdb", value: XK.tvdb_id, XK.tvdb_id);tvdbid(XK.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (yTQ) {uniqueid(type: "tvmaze", value: yTQ, yTQ);tvmazeid(yTQ)}} catch (Exception err) {};if (bf.exists()) {art {poster(eZn)}};hra.each { ul ->  actor {name(ul.sk);role(ul.Mli);sortorder(ul.Lba);if (MHx) { thumb(ul.uyR) }}};showtitle(n);episode(fTq);season(NQ);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { b_ ->  video {def UMv = Float.parseFloat(b_.'Duration');codec(b_.'Format');micodec(b_.'Format');bitrate(b_.'BitRate');width(b_.'Width');height(b_.'Height');aspect(b_.'DisplayAspectRatio/String');aspectratio(b_.'DisplayAspectRatio/String');framerate(b_.'FrameRate');'default'(b_.'Default' == "Yes" ? "True" : "False");forced(b_.'Forced' == "Yes" ? "True" : "False");duration(b_.'Duration' ? (int) Math.floor(UMv / 60000) : 0);durationinseconds(b_.'Duration' ? (int) Math.floor(UMv / 1000) : 0)}};target.mediaInfo.Audio.each { Xm ->  audio {codec(Xm.'Format');micodec(Xm.'Format');language(Xm.'Language/String3');channels(Xm.'Channel(s)');samplingrate(Xm.'SamplingRate');'default'(Xm.'Default' == "Yes" ? "True" : "False");forced(Xm.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { md ->  subtitle {codec(md.'Format');micodec(md.'Format');width('0');height('0');language(md.'Language/String3');'default'(md.'Default' == "Yes" ? "True" : "False");forced(md.'Forced' == "Yes" ? "True" : "False")}}}}}}}