{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def YeD = target.dir;def BaI = any{ s } { 0 };def EFx = any{ e } { special };def Bo = 0;def jV = null;try {if (db.TheTVDB?.id) {def FUF = "https://api.tvmaze.com";def Rp = curl "$FUF/lookup/shows?thetvdb=${db.TheTVDB.id}";def ze = Rp.id;jV = curl "$FUF/shows/$ze/episodebynumber?season=$BaI&number=$EFx";Bo = jV.id}} catch (Exception err) {};def zg = "";def nF = "en-US";def ptX = null;def FQ = new File("$home/.filebotsecrets.json");if (FQ.exists()) {def lIx = new groovy.json.JsonSlurper().parseText(FQ.text);zg = lIx.zg;nF = lIx.language;ptX = lIx.person_info_dir};def uT = "https://api.themoviedb.org/3/tv/$id/season/$BaI/episode/$EFx";def VQZ = ["accept": "application/json"];def JQ = curl(VQZ, "$uT?language=$nF&api_key=$zg");def FTJ = curl(VQZ, "$uT/external_ids?api_key=$zg");def wL = curl(VQZ, "$uT/credits?language=$nF&api_key=$zg");def bXe = curl(VQZ, "$uT/images?include_image_language=en%2Cnull&api_key=$zg");def kC = (YeD / target.nameWithoutExtension + "-thumb.jpg").toString();def Fg = new File(kC);def hx = new File(kC.replace("-thumb",""));if (!(Fg.exists() || hx.exists()) && bXe.stills.size() > 0) {def Gtr = "https://image.tmdb.org/t/p/original${bXe.stills[0].file_path}";system "curl", "-o", YeD / target.nameWithoutExtension + "-thumb.jpg", Gtr};def dSI = [];(wL.cast + wL.guest_stars).eachWithIndex { Lu, OGY ->  def WUt = "$ptX/${Lu.name[0]}/${Lu.name}";def MwX = Lu.order ?: OGY + dSI.size();dSI << [Ay: Lu.name, Aj: Lu.character, fZl: MwX, WUt: "${WUt}/folder.jpg"];if (ptX) {def ng = new File(WUt);if (!ng.exists()) {ng.mkdirs();system "curl", "-o", "${WUt}/folder.jpg", "https://image.tmdb.org/t/p/original${Lu.profile_path}"}}};def _z = YeD / target.nameWithoutExtension + ".nfo";XML(_z) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(JQ.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (FTJ?.imdb_id) {uniqueid(type: "imdb", value: FTJ.imdb_id, FTJ.imdb_id);imdbid(FTJ.imdb_id)};if (FTJ?.tvdb_id) {uniqueid(type: "tvdb", value: FTJ.tvdb_id, FTJ.tvdb_id);tvdbid(FTJ.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (Bo) {uniqueid(type: "tvmaze", value: Bo, Bo);tvmazeid(Bo)}} catch (Exception err) {};if (Fg.exists()) {art {poster(kC)}};dSI.each { JVH ->  actor {name(JVH.Ay);role(JVH.Aj);sortorder(JVH.fZl);if (ptX) { thumb(JVH.WUt) }}};showtitle(n);episode(EFx);season(BaI);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { qJ ->  video {def vmh = Float.parseFloat(qJ.'Duration');codec(qJ.'Format');micodec(qJ.'Format');bitrate(qJ.'BitRate');width(qJ.'Width');height(qJ.'Height');aspect(qJ.'DisplayAspectRatio/String');aspectratio(qJ.'DisplayAspectRatio/String');framerate(qJ.'FrameRate');'default'(qJ.'Default' == "Yes" ? "True" : "False");forced(qJ.'Forced' == "Yes" ? "True" : "False");duration(qJ.'Duration' ? (int) Math.floor(vmh / 60000) : 0);durationinseconds(qJ.'Duration' ? (int) Math.floor(vmh / 1000) : 0)}};target.mediaInfo.Audio.each { k_Z ->  audio {codec(k_Z.'Format');micodec(k_Z.'Format');language(k_Z.'Language/String3');channels(k_Z.'Channel(s)');samplingrate(k_Z.'SamplingRate');'default'(k_Z.'Default' == "Yes" ? "True" : "False");forced(k_Z.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { tW ->  subtitle {codec(tW.'Format');micodec(tW.'Format');width('0');height('0');language(tW.'Language/String3');'default'(tW.'Default' == "Yes" ? "True" : "False");forced(tW.'Forced' == "Yes" ? "True" : "False")}}}}}}}