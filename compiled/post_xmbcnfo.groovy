{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def Od = target.dir;def rYQ = any{ s } { 0 };def HxX = any{ e } { special };def fx = 0;def Mkr = null;try {if (db.TheTVDB?.id) {def Yuv = "https://api.tvmaze.com";def ThW = curl "$Yuv/lookup/shows?thetvdb=${db.TheTVDB.id}";def lz = ThW.id;Mkr = curl "$Yuv/shows/$lz/episodebynumber?season=$rYQ&number=$HxX";fx = Mkr.id}} catch (Exception err) {};def UAx = "";def kT = "en-US";def zaW = null;def rlB = new File("$home/.filebotsecrets.json");if (rlB.exists()) {def GfZ = new groovy.json.JsonSlurper().parseText(rlB.text);UAx = GfZ.UAx;kT = GfZ.language;zaW = GfZ.person_info_dir};def pst = "https://api.themoviedb.org/3/tv/$id/season/$rYQ/episode/$HxX";def vQl = ["accept": "application/json"];def enJ = curl(vQl, "$pst?language=$kT&api_key=$UAx");def HrH = curl(vQl, "$pst/external_ids?api_key=$UAx");def wfd = curl(vQl, "$pst/credits?language=$kT&api_key=$UAx");def MqP = curl(vQl, "$pst/images?include_image_language=en%2Cnull&api_key=$UAx");def OLH = (Od / target.nameWithoutExtension + "-thumb.jpg").toString();def TK = new File(OLH);def Vi = new File(OLH.replace("-thumb",""));if (!(TK.exists() || Vi.exists()) && MqP.stills.size() > 0) {def mBw = "https://image.tmdb.org/t/p/original${MqP.stills[0].file_path}";system "curl", "-o", Od / target.nameWithoutExtension + "-thumb.jpg", mBw};def YMA = [];(wfd.cast + wfd.guest_stars).eachWithIndex { gj, Fnd ->  def SW = "$zaW/${gj.name[0]}/${gj.name}";def dqk = gj.order ?: Fnd + YMA.size();YMA << [Dhe: gj.name, PNx: gj.character, kG: dqk, SW: "${SW}/folder.jpg"];if (zaW) {def Fd = new File(SW);if (!Fd.exists()) {Fd.mkdirs();system "curl", "-o", "${SW}/folder.jpg", "https://image.tmdb.org/t/p/original${gj.profile_path}"}}};def avQ = Od / target.nameWithoutExtension + ".nfo";XML(avQ) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(enJ.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);year(airdate.format("yyyy"));uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (HrH?.imdb_id) {uniqueid(type: "imdb", value: HrH.imdb_id, HrH.imdb_id);imdbid(HrH.imdb_id)};if (HrH?.tvdb_id) {uniqueid(type: "tvdb", value: HrH.tvdb_id, HrH.tvdb_id);tvdbid(HrH.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (fx) {uniqueid(type: "tvmaze", value: fx, fx);tvmazeid(fx)}} catch (Exception err) {};if (TK.exists()) {art {poster(OLH)}};YMA.each { peC ->  actor {name(peC.Dhe);role(peC.PNx);sortorder(peC.kG);if (zaW) { thumb(peC.SW) }}};showtitle(n);episode(HxX);season(rYQ);aired(airdate.format("yyyy-MM-dd"));fileinfo {streamdetails {target.mediaInfo.Video.each { bl ->  video {def lD = Float.parseFloat(bl.'Duration');codec(bl.'Format');micodec(bl.'Format');bitrate(bl.'BitRate');width(bl.'Width');height(bl.'Height');aspect(bl.'DisplayAspectRatio/String');aspectratio(bl.'DisplayAspectRatio/String');framerate(bl.'FrameRate');'default'(bl.'Default' == "Yes" ? "True" : "False");forced(bl.'Forced' == "Yes" ? "True" : "False");duration(bl.'Duration' ? (int) Math.floor(lD / 60000) : 0);durationinseconds(bl.'Duration' ? (int) Math.floor(lD / 1000) : 0)}};target.mediaInfo.Audio.each { cE ->  audio {codec(cE.'Format');micodec(cE.'Format');language(cE.'Language/String3');channels(cE.'Channel(s)');samplingrate(cE.'SamplingRate');'default'(cE.'Default' == "Yes" ? "True" : "False");forced(cE.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { WPu ->  subtitle {codec(WPu.'Format');micodec(WPu.'Format');width('0');height('0');language(WPu.'Language/String3');'default'(WPu.'Default' == "Yes" ? "True" : "False");forced(WPu.'Forced' == "Yes" ? "True" : "False")}}}}}}}