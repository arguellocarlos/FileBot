{ source, target, metadata -> if (type.toString() != "Episode" || !vf || ext =~ /(ass|srt|ssa|vtt)/) {return null};def lq = target.dir;def rym = any{ s } { 0 };def HXV = any{ e } { special };def vCi = 0;def miE = null;try {if (db.TheTVDB?.id) {def Gk = curl "https://api.tvmaze.com/lookup/shows?thetvdb=${db.TheTVDB.id}";def Bll = Gk.id;miE = curl "https://api.tvmaze.com/shows/$Bll/episodebynumber?season=$rym&number=$HXV";vCi = miE.id}} catch (Exception err) {};def nq = "";def usk = "en-US";def Tp = null;def LBe = new File("$home/.filebotsecrets.json");if (LBe.exists()) {def GJ = new groovy.json.JsonSlurper().parseText(LBe.text);nq = GJ.nq;usk = GJ.language;Tp = GJ.person_info_dir};def BWD = "https://api.themoviedb.org/3/tv/$id/season/$rym/episode/$HXV";def _J = curl(["accept": "application/json"], "$BWD?language=$usk&api_key=$nq");def kb = curl(["accept": "application/json"], "$BWD/external_ids?api_key=$nq");def jST = curl(["accept": "application/json"], "$BWD/credits?language=$usk&api_key=$nq");def iQ = curl(["accept": "application/json"], "$BWD/images?include_image_language=en%2Cnull&api_key=$nq");def SNG = (lq / target.nameWithoutExtension + "-thumb.jpg").toString();def PC = new File(SNG);def vPF = new File(SNG.replace("-thumb",""));if (!(PC.exists() || vPF.exists()) && iQ.stills.size() > 0) {def utY = "https://image.tmdb.org/t/p/original${iQ.stills[0].file_path}";system "curl", "-o", lq / target.nameWithoutExtension + "-thumb.jpg", utY};def E_ = [];(jST.cast + jST.guest_stars).eachWithIndex { w_, ttb -> def uEM = "$Tp/${w_.name[0]}/${w_.name}";def SYn = w_.order ?: ttb + E_.size();E_ << [PPG: w_.name, Niz: w_.character, aQ: SYn, uEM: "${uEM}/folder.jpg"];if (Tp) {def OY = new File(uEM);if (!OY.exists()) {OY.mkdirs();system "curl", "-o", "${uEM}/folder.jpg", "https://image.tmdb.org/t/p/original${w_.profile_path}"}}};def MNP = lq / target.nameWithoutExtension + ".nfo";XML(MNP) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(_J.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);year(airdate.format("yyyy"));uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (kb?.imdb_id) {uniqueid(type: "imdb", value: kb.imdb_id, kb.imdb_id);imdbid(kb.imdb_id)};if (kb?.tvdb_id) {uniqueid(type: "tvdb", value: kb.tvdb_id, kb.tvdb_id);tvdbid(kb.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (vCi) {uniqueid(type: "tvmaze", value: vCi, vCi);tvmazeid(vCi)}} catch (Exception err) {};if (PC.exists()) {art {poster(SNG)}};E_.each { oH ->  actor {name(oH.PPG);role(oH.Niz);sortorder(oH.aQ);if (Tp) { thumb(oH.uEM) }}};showtitle(n);episode(HXV);season(rym);aired(airdate.format("yyyy-MM-dd"));fileinfo {streamdetails {target.mediaInfo.Video.each { HGD ->  video {def Owu = Float.parseFloat(HGD.'Duration');codec(HGD.'Format');micodec(HGD.'Format');bitrate(HGD.'BitRate');width(HGD.'Width');height(HGD.'Height');aspect(HGD.'DisplayAspectRatio/String');aspectratio(HGD.'DisplayAspectRatio/String');framerate(HGD.'FrameRate');'default'(HGD.'Default' == "Yes" ? "True" : "False");forced(HGD.'Forced' == "Yes" ? "True" : "False");duration(HGD.'Duration' ? (int) Math.floor(Owu / 60000) : 0);durationinseconds(HGD.'Duration' ? (int) Math.floor(Owu / 1000) : 0)}};target.mediaInfo.Audio.each { FrY ->  audio {codec(FrY.'Format');micodec(FrY.'Format');language(FrY.'Language/String3');channels(FrY.'Channel(s)');samplingrate(FrY.'SamplingRate');'default'(FrY.'Default' == "Yes" ? "True" : "False");forced(FrY.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { STt ->  subtitle {codec(STt.'Format');micodec(STt.'Format');width('0');height('0');language(STt.'Language/String3');'default'(STt.'Default' == "Yes" ? "True" : "False");forced(STt.'Forced' == "Yes" ? "True" : "False")}}}}}}}