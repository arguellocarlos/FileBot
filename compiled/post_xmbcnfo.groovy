{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def xV = target.dir;def dC = any{ s } { 0 };def sV = any{ e } { special };def DI = 0;def cBZ = null;try {if (db.TheTVDB?.id) {def FI = "https://api.tvmaze.com";def us = curl "$FI/lookup/shows?thetvdb=${db.TheTVDB.id}";def lU = us.id;cBZ = curl "$FI/shows/$lU/episodebynumber?season=$dC&number=$sV";DI = cBZ.id}} catch (Exception err) {};def tb = "";def te = "en-US";def eY = null;def xP = new File("$home/.filebotsecrets.json");if (xP.exists()) {def MVE = new groovy.json.JsonSlurper().parseText(xP.text);tb = MVE.tb;te = MVE.language;eY = MVE.person_info_dir};def pXT = "https://api.themoviedb.org/3/tv/$id/season/$dC/episode/$sV";def DFm = ["accept": "application/json"];def Poe = curl(DFm, "$pXT?language=$te&api_key=$tb");def Tf = curl(DFm, "$pXT/external_ids?api_key=$tb");def BLH = curl(DFm, "$pXT/credits?language=$te&api_key=$tb");def UI = curl(DFm, "$pXT/images?include_image_language=en%2Cnull&api_key=$tb");def tb = (xV / target.nameWithoutExtension + "-thumb.jpg").toString();def vb = new File(tb);def AS = new File(tb.replace("-thumb",""));if (!(vb.exists() || AS.exists()) && UI.stills.size() > 0) {def TIp = "https://image.tmdb.org/t/p/original${UI.stills[0].file_path}";system "curl", "-o", xV / target.nameWithoutExtension + "-thumb.jpg", TIp};def qO = [];(BLH.cast + BLH.guest_stars).eachWithIndex { k_I, HS ->  def Hb = "$eY/${k_I.name[0]}/${k_I.name}";def Fax = k_I.order ?: HS + qO.size();qO << [a_g: k_I.name, YWX: k_I.character, tu: Fax, Hb: "${Hb}/folder.jpg"];if (eY) {def NAj = new File(Hb);if (!NAj.exists()) {NAj.mkdirs();system "curl", "-o", "${Hb}/folder.jpg", "https://image.tmdb.org/t/p/original${k_I.profile_path}"}}};def tOf = xV / target.nameWithoutExtension + ".nfo";XML(tOf) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(Poe.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);year(airdate.format("yyyy"));uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (Tf?.imdb_id) {uniqueid(type: "imdb", value: Tf.imdb_id, Tf.imdb_id);imdbid(Tf.imdb_id)};if (Tf?.tvdb_id) {uniqueid(type: "tvdb", value: Tf.tvdb_id, Tf.tvdb_id);tvdbid(Tf.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (DI) {uniqueid(type: "tvmaze", value: DI, DI);tvmazeid(DI)}} catch (Exception err) {};if (vb.exists()) {art {poster(tb)}};qO.each { lsA ->  actor {name(lsA.a_g);role(lsA.YWX);sortorder(lsA.tu);if (eY) { thumb(lsA.Hb) }}};showtitle(n);episode(sV);season(dC);aired(airdate.format("yyyy-MM-dd"));fileinfo {streamdetails {target.mediaInfo.Video.each { xpc ->  video {def XNB = Float.parseFloat(xpc.'Duration');codec(xpc.'Format');micodec(xpc.'Format');bitrate(xpc.'BitRate');width(xpc.'Width');height(xpc.'Height');aspect(xpc.'DisplayAspectRatio/String');aspectratio(xpc.'DisplayAspectRatio/String');framerate(xpc.'FrameRate');'default'(xpc.'Default' == "Yes" ? "True" : "False");forced(xpc.'Forced' == "Yes" ? "True" : "False");duration(xpc.'Duration' ? (int) Math.floor(XNB / 60000) : 0);durationinseconds(xpc.'Duration' ? (int) Math.floor(XNB / 1000) : 0)}};target.mediaInfo.Audio.each { Yt ->  audio {codec(Yt.'Format');micodec(Yt.'Format');language(Yt.'Language/String3');channels(Yt.'Channel(s)');samplingrate(Yt.'SamplingRate');'default'(Yt.'Default' == "Yes" ? "True" : "False");forced(Yt.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { Ruj ->  subtitle {codec(Ruj.'Format');micodec(Ruj.'Format');width('0');height('0');language(Ruj.'Language/String3');'default'(Ruj.'Default' == "Yes" ? "True" : "False");forced(Ruj.'Forced' == "Yes" ? "True" : "False")}}}}}}}