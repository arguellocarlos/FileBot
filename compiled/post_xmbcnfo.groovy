{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def Bb = target.dir;def ckk = any{ s } { 0 };def KY = any{ e } { special };def mVb = 0;def fNq = null;try {if (db.TheTVDB?.id) {def uF = "https://api.tvmaze.com";def rC = curl "$uF/lookup/shows?thetvdb=${db.TheTVDB.id}";def jI = rC.id;fNq = curl "$uF/shows/$jI/episodebynumber?season=$ckk&number=$KY";mVb = fNq.id}} catch (Exception err) {};def Uu = "";def qB_ = "en-US";def MSg = null;def Mvs = new File("$home/.filebotsecrets.json");if (Mvs.exists()) {def nI = new groovy.json.JsonSlurper().parseText(Mvs.text);Uu = nI.Uu;qB_ = nI.language;MSg = nI.person_info_dir};def Pi = "https://api.themoviedb.org/3/tv/$id/season/$ckk/episode/$KY";def nt = ["accept": "application/json"];def OfJ = curl(nt, "$Pi?language=$qB_&api_key=$Uu");def hYF = curl(nt, "$Pi/external_ids?api_key=$Uu");def oR = curl(nt, "$Pi/credits?language=$qB_&api_key=$Uu");def W_Q = curl(nt, "$Pi/images?include_image_language=en%2Cnull&api_key=$Uu");def moF = (Bb / target.nameWithoutExtension + "-thumb.jpg").toString();def GIH = new File(moF);def xch = new File(moF.replace("-thumb",""));if (!(GIH.exists() || xch.exists()) && W_Q.stills.size() > 0) {def DD = "https://image.tmdb.org/t/p/original${W_Q.stills[0].file_path}";system "curl", "-o", Bb / target.nameWithoutExtension + "-thumb.jpg", DD};def Kyk = [];(oR.cast + oR.guest_stars).eachWithIndex { TOV, GBT ->  def Xl = "$MSg/${TOV.name[0]}/${TOV.name}";def kO = TOV.order ?: GBT + Kyk.size();Kyk << [xR: TOV.name, kT: TOV.character, OXj: kO, Xl: "${Xl}/folder.jpg"];if (MSg) {def yLN = new File(Xl);if (!yLN.exists()) {yLN.mkdirs();system "curl", "-o", "${Xl}/folder.jpg", "https://image.tmdb.org/t/p/original${TOV.profile_path}"}}};def vUL = Bb / target.nameWithoutExtension + ".nfo";XML(vUL) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(OfJ.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (hYF?.imdb_id) {uniqueid(type: "imdb", value: hYF.imdb_id, hYF.imdb_id);imdbid(hYF.imdb_id)};if (hYF?.tvdb_id) {uniqueid(type: "tvdb", value: hYF.tvdb_id, hYF.tvdb_id);tvdbid(hYF.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (mVb) {uniqueid(type: "tvmaze", value: mVb, mVb);tvmazeid(mVb)}} catch (Exception err) {};if (GIH.exists()) {art {poster(moF)}};Kyk.each { mu ->  actor {name(mu.xR);role(mu.kT);sortorder(mu.OXj);if (MSg) { thumb(mu.Xl) }}};showtitle(n);episode(KY);season(ckk);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { rf ->  video {def g_s = Float.parseFloat(rf.'Duration');codec(rf.'Format');micodec(rf.'Format');bitrate(rf.'BitRate');width(rf.'Width');height(rf.'Height');aspect(rf.'DisplayAspectRatio/String');aspectratio(rf.'DisplayAspectRatio/String');framerate(rf.'FrameRate');'default'(rf.'Default' == "Yes" ? "True" : "False");forced(rf.'Forced' == "Yes" ? "True" : "False");duration(rf.'Duration' ? (int) Math.floor(g_s / 60000) : 0);durationinseconds(rf.'Duration' ? (int) Math.floor(g_s / 1000) : 0)}};target.mediaInfo.Audio.each { eLH ->  audio {codec(eLH.'Format');micodec(eLH.'Format');language(eLH.'Language/String3');channels(eLH.'Channel(s)');samplingrate(eLH.'SamplingRate');'default'(eLH.'Default' == "Yes" ? "True" : "False");forced(eLH.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { hg ->  subtitle {codec(hg.'Format');micodec(hg.'Format');width('0');height('0');language(hg.'Language/String3');'default'(hg.'Default' == "Yes" ? "True" : "False");forced(hg.'Forced' == "Yes" ? "True" : "False")}}}}}}}