{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def Is = target.dir;def Gt = any{ s } { 0 };def QIH = any{ e } { special };def Ft = 0;def sBX = null;try {if (db.TheTVDB?.id) {def Si = "https://api.tvmaze.com";def gMP = curl "$Si/lookup/shows?thetvdb=${db.TheTVDB.id}";def JYg = gMP.id;sBX = curl "$Si/shows/$JYg/episodebynumber?season=$Gt&number=$QIH";Ft = sBX.id}} catch (Exception err) {};def xIz = "";def hg = "en-US";def UU = null;def miK = new File("$home/.filebotsecrets.json");if (miK.exists()) {def Rr = new groovy.json.JsonSlurper().parseText(miK.text);xIz = Rr.xIz;hg = Rr.language;UU = Rr.person_info_dir};def Zz = "https://api.themoviedb.org/3/tv/$id/season/$Gt/episode/$QIH";def VSt = ["accept": "application/json"];def Hw = curl(VSt, "$Zz?language=$hg&api_key=$xIz");def vax = curl(VSt, "$Zz/external_ids?api_key=$xIz");def fD = curl(VSt, "$Zz/credits?language=$hg&api_key=$xIz");def Jbm = curl(VSt, "$Zz/images?include_image_language=en%2Cnull&api_key=$xIz");def BL = (Is / target.nameWithoutExtension + "-thumb.jpg").toString();def vD = new File(BL);def mar = new File(BL.replace("-thumb",""));if (!(vD.exists() || mar.exists()) && Jbm.stills.size() > 0) {def aXN = "https://image.tmdb.org/t/p/original${Jbm.stills[0].file_path}";system "curl", "-o", Is / target.nameWithoutExtension + "-thumb.jpg", aXN};def Lle = [];(fD.cast + fD.guest_stars).eachWithIndex { Xc, gP ->  def sx = "$UU/${Xc.name[0]}/${Xc.name}";def rX = Xc.order ?: gP + Lle.size();Lle << [xp: Xc.name, eXW: Xc.character, ra: rX, sx: "${sx}/folder.jpg"];if (UU) {def Xz = new File(sx);if (!Xz.exists()) {Xz.mkdirs();system "curl", "-o", "${sx}/folder.jpg", "https://image.tmdb.org/t/p/original${Xc.profile_path}"}}};def Xb = Is / target.nameWithoutExtension + ".nfo";XML(Xb) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(Hw.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (vax?.imdb_id) {uniqueid(type: "imdb", value: vax.imdb_id, vax.imdb_id);imdbid(vax.imdb_id)};if (vax?.tvdb_id) {uniqueid(type: "tvdb", value: vax.tvdb_id, vax.tvdb_id);tvdbid(vax.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (Ft) {uniqueid(type: "tvmaze", value: Ft, Ft);tvmazeid(Ft)}} catch (Exception err) {};if (vD.exists()) {art {poster(BL)}};Lle.each { HFG ->  actor {name(HFG.xp);role(HFG.eXW);sortorder(HFG.ra);if (UU) { thumb(HFG.sx) }}};showtitle(n);episode(QIH);season(Gt);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { yO ->  video {def wd = Float.parseFloat(yO.'Duration');codec(yO.'Format');micodec(yO.'Format');bitrate(yO.'BitRate');width(yO.'Width');height(yO.'Height');aspect(yO.'DisplayAspectRatio/String');aspectratio(yO.'DisplayAspectRatio/String');framerate(yO.'FrameRate');'default'(yO.'Default' == "Yes" ? "True" : "False");forced(yO.'Forced' == "Yes" ? "True" : "False");duration(yO.'Duration' ? (int) Math.floor(wd / 60000) : 0);durationinseconds(yO.'Duration' ? (int) Math.floor(wd / 1000) : 0)}};target.mediaInfo.Audio.each { pd ->  audio {codec(pd.'Format');micodec(pd.'Format');language(pd.'Language/String3');channels(pd.'Channel(s)');samplingrate(pd.'SamplingRate');'default'(pd.'Default' == "Yes" ? "True" : "False");forced(pd.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { JrS ->  subtitle {codec(JrS.'Format');micodec(JrS.'Format');width('0');height('0');language(JrS.'Language/String3');'default'(JrS.'Default' == "Yes" ? "True" : "False");forced(JrS.'Forced' == "Yes" ? "True" : "False")}}}}}}}