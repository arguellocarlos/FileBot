{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def DW = target.dir;def Oh = any{ s } { 0 };def kO = any{ e } { special };def wO = 0;def qF = null;try {if (db.TheTVDB?.id) {def AlX = "https://api.tvmaze.com";def Dq = curl "$AlX/lookup/shows?thetvdb=${db.TheTVDB.id}";def tjF = Dq.id;qF = curl "$AlX/shows/$tjF/episodebynumber?season=$Oh&number=$kO";wO = qF.id}} catch (Exception err) {};def eDp = "";def VwT = "en-US";def MTT = null;def EC = new File("$home/.filebotsecrets.json");if (EC.exists()) {def nAT = new groovy.json.JsonSlurper().parseText(EC.text);eDp = nAT.eDp;VwT = nAT.language;MTT = nAT.person_info_dir};def Qw = "https://api.themoviedb.org/3/tv/$id/season/$Oh/episode/$kO";def qr = ["accept": "application/json"];def Eag = curl(qr, "$Qw?language=$VwT&api_key=$eDp");def zMv = curl(qr, "$Qw/external_ids?api_key=$eDp");def LPt = curl(qr, "$Qw/credits?language=$VwT&api_key=$eDp");def AQ = curl(qr, "$Qw/images?include_image_language=en%2Cnull&api_key=$eDp");def IEk = (DW / target.nameWithoutExtension + "-thumb.jpg").toString();def PE_ = new File(IEk);def Lz = new File(IEk.replace("-thumb",""));if (!(PE_.exists() || Lz.exists()) && AQ.stills.size() > 0) {def bB = "https://image.tmdb.org/t/p/original${AQ.stills[0].file_path}";system "curl", "-o", DW / target.nameWithoutExtension + "-thumb.jpg", bB};def RH = [];(LPt.cast + LPt.guest_stars).eachWithIndex { Ic, oQR ->  def AvF = "$MTT/${Ic.name[0]}/${Ic.name}";def BW = Ic.order ?: oQR + RH.size();RH << [ygv: Ic.name, GN: Ic.character, XfG: BW, AvF: "${AvF}/folder.jpg"];if (MTT) {def QSj = new File(AvF);if (!QSj.exists()) {QSj.mkdirs();system "curl", "-o", "${AvF}/folder.jpg", "https://image.tmdb.org/t/p/original${Ic.profile_path}"}}};def QG = DW / target.nameWithoutExtension + ".nfo";XML(QG) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(Eag.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (zMv?.imdb_id) {uniqueid(type: "imdb", value: zMv.imdb_id, zMv.imdb_id);imdbid(zMv.imdb_id)};if (zMv?.tvdb_id) {uniqueid(type: "tvdb", value: zMv.tvdb_id, zMv.tvdb_id);tvdbid(zMv.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (wO) {uniqueid(type: "tvmaze", value: wO, wO);tvmazeid(wO)}} catch (Exception err) {};if (PE_.exists()) {art {poster(IEk)}};RH.each { vT ->  actor {name(vT.ygv);role(vT.GN);sortorder(vT.XfG);if (MTT) { thumb(vT.AvF) }}};showtitle(n);episode(kO);season(Oh);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { muK ->  video {def dr = Float.parseFloat(muK.'Duration');codec(muK.'Format');micodec(muK.'Format');bitrate(muK.'BitRate');width(muK.'Width');height(muK.'Height');aspect(muK.'DisplayAspectRatio/String');aspectratio(muK.'DisplayAspectRatio/String');framerate(muK.'FrameRate');'default'(muK.'Default' == "Yes" ? "True" : "False");forced(muK.'Forced' == "Yes" ? "True" : "False");duration(muK.'Duration' ? (int) Math.floor(dr / 60000) : 0);durationinseconds(muK.'Duration' ? (int) Math.floor(dr / 1000) : 0)}};target.mediaInfo.Audio.each { g_ ->  audio {codec(g_.'Format');micodec(g_.'Format');language(g_.'Language/String3');channels(g_.'Channel(s)');samplingrate(g_.'SamplingRate');'default'(g_.'Default' == "Yes" ? "True" : "False");forced(g_.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { xA ->  subtitle {codec(xA.'Format');micodec(xA.'Format');width('0');height('0');language(xA.'Language/String3');'default'(xA.'Default' == "Yes" ? "True" : "False");forced(xA.'Forced' == "Yes" ? "True" : "False")}}}}}}}