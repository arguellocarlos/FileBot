{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def lot = target.dir;def Gi = any{ s } { 0 };def Cw = any{ e } { special };def TW = 0;def d_t = null;try {if (db.TheTVDB?.id) {def eC = "https://api.tvmaze.com";def kMu = curl "$eC/lookup/shows?thetvdb=${db.TheTVDB.id}";def qV = kMu.id;d_t = curl "$eC/shows/$qV/episodebynumber?season=$Gi&number=$Cw";TW = d_t.id}} catch (Exception err) {};def CR = "";def IH = "en-US";def xRH = null;def Zff = new File("$home/.filebotsecrets.json");if (Zff.exists()) {def dnP = new groovy.json.JsonSlurper().parseText(Zff.text);CR = dnP.CR;IH = dnP.language;xRH = dnP.person_info_dir};def hmK = "https://api.themoviedb.org/3/tv/$id/season/$Gi/episode/$Cw";def CJC = ["accept": "application/json"];def VQ = curl(CJC, "$hmK?language=$IH&api_key=$CR");def Zrr = curl(CJC, "$hmK/external_ids?api_key=$CR");def xZm = curl(CJC, "$hmK/credits?language=$IH&api_key=$CR");def _B = curl(CJC, "$hmK/images?include_image_language=en%2Cnull&api_key=$CR");def qe = (lot / target.nameWithoutExtension + "-thumb.jpg").toString();def pr = new File(qe);def QXE = new File(qe.replace("-thumb",""));if (!(pr.exists() || QXE.exists()) && _B.stills.size() > 0) {def AtH = "https://image.tmdb.org/t/p/original${_B.stills[0].file_path}";system "curl", "-o", lot / target.nameWithoutExtension + "-thumb.jpg", AtH};def naG = [];(xZm.cast + xZm.guest_stars).eachWithIndex { sz, Bf ->  def aXd = "$xRH/${sz.name[0]}/${sz.name}";def wv = sz.order ?: Bf + naG.size();naG << [EL: sz.name, oo: sz.character, SYk: wv, aXd: "${aXd}/folder.jpg"];if (xRH) {def RTI = new File(aXd);if (!RTI.exists()) {RTI.mkdirs();system "curl", "-o", "${aXd}/folder.jpg", "https://image.tmdb.org/t/p/original${sz.profile_path}"}}};def DC = lot / target.nameWithoutExtension + ".nfo";XML(DC) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(VQ.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (Zrr?.imdb_id) {uniqueid(type: "imdb", value: Zrr.imdb_id, Zrr.imdb_id);imdbid(Zrr.imdb_id)};if (Zrr?.tvdb_id) {uniqueid(type: "tvdb", value: Zrr.tvdb_id, Zrr.tvdb_id);tvdbid(Zrr.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (TW) {uniqueid(type: "tvmaze", value: TW, TW);tvmazeid(TW)}} catch (Exception err) {};if (pr.exists()) {art {poster(qe)}};naG.each { dJd ->  actor {name(dJd.EL);role(dJd.oo);sortorder(dJd.SYk);if (xRH) { thumb(dJd.aXd) }}};showtitle(n);episode(Cw);season(Gi);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { Pp ->  video {def par = Float.parseFloat(Pp.'Duration');codec(Pp.'Format');micodec(Pp.'Format');bitrate(Pp.'BitRate');width(Pp.'Width');height(Pp.'Height');aspect(Pp.'DisplayAspectRatio/String');aspectratio(Pp.'DisplayAspectRatio/String');framerate(Pp.'FrameRate');'default'(Pp.'Default' == "Yes" ? "True" : "False");forced(Pp.'Forced' == "Yes" ? "True" : "False");duration(Pp.'Duration' ? (int) Math.floor(par / 60000) : 0);durationinseconds(Pp.'Duration' ? (int) Math.floor(par / 1000) : 0)}};target.mediaInfo.Audio.each { rO ->  audio {codec(rO.'Format');micodec(rO.'Format');language(rO.'Language/String3');channels(rO.'Channel(s)');samplingrate(rO.'SamplingRate');'default'(rO.'Default' == "Yes" ? "True" : "False");forced(rO.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { JAd ->  subtitle {codec(JAd.'Format');micodec(JAd.'Format');width('0');height('0');language(JAd.'Language/String3');'default'(JAd.'Default' == "Yes" ? "True" : "False");forced(JAd.'Forced' == "Yes" ? "True" : "False")}}}}}}}