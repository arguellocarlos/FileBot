{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def Dsr = target.dir;def vts = any{ s } { 0 };def uFA = any{ e } { special };def RPK = 0;def TK = null;try {if (db.TheTVDB?.id) {def Jr = "https://api.tvmaze.com";def Vs = curl "$Jr/lookup/shows?thetvdb=${db.TheTVDB.id}";def LA = Vs.id;TK = curl "$Jr/shows/$LA/episodebynumber?season=$vts&number=$uFA";RPK = TK.id}} catch (Exception err) {};def aj = "";def ll = "en-US";def uAp = null;def kWs = new File("$home/.filebotsecrets.json");if (kWs.exists()) {def OZc = new groovy.json.JsonSlurper().parseText(kWs.text);aj = OZc.aj;ll = OZc.language;uAp = OZc.person_info_dir};def gYU = "https://api.themoviedb.org/3/tv/$id/season/$vts/episode/$uFA";def LW = ["accept": "application/json"];def ab = curl(LW, "$gYU?language=$ll&api_key=$aj");def jwa = curl(LW, "$gYU/external_ids?api_key=$aj");def ZD = curl(LW, "$gYU/credits?language=$ll&api_key=$aj");def kl = curl(LW, "$gYU/images?include_image_language=en%2Cnull&api_key=$aj");def KLi = (Dsr / target.nameWithoutExtension + "-thumb.jpg").toString();def FZ = new File(KLi);def xJG = new File(KLi.replace("-thumb",""));if (!(FZ.exists() || xJG.exists()) && kl.stills.size() > 0) {def pq = "https://image.tmdb.org/t/p/original${kl.stills[0].file_path}";system "curl", "-o", Dsr / target.nameWithoutExtension + "-thumb.jpg", pq};def rjQ = [];(ZD.cast + ZD.guest_stars).eachWithIndex { BtQ, Yk ->  def vDd = "$uAp/${BtQ.name[0]}/${BtQ.name}";def pZ = BtQ.order ?: Yk + rjQ.size();rjQ << [Rx: BtQ.name, LKd: BtQ.character, zpU: pZ, vDd: "${vDd}/folder.jpg"];if (uAp) {def mb = new File(vDd);if (!mb.exists()) {mb.mkdirs();system "curl", "-o", "${vDd}/folder.jpg", "https://image.tmdb.org/t/p/original${BtQ.profile_path}"}}};def Tft = Dsr / target.nameWithoutExtension + ".nfo";XML(Tft) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(ab.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (jwa?.imdb_id) {uniqueid(type: "imdb", value: jwa.imdb_id, jwa.imdb_id);imdbid(jwa.imdb_id)};if (jwa?.tvdb_id) {uniqueid(type: "tvdb", value: jwa.tvdb_id, jwa.tvdb_id);tvdbid(jwa.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (RPK) {uniqueid(type: "tvmaze", value: RPK, RPK);tvmazeid(RPK)}} catch (Exception err) {};if (FZ.exists()) {art {poster(KLi)}};rjQ.each { si ->  actor {name(si.Rx);role(si.LKd);sortorder(si.zpU);if (uAp) { thumb(si.vDd) }}};showtitle(n);episode(uFA);season(vts);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { RE ->  video {def uee = Float.parseFloat(RE.'Duration');codec(RE.'Format');micodec(RE.'Format');bitrate(RE.'BitRate');width(RE.'Width');height(RE.'Height');aspect(RE.'DisplayAspectRatio/String');aspectratio(RE.'DisplayAspectRatio/String');framerate(RE.'FrameRate');'default'(RE.'Default' == "Yes" ? "True" : "False");forced(RE.'Forced' == "Yes" ? "True" : "False");duration(RE.'Duration' ? (int) Math.floor(uee / 60000) : 0);durationinseconds(RE.'Duration' ? (int) Math.floor(uee / 1000) : 0)}};target.mediaInfo.Audio.each { E_g ->  audio {codec(E_g.'Format');micodec(E_g.'Format');language(E_g.'Language/String3');channels(E_g.'Channel(s)');samplingrate(E_g.'SamplingRate');'default'(E_g.'Default' == "Yes" ? "True" : "False");forced(E_g.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { BEv ->  subtitle {codec(BEv.'Format');micodec(BEv.'Format');width('0');height('0');language(BEv.'Language/String3');'default'(BEv.'Default' == "Yes" ? "True" : "False");forced(BEv.'Forced' == "Yes" ? "True" : "False")}}}}}}}