{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def Fw = target.dir;def Oam = any{ s } { 0 };def nT = any{ e } { special };def aXn = 0;def CP = null;try {if (db.TheTVDB?.id) {def Ci = "https://api.tvmaze.com";def PQ = curl "$Ci/lookup/shows?thetvdb=${db.TheTVDB.id}";def qu = PQ.id;CP = curl "$Ci/shows/$qu/episodebynumber?season=$Oam&number=$nT";aXn = CP.id}} catch (Exception err) {};def zHM = "";def ieF = "en-US";def Fdg = null;def Ow = new File("$home/.filebotsecrets.json");if (Ow.exists()) {def zbJ = new groovy.json.JsonSlurper().parseText(Ow.text);zHM = zbJ.zHM;ieF = zbJ.language;Fdg = zbJ.person_info_dir};def HA = "https://api.themoviedb.org/3/tv/$id/season/$Oam/episode/$nT";def Xfl = ["accept": "application/json"];def WnL = curl(Xfl, "$HA?language=$ieF&api_key=$zHM");def cEM = curl(Xfl, "$HA/external_ids?api_key=$zHM");def eqp = curl(Xfl, "$HA/credits?language=$ieF&api_key=$zHM");def dq = curl(Xfl, "$HA/images?include_image_language=en%2Cnull&api_key=$zHM");def Enp = (Fw / target.nameWithoutExtension + "-thumb.jpg").toString();def zas = new File(Enp);def wV = new File(Enp.replace("-thumb",""));if (!(zas.exists() || wV.exists()) && dq.stills.size() > 0) {def Mu = "https://image.tmdb.org/t/p/original${dq.stills[0].file_path}";system "curl", "-o", Fw / target.nameWithoutExtension + "-thumb.jpg", Mu};def R_ = [];(eqp.cast + eqp.guest_stars).eachWithIndex { Vlh, EwQ ->  def wn = "$Fdg/${Vlh.name[0]}/${Vlh.name}";def Ywl = Vlh.order ?: EwQ + R_.size();R_ << [ye: Vlh.name, Eog: Vlh.character, ZJ: Ywl, wn: "${wn}/folder.jpg"];if (Fdg) {def nJG = new File(wn);if (!nJG.exists()) {nJG.mkdirs();system "curl", "-o", "${wn}/folder.jpg", "https://image.tmdb.org/t/p/original${Vlh.profile_path}"}}};def WnL = Fw / target.nameWithoutExtension + ".nfo";XML(WnL) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(WnL.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (cEM?.imdb_id) {uniqueid(type: "imdb", value: cEM.imdb_id, cEM.imdb_id);imdbid(cEM.imdb_id)};if (cEM?.tvdb_id) {uniqueid(type: "tvdb", value: cEM.tvdb_id, cEM.tvdb_id);tvdbid(cEM.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (aXn) {uniqueid(type: "tvmaze", value: aXn, aXn);tvmazeid(aXn)}} catch (Exception err) {};if (zas.exists()) {art {poster(Enp)}};R_.each { lrn ->  actor {name(lrn.ye);role(lrn.Eog);sortorder(lrn.ZJ);if (Fdg) { thumb(lrn.wn) }}};showtitle(n);episode(nT);season(Oam);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { Liy ->  video {def sKV = Float.parseFloat(Liy.'Duration');codec(Liy.'Format');micodec(Liy.'Format');bitrate(Liy.'BitRate');width(Liy.'Width');height(Liy.'Height');aspect(Liy.'DisplayAspectRatio/String');aspectratio(Liy.'DisplayAspectRatio/String');framerate(Liy.'FrameRate');'default'(Liy.'Default' == "Yes" ? "True" : "False");forced(Liy.'Forced' == "Yes" ? "True" : "False");duration(Liy.'Duration' ? (int) Math.floor(sKV / 60000) : 0);durationinseconds(Liy.'Duration' ? (int) Math.floor(sKV / 1000) : 0)}};target.mediaInfo.Audio.each { eKC ->  audio {codec(eKC.'Format');micodec(eKC.'Format');language(eKC.'Language/String3');channels(eKC.'Channel(s)');samplingrate(eKC.'SamplingRate');'default'(eKC.'Default' == "Yes" ? "True" : "False");forced(eKC.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { TNI ->  subtitle {codec(TNI.'Format');micodec(TNI.'Format');width('0');height('0');language(TNI.'Language/String3');'default'(TNI.'Default' == "Yes" ? "True" : "False");forced(TNI.'Forced' == "Yes" ? "True" : "False")}}}}}}}