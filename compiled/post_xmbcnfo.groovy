{ source, target, metadata -> if (type.toString() != "Episode" || !vf) {return null};def Ys = target.dir;def o_G = 0;def enc = null;try {if (db.TheTVDB?.id) {def Hy = curl "https://api.tvmaze.com/lookup/shows?thetvdb=${db.TheTVDB.id}";def LKT = Hy.id;enc = curl "https://api.tvmaze.com/shows/$LKT/episodebynumber?season=$s&number=$e";o_G = enc.id}} catch (Exception e) {};def Cqf = "";def AlL = "en-US";def bP = null;def ICu = new File("$home/.filebotsecrets.json");if (ICu.exists()) {def Rbb = new groovy.json.JsonSlurper().parseText(ICu.text);Cqf = Rbb.Cqf;AlL = Rbb.language;bP = Rbb.person_info_dir};def OIp = "https://api.themoviedb.org/3/tv/$id/season/$s/episode/$e";def wnm = curl(["accept": "application/json"], "$OIp?language=$AlL&api_key=$Cqf");def jM = curl(["accept": "application/json"], "$OIp/external_ids?api_key=$Cqf");def kil = curl(["accept": "application/json"], "$OIp/credits?language=$AlL&api_key=$Cqf");def Wjx = curl(["accept": "application/json"], "$OIp/images?include_image_language=en%2Cnull&api_key=$Cqf");def bbT = (Ys / target.nameWithoutExtension + "-thumb.jpg").toString();def BH = new File(bbT);def eU = new File(bbT.replace("-thumb",""));if (!(BH.exists() || eU.exists()) && Wjx.stills.size() > 0) {def rx = "https://image.tmdb.org/t/p/original${Wjx.stills[0].file_path}";system "curl", "-o", Ys / target.nameWithoutExtension + "-thumb.jpg", rx};def nLW = [];(kil.cast + kil.guest_stars).eachWithIndex { ZXF, wD -> def vLc = "$bP/${ZXF.name[0]}/${ZXF.name}";def GAy = ZXF.order ?: wD + nLW.size();nLW << [sj: ZXF.name, C_: ZXF.character, pU: GAy, vLc: "${vLc}/folder.jpg"];if (bP) {def hb = new File(vLc);if (!hb.exists()) {hb.mkdirs();system "curl", "-o", "${vLc}/folder.jpg", "https://image.tmdb.org/t/p/original${ZXF.profile_path}"}}};def nE = Ys / target.nameWithoutExtension + ".nfo";XML(nE) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(wnm.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);year(airdate.format("yyyy"));uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (jM?.imdb_id) {uniqueid(type: "imdb", value: jM.imdb_id, jM.imdb_id);imdbid(jM.imdb_id)};if (jM?.tvdb_id) {uniqueid(type: "tvdb", value: jM.tvdb_id, jM.tvdb_id);tvdbid(jM.tvdb_id)};try {runtime(runtime)} catch (Exception e) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception e) {};try {if (o_G) {uniqueid(type: "tvmaze", value: o_G, o_G);tvmazeid(o_G)}} catch (Exception e) {};if (BH.exists()) {art {poster(bbT)}};nLW.each { TxE ->  actor {name(TxE.sj);role(TxE.C_);sortorder(TxE.pU);if (bP) { thumb(TxE.vLc) }}};showtitle(n);episode(e);season(s);aired(airdate.format("yyyy-MM-dd"));fileinfo {streamdetails {target.mediaInfo.Video.each { NAn ->  video {def bD = Float.parseFloat(NAn.'Duration');codec(NAn.'Format');micodec(NAn.'Format');bitrate(NAn.'BitRate');width(NAn.'Width');height(NAn.'Height');aspect(NAn.'DisplayAspectRatio/String');aspectratio(NAn.'DisplayAspectRatio/String');framerate(NAn.'FrameRate');'default'(NAn.'Default' == "Yes" ? "True" : "False");forced(NAn.'Forced' == "Yes" ? "True" : "False");duration(NAn.'Duration' ? (int) Math.floor(bD / 60000) : 0);durationinseconds(NAn.'Duration' ? (int) Math.floor(bD / 1000) : 0)}};target.mediaInfo.Audio.each { is ->  audio {codec(is.'Format');micodec(is.'Format');language(is.'Language/String3');channels(is.'Channel(s)');samplingrate(is.'SamplingRate');'default'(is.'Default' == "Yes" ? "True" : "False");forced(is.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { LtP ->  subtitle {codec(LtP.'Format');micodec(LtP.'Format');width('0');height('0');language(LtP.'Language/String3');'default'(LtP.'Default' == "Yes" ? "True" : "False");forced(LtP.'Forced' == "Yes" ? "True" : "False")}}}}}}}