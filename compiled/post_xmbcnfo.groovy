{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def hL = target.dir;def ZoS = any{ s } { 0 };def MW = any{ e } { special };def Haz = 0;def gQS = null;try {if (db.TheTVDB?.id) {def gz = "https://api.tvmaze.com";def gx = curl "$gz/lookup/shows?thetvdb=${db.TheTVDB.id}";def YUG = gx.id;gQS = curl "$gz/shows/$YUG/episodebynumber?season=$ZoS&number=$MW";Haz = gQS.id}} catch (Exception err) {};def bwk = "";def YD = "en-US";def Ct = null;def mzc = new File("$home/.filebotsecrets.json");if (mzc.exists()) {def HuU = new groovy.json.JsonSlurper().parseText(mzc.text);bwk = HuU.bwk;YD = HuU.language;Ct = HuU.person_info_dir};def cz = "https://api.themoviedb.org/3/tv/$id/season/$ZoS/episode/$MW";def GxL = ["accept": "application/json"];def wU = curl(GxL, "$cz?language=$YD&api_key=$bwk");def BQC = curl(GxL, "$cz/external_ids?api_key=$bwk");def Fq = curl(GxL, "$cz/credits?language=$YD&api_key=$bwk");def PuU = curl(GxL, "$cz/images?include_image_language=en%2Cnull&api_key=$bwk");def klx = (hL / target.nameWithoutExtension + "-thumb.jpg").toString();def ZZP = new File(klx);def PX = new File(klx.replace("-thumb",""));if (!(ZZP.exists() || PX.exists()) && PuU.stills.size() > 0) {def wI = "https://image.tmdb.org/t/p/original${PuU.stills[0].file_path}";system "curl", "-o", hL / target.nameWithoutExtension + "-thumb.jpg", wI};def yDG = [];(Fq.cast + Fq.guest_stars).eachWithIndex { iE, ovv ->  def jD = "$Ct/${iE.name[0]}/${iE.name}";def _ia = iE.order ?: ovv + yDG.size();yDG << [_F: iE.name, bc: iE.character, sm: _ia, jD: "${jD}/folder.jpg"];if (Ct) {def Mb = new File(jD);if (!Mb.exists()) {Mb.mkdirs();system "curl", "-o", "${jD}/folder.jpg", "https://image.tmdb.org/t/p/original${iE.profile_path}"}}};def hrT = hL / target.nameWithoutExtension + ".nfo";XML(hrT) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(wU.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (BQC?.imdb_id) {uniqueid(type: "imdb", value: BQC.imdb_id, BQC.imdb_id);imdbid(BQC.imdb_id)};if (BQC?.tvdb_id) {uniqueid(type: "tvdb", value: BQC.tvdb_id, BQC.tvdb_id);tvdbid(BQC.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (Haz) {uniqueid(type: "tvmaze", value: Haz, Haz);tvmazeid(Haz)}} catch (Exception err) {};if (ZZP.exists()) {art {poster(klx)}};yDG.each { v_M ->  actor {name(v_M._F);role(v_M.bc);sortorder(v_M.sm);if (Ct) { thumb(v_M.jD) }}};showtitle(n);episode(MW);season(ZoS);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { GR ->  video {def ko = Float.parseFloat(GR.'Duration');codec(GR.'Format');micodec(GR.'Format');bitrate(GR.'BitRate');width(GR.'Width');height(GR.'Height');aspect(GR.'DisplayAspectRatio/String');aspectratio(GR.'DisplayAspectRatio/String');framerate(GR.'FrameRate');'default'(GR.'Default' == "Yes" ? "True" : "False");forced(GR.'Forced' == "Yes" ? "True" : "False");duration(GR.'Duration' ? (int) Math.floor(ko / 60000) : 0);durationinseconds(GR.'Duration' ? (int) Math.floor(ko / 1000) : 0)}};target.mediaInfo.Audio.each { yKJ ->  audio {codec(yKJ.'Format');micodec(yKJ.'Format');language(yKJ.'Language/String3');channels(yKJ.'Channel(s)');samplingrate(yKJ.'SamplingRate');'default'(yKJ.'Default' == "Yes" ? "True" : "False");forced(yKJ.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { GFl ->  subtitle {codec(GFl.'Format');micodec(GFl.'Format');width('0');height('0');language(GFl.'Language/String3');'default'(GFl.'Default' == "Yes" ? "True" : "False");forced(GFl.'Forced' == "Yes" ? "True" : "False")}}}}}}}