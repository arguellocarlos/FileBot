{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def PG = target.dir;def Ynk = any{ s } { 0 };def MT = any{ e } { special };def IN = 0;def E_k = null;try {if (db.TheTVDB?.id) {def _V = "https://api.tvmaze.com";def xdr = curl "$_V/lookup/shows?thetvdb=${db.TheTVDB.id}";def gL = xdr.id;E_k = curl "$_V/shows/$gL/episodebynumber?season=$Ynk&number=$MT";IN = E_k.id}} catch (Exception err) {};def nou = "";def ZB = "en-US";def lp = null;def CXx = new File("$home/.filebotsecrets.json");if (CXx.exists()) {def bq = new groovy.json.JsonSlurper().parseText(CXx.text);nou = bq.nou;ZB = bq.language;lp = bq.person_info_dir};def DGM = "https://api.themoviedb.org/3/tv/$id/season/$Ynk/episode/$MT";def GYL = ["accept": "application/json"];def U_W = curl(GYL, "$DGM?language=$ZB&api_key=$nou");def FHe = curl(GYL, "$DGM/external_ids?api_key=$nou");def pN = curl(GYL, "$DGM/credits?language=$ZB&api_key=$nou");def WOD = curl(GYL, "$DGM/images?include_image_language=en%2Cnull&api_key=$nou");def OyS = (PG / target.nameWithoutExtension + "-thumb.jpg").toString();def Urw = new File(OyS);def n_ = new File(OyS.replace("-thumb",""));if (!(Urw.exists() || n_.exists()) && WOD.stills.size() > 0) {def tN = "https://image.tmdb.org/t/p/original${WOD.stills[0].file_path}";system "curl", "-o", PG / target.nameWithoutExtension + "-thumb.jpg", tN};def ssC = [];(pN.cast + pN.guest_stars).eachWithIndex { hzE, pnf ->  def Fpk = "$lp/${hzE.name[0]}/${hzE.name}";def igY = hzE.order ?: pnf + ssC.size();ssC << [nr: hzE.name, xcL: hzE.character, mk: igY, Fpk: "${Fpk}/folder.jpg"];if (lp) {def gRS = new File(Fpk);if (!gRS.exists()) {gRS.mkdirs();system "curl", "-o", "${Fpk}/folder.jpg", "https://image.tmdb.org/t/p/original${hzE.profile_path}"}}};def hzE = PG / target.nameWithoutExtension + ".nfo";XML(hzE) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(U_W.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (FHe?.imdb_id) {uniqueid(type: "imdb", value: FHe.imdb_id, FHe.imdb_id);imdbid(FHe.imdb_id)};if (FHe?.tvdb_id) {uniqueid(type: "tvdb", value: FHe.tvdb_id, FHe.tvdb_id);tvdbid(FHe.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (IN) {uniqueid(type: "tvmaze", value: IN, IN);tvmazeid(IN)}} catch (Exception err) {};if (Urw.exists()) {art {poster(OyS)}};ssC.each { dmD ->  actor {name(dmD.nr);role(dmD.xcL);sortorder(dmD.mk);if (lp) { thumb(dmD.Fpk) }}};showtitle(n);episode(MT);season(Ynk);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { dnl ->  video {def R_ = Float.parseFloat(dnl.'Duration');codec(dnl.'Format');micodec(dnl.'Format');bitrate(dnl.'BitRate');width(dnl.'Width');height(dnl.'Height');aspect(dnl.'DisplayAspectRatio/String');aspectratio(dnl.'DisplayAspectRatio/String');framerate(dnl.'FrameRate');'default'(dnl.'Default' == "Yes" ? "True" : "False");forced(dnl.'Forced' == "Yes" ? "True" : "False");duration(dnl.'Duration' ? (int) Math.floor(R_ / 60000) : 0);durationinseconds(dnl.'Duration' ? (int) Math.floor(R_ / 1000) : 0)}};target.mediaInfo.Audio.each { rV ->  audio {codec(rV.'Format');micodec(rV.'Format');language(rV.'Language/String3');channels(rV.'Channel(s)');samplingrate(rV.'SamplingRate');'default'(rV.'Default' == "Yes" ? "True" : "False");forced(rV.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { yZ ->  subtitle {codec(yZ.'Format');micodec(yZ.'Format');width('0');height('0');language(yZ.'Language/String3');'default'(yZ.'Default' == "Yes" ? "True" : "False");forced(yZ.'Forced' == "Yes" ? "True" : "False")}}}}}}}