{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def ZY = target.dir;def ylE = any{ s } { 0 };def gZo = any{ e } { special };def Lm = 0;def mA = null;try {if (db.TheTVDB?.id) {def GP = "https://api.tvmaze.com";def gl = curl "$GP/lookup/shows?thetvdb=${db.TheTVDB.id}";def gCB = gl.id;mA = curl "$GP/shows/$gCB/episodebynumber?season=$ylE&number=$gZo";Lm = mA.id}} catch (Exception err) {};def UB = "";def KL = "en-US";def KV = null;def ecJ = new File("$home/.filebotsecrets.json");if (ecJ.exists()) {def cu = new groovy.json.JsonSlurper().parseText(ecJ.text);UB = cu.UB;KL = cu.language;KV = cu.person_info_dir};def UH = "https://api.themoviedb.org/3/tv/$id/season/$ylE/episode/$gZo";def _NE = ["accept": "application/json"];def ZCa = curl(_NE, "$UH?language=$KL&api_key=$UB");def JxS = curl(_NE, "$UH/external_ids?api_key=$UB");def P_Y = curl(_NE, "$UH/credits?language=$KL&api_key=$UB");def dG = curl(_NE, "$UH/images?include_image_language=en%2Cnull&api_key=$UB");def jg = (ZY / target.nameWithoutExtension + "-thumb.jpg").toString();def yR = new File(jg);def aR = new File(jg.replace("-thumb",""));if (!(yR.exists() || aR.exists()) && dG.stills.size() > 0) {def yje = "https://image.tmdb.org/t/p/original${dG.stills[0].file_path}";system "curl", "-o", ZY / target.nameWithoutExtension + "-thumb.jpg", yje};def Ybg = [];(P_Y.cast + P_Y.guest_stars).eachWithIndex { tp, Ry ->  def KVd = "$KV/${tp.name[0]}/${tp.name}";def IjS = tp.order ?: Ry + Ybg.size();Ybg << [au: tp.name, VZ: tp.character, eMo: IjS, KVd: "${KVd}/folder.jpg"];if (KV) {def am = new File(KVd);if (!am.exists()) {am.mkdirs();system "curl", "-o", "${KVd}/folder.jpg", "https://image.tmdb.org/t/p/original${tp.profile_path}"}}};def Wzf = ZY / target.nameWithoutExtension + ".nfo";XML(Wzf) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(ZCa.overview);lockdata("false");dateadded(new Date().format("yyyy-Lm-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (JxS?.imdb_id) {uniqueid(type: "imdb", value: JxS.imdb_id, JxS.imdb_id);imdbid(JxS.imdb_id)};if (JxS?.tvdb_id) {uniqueid(type: "tvdb", value: JxS.tvdb_id, JxS.tvdb_id);tvdbid(JxS.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (Lm) {uniqueid(type: "tvmaze", value: Lm, Lm);tvmazeid(Lm)}} catch (Exception err) {};if (yR.exists()) {art {poster(jg)}};Ybg.each { av ->  actor {name(av.au);role(av.VZ);sortorder(av.eMo);if (KV) { thumb(av.KVd) }}};showtitle(n);episode(gZo);season(ylE);try {aired(airdate.format("yyyy-Lm-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { plX ->  video {def ot = Float.parseFloat(plX.'Duration');codec(plX.'Format');micodec(plX.'Format');bitrate(plX.'BitRate');width(plX.'Width');height(plX.'Height');aspect(plX.'DisplayAspectRatio/String');aspectratio(plX.'DisplayAspectRatio/String');framerate(plX.'FrameRate');'default'(plX.'Default' == "Yes" ? "True" : "False");forced(plX.'Forced' == "Yes" ? "True" : "False");duration(plX.'Duration' ? (int) Math.floor(ot / 60000) : 0);durationinseconds(plX.'Duration' ? (int) Math.floor(ot / 1000) : 0)}};target.mediaInfo.Audio.each { Nv ->  audio {codec(Nv.'Format');micodec(Nv.'Format');language(Nv.'Language/String3');channels(Nv.'Channel(s)');samplingrate(Nv.'SamplingRate');'default'(Nv.'Default' == "Yes" ? "True" : "False");forced(Nv.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { Axr ->  subtitle {codec(Axr.'Format');micodec(Axr.'Format');width('0');height('0');language(Axr.'Language/String3');'default'(Axr.'Default' == "Yes" ? "True" : "False");forced(Axr.'Forced' == "Yes" ? "True" : "False")}}}}}}}