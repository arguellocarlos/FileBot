{ source, target, metadata -> if (type.toString() != "Episode" || !vf || ext =~ /(ass|srt|ssa|vtt)/) {return null};def NB = target.dir;def GF = 0;def Bm = null;try {if (db.TheTVDB?.id) {def cz = curl "https://api.tvmaze.com/lookup/shows?thetvdb=${db.TheTVDB.id}";def dvT = cz.id;Bm = curl "https://api.tvmaze.com/shows/$dvT/episodebynumber?season=$s&number=$e";GF = Bm.id}} catch (Exception e) {};def AR = "";def PIW = "en-US";def rf = null;def BC = new File("$home/.filebotsecrets.json");if (BC.exists()) {def Ebh = new groovy.json.JsonSlurper().parseText(BC.text);AR = Ebh.AR;PIW = Ebh.language;rf = Ebh.person_info_dir};def BDX = "https://api.themoviedb.org/3/tv/$id/season/$s/episode/$e";def LX = curl(["accept": "application/json"], "$BDX?language=$PIW&api_key=$AR");def SE = curl(["accept": "application/json"], "$BDX/external_ids?api_key=$AR");def Vab = curl(["accept": "application/json"], "$BDX/credits?language=$PIW&api_key=$AR");def EIG = curl(["accept": "application/json"], "$BDX/images?include_image_language=en%2Cnull&api_key=$AR");def OU = (NB / target.nameWithoutExtension + "-thumb.jpg").toString();def hbz = new File(OU);def FG = new File(OU.replace("-thumb",""));if (!(hbz.exists() || FG.exists()) && EIG.stills.size() > 0) {def cZ = "https://image.tmdb.org/t/p/original${EIG.stills[0].file_path}";system "curl", "-o", NB / target.nameWithoutExtension + "-thumb.jpg", cZ};def UW = [];(Vab.cast + Vab.guest_stars).eachWithIndex { vcb, ysc -> def ltW = "$rf/${vcb.name[0]}/${vcb.name}";def Te = vcb.order ?: ysc + UW.size();UW << [KIT: vcb.name, lg: vcb.character, MwH: Te, ltW: "${ltW}/folder.jpg"];if (rf) {def aXl = new File(ltW);if (!aXl.exists()) {aXl.mkdirs();system "curl", "-o", "${ltW}/folder.jpg", "https://image.tmdb.org/t/p/original${vcb.profile_path}"}}};def Yz = NB / target.nameWithoutExtension + ".nfo";XML(Yz) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(LX.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);year(airdate.format("yyyy"));uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (SE?.imdb_id) {uniqueid(type: "imdb", value: SE.imdb_id, SE.imdb_id);imdbid(SE.imdb_id)};if (SE?.tvdb_id) {uniqueid(type: "tvdb", value: SE.tvdb_id, SE.tvdb_id);tvdbid(SE.tvdb_id)};try {runtime(runtime)} catch (Exception e) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception e) {};try {if (GF) {uniqueid(type: "tvmaze", value: GF, GF);tvmazeid(GF)}} catch (Exception e) {};if (hbz.exists()) {art {poster(OU)}};UW.each { jx ->  actor {name(jx.KIT);role(jx.lg);sortorder(jx.MwH);if (rf) { thumb(jx.ltW) }}};showtitle(n);episode(e);season(s);aired(airdate.format("yyyy-MM-dd"));fileinfo {streamdetails {target.mediaInfo.Video.each { Gv ->  video {def bh = Float.parseFloat(Gv.'Duration');codec(Gv.'Format');micodec(Gv.'Format');bitrate(Gv.'BitRate');width(Gv.'Width');height(Gv.'Height');aspect(Gv.'DisplayAspectRatio/String');aspectratio(Gv.'DisplayAspectRatio/String');framerate(Gv.'FrameRate');'default'(Gv.'Default' == "Yes" ? "True" : "False");forced(Gv.'Forced' == "Yes" ? "True" : "False");duration(Gv.'Duration' ? (int) Math.floor(bh / 60000) : 0);durationinseconds(Gv.'Duration' ? (int) Math.floor(bh / 1000) : 0)}};target.mediaInfo.Audio.each { BIr ->  audio {codec(BIr.'Format');micodec(BIr.'Format');language(BIr.'Language/String3');channels(BIr.'Channel(s)');samplingrate(BIr.'SamplingRate');'default'(BIr.'Default' == "Yes" ? "True" : "False");forced(BIr.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { iQN ->  subtitle {codec(iQN.'Format');micodec(iQN.'Format');width('0');height('0');language(iQN.'Language/String3');'default'(iQN.'Default' == "Yes" ? "True" : "False");forced(iQN.'Forced' == "Yes" ? "True" : "False")}}}}}}}