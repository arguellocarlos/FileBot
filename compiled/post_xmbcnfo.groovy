{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def wgt = target.dir;def Xab = any{ s } { 0 };def Kbv = any{ e } { special };def xqa = 0;def tG = null;try {if (db.TheTVDB?.id) {def Gy = "https://api.tvmaze.com";def nZ = curl "$Gy/lookup/shows?thetvdb=${db.TheTVDB.id}";def UO = nZ.id;tG = curl "$Gy/shows/$UO/episodebynumber?season=$Xab&number=$Kbv";xqa = tG.id}} catch (Exception err) {};def pl = "";def mw = "en-US";def QA = null;def BU = new File("$home/.filebotsecrets.json");if (BU.exists()) {def xHz = new groovy.json.JsonSlurper().parseText(BU.text);pl = xHz.pl;mw = xHz.language;QA = xHz.person_info_dir};def CJi = "https://api.themoviedb.org/3/tv/$id/season/$Xab/episode/$Kbv";def lT = ["accept": "application/json"];def ES = curl(lT, "$CJi?language=$mw&api_key=$pl");def Pwv = curl(lT, "$CJi/external_ids?api_key=$pl");def Mo = curl(lT, "$CJi/credits?language=$mw&api_key=$pl");def jLo = curl(lT, "$CJi/images?include_image_language=en%2Cnull&api_key=$pl");def XS = (wgt / target.nameWithoutExtension + "-thumb.jpg").toString();def mE = new File(XS);def kHW = new File(XS.replace("-thumb",""));if (!(mE.exists() || kHW.exists()) && jLo.stills.size() > 0) {def OFw = "https://image.tmdb.org/t/p/original${jLo.stills[0].file_path}";system "curl", "-o", wgt / target.nameWithoutExtension + "-thumb.jpg", OFw};def nwe = [];(Mo.cast + Mo.guest_stars).eachWithIndex { fAw, hg ->  def eM = "$QA/${fAw.name[0]}/${fAw.name}";def Nh = fAw.order ?: hg + nwe.size();nwe << [hN: fAw.name, vO: fAw.character, zjE: Nh, eM: "${eM}/folder.jpg"];if (QA) {def gg = new File(eM);if (!gg.exists()) {gg.mkdirs();system "curl", "-o", "${eM}/folder.jpg", "https://image.tmdb.org/t/p/original${fAw.profile_path}"}}};def XHN = wgt / target.nameWithoutExtension + ".nfo";XML(XHN) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(ES.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (Pwv?.imdb_id) {uniqueid(type: "imdb", value: Pwv.imdb_id, Pwv.imdb_id);imdbid(Pwv.imdb_id)};if (Pwv?.tvdb_id) {uniqueid(type: "tvdb", value: Pwv.tvdb_id, Pwv.tvdb_id);tvdbid(Pwv.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (xqa) {uniqueid(type: "tvmaze", value: xqa, xqa);tvmazeid(xqa)}} catch (Exception err) {};if (mE.exists()) {art {poster(XS)}};nwe.each { ol ->  actor {name(ol.hN);role(ol.vO);sortorder(ol.zjE);if (QA) { thumb(ol.eM) }}};showtitle(n);episode(Kbv);season(Xab);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { Ckh ->  video {def bn = Float.parseFloat(Ckh.'Duration');codec(Ckh.'Format');micodec(Ckh.'Format');bitrate(Ckh.'BitRate');width(Ckh.'Width');height(Ckh.'Height');aspect(Ckh.'DisplayAspectRatio/String');aspectratio(Ckh.'DisplayAspectRatio/String');framerate(Ckh.'FrameRate');'default'(Ckh.'Default' == "Yes" ? "True" : "False");forced(Ckh.'Forced' == "Yes" ? "True" : "False");duration(Ckh.'Duration' ? (int) Math.floor(bn / 60000) : 0);durationinseconds(Ckh.'Duration' ? (int) Math.floor(bn / 1000) : 0)}};target.mediaInfo.Audio.each { Um ->  audio {codec(Um.'Format');micodec(Um.'Format');language(Um.'Language/String3');channels(Um.'Channel(s)');samplingrate(Um.'SamplingRate');'default'(Um.'Default' == "Yes" ? "True" : "False");forced(Um.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { Uh ->  subtitle {codec(Uh.'Format');micodec(Uh.'Format');width('0');height('0');language(Uh.'Language/String3');'default'(Uh.'Default' == "Yes" ? "True" : "False");forced(Uh.'Forced' == "Yes" ? "True" : "False")}}}}}}}