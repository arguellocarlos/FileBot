{ source, target, metadata -> if (type.toString() != "Episode" || !vf || ext =~ /(ass|srt|ssa|vtt)/) {return null};def wFT = target.dir;def xS = any{ s } { 0 };def RE = any{ e } { special };def vdw = 0;def IsB = null;try {if (db.TheTVDB?.id) {def mDO = "https://api.tvmaze.com";def URk = curl "$mDO/lookup/shows?thetvdb=${db.TheTVDB.id}";def hik = URk.id;IsB = curl "$mDO/shows/$hik/episodebynumber?season=$xS&number=$RE";vdw = IsB.id}} catch (Exception err) {};def kvb = "";def ISv = "en-US";def SKM = null;def bJ = new File("$home/.filebotsecrets.json");if (bJ.exists()) {def Fo = new groovy.json.JsonSlurper().parseText(bJ.text);kvb = Fo.kvb;ISv = Fo.language;SKM = Fo.person_info_dir};def AH = "https://api.themoviedb.org/3/tv/$id/season/$xS/episode/$RE";def Hx = ["accept": "application/json"];def Vn = curl(Hx, "$AH?language=$ISv&api_key=$kvb");def tOX = curl(Hx, "$AH/external_ids?api_key=$kvb");def VI = curl(Hx, "$AH/credits?language=$ISv&api_key=$kvb");def md = curl(Hx, "$AH/images?include_image_language=en%2Cnull&api_key=$kvb");def Icy = (wFT / target.nameWithoutExtension + "-thumb.jpg").toString();def Xyc = new File(Icy);def qa = new File(Icy.replace("-thumb",""));if (!(Xyc.exists() || qa.exists()) && md.stills.size() > 0) {def DQr = "https://image.tmdb.org/t/p/original${md.stills[0].file_path}";system "curl", "-o", wFT / target.nameWithoutExtension + "-thumb.jpg", DQr};def XVs = [];(VI.cast + VI.guest_stars).eachWithIndex { ZX, yR -> def CE = "$SKM/${ZX.name[0]}/${ZX.name}";def eqc = ZX.order ?: yR + XVs.size();XVs << [kF: ZX.name, Wra: ZX.character, hP: eqc, CE: "${CE}/folder.jpg"];if (SKM) {def MAG = new File(CE);if (!MAG.exists()) {MAG.mkdirs();system "curl", "-o", "${CE}/folder.jpg", "https://image.tmdb.org/t/p/original${ZX.profile_path}"}}};def pI = wFT / target.nameWithoutExtension + ".nfo";XML(pI) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(Vn.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);year(airdate.format("yyyy"));uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (tOX?.imdb_id) {uniqueid(type: "imdb", value: tOX.imdb_id, tOX.imdb_id);imdbid(tOX.imdb_id)};if (tOX?.tvdb_id) {uniqueid(type: "tvdb", value: tOX.tvdb_id, tOX.tvdb_id);tvdbid(tOX.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (vdw) {uniqueid(type: "tvmaze", value: vdw, vdw);tvmazeid(vdw)}} catch (Exception err) {};if (Xyc.exists()) {art {poster(Icy)}};XVs.each { Z_l ->  actor {name(Z_l.kF);role(Z_l.Wra);sortorder(Z_l.hP);if (SKM) { thumb(Z_l.CE) }}};showtitle(n);episode(RE);season(xS);aired(airdate.format("yyyy-MM-dd"));fileinfo {streamdetails {target.mediaInfo.Video.each { XL ->  video {def uC = Float.parseFloat(XL.'Duration');codec(XL.'Format');micodec(XL.'Format');bitrate(XL.'BitRate');width(XL.'Width');height(XL.'Height');aspect(XL.'DisplayAspectRatio/String');aspectratio(XL.'DisplayAspectRatio/String');framerate(XL.'FrameRate');'default'(XL.'Default' == "Yes" ? "True" : "False");forced(XL.'Forced' == "Yes" ? "True" : "False");duration(XL.'Duration' ? (int) Math.floor(uC / 60000) : 0);durationinseconds(XL.'Duration' ? (int) Math.floor(uC / 1000) : 0)}};target.mediaInfo.Audio.each { aiv ->  audio {codec(aiv.'Format');micodec(aiv.'Format');language(aiv.'Language/String3');channels(aiv.'Channel(s)');samplingrate(aiv.'SamplingRate');'default'(aiv.'Default' == "Yes" ? "True" : "False");forced(aiv.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { iZD ->  subtitle {codec(iZD.'Format');micodec(iZD.'Format');width('0');height('0');language(iZD.'Language/String3');'default'(iZD.'Default' == "Yes" ? "True" : "False");forced(iZD.'Forced' == "Yes" ? "True" : "False")}}}}}}}