{ source, target, metadata ->  if (type.toString() != "Episode" && !f.video) {return null};def ZMI = target.dir;def Wnp = any{ s } { 0 };def iu = any{ e } { special };def AJ = 0;def uGL = null;try {if (db.TheTVDB?.id) {def Aw = "https://api.tvmaze.com";def bu = curl "$Aw/lookup/shows?thetvdb=${db.TheTVDB.id}";def mF = bu.id;uGL = curl "$Aw/shows/$mF/episodebynumber?season=$Wnp&number=$iu";AJ = uGL.id}} catch (Exception err) {};def GDD = "";def Qy = "en-US";def yx = null;def sx = new File("$home/.filebotsecrets.json");if (sx.exists()) {def mAU = new groovy.json.JsonSlurper().parseText(sx.text);GDD = mAU.GDD;Qy = mAU.language;yx = mAU.person_info_dir};def Qj = "https://api.themoviedb.org/3/tv/$id/season/$Wnp/episode/$iu";def DGk = ["accept": "application/json"];def fm = curl(DGk, "$Qj?language=$Qy&api_key=$GDD");def PRd = curl(DGk, "$Qj/external_ids?api_key=$GDD");def co = curl(DGk, "$Qj/credits?language=$Qy&api_key=$GDD");def mnG = curl(DGk, "$Qj/images?include_image_language=en%2Cnull&api_key=$GDD");def Ldh = (ZMI / target.nameWithoutExtension + "-thumb.jpg").toString();def JT = new File(Ldh);def WL = new File(Ldh.replace("-thumb",""));if (!(JT.exists() || WL.exists()) && mnG.stills.size() > 0) {def zw = "https://image.tmdb.org/t/p/original${mnG.stills[0].file_path}";system "curl", "-o", ZMI / target.nameWithoutExtension + "-thumb.jpg", zw};def TY = [];(co.cast + co.guest_stars).eachWithIndex { bqi, YfU ->  def Pfx = "$yx/${bqi.name[0]}/${bqi.name}";def JH = bqi.order ?: YfU + TY.size();TY << [Ii: bqi.name, Ssa: bqi.character, agc: JH, Pfx: "${Pfx}/folder.jpg"];if (yx) {def KhY = new File(Pfx);if (!KhY.exists()) {KhY.mkdirs();system "curl", "-o", "${Pfx}/folder.jpg", "https://image.tmdb.org/t/p/original${bqi.profile_path}"}}};def pUm = ZMI / target.nameWithoutExtension + ".nfo";XML(pUm) {mkp.xmlDeclaration(version: "1.0", encoding: "utf-8", standalone: "yes");episodedetails {plot(fm.overview);lockdata("false");dateadded(new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("UTC")));title(t);originaltitle(localize."${languages[0]}".t);rating(rating);try {year(airdate.format("yyyy"))} catch (Exception err) {};uniqueid(type: "tmdb", value: episode.id, 'default': "true", episode.id);tmdbid(episode.id);if (PRd?.imdb_id) {uniqueid(type: "imdb", value: PRd.imdb_id, PRd.imdb_id);imdbid(PRd.imdb_id)};if (PRd?.tvdb_id) {uniqueid(type: "tvdb", value: PRd.tvdb_id, PRd.tvdb_id);tvdbid(PRd.tvdb_id)};try {runtime(runtime)} catch (Exception err) {runtime(minutes)};try {if (db.AniDB?.episode?.id) {uniqueid(type: "anidb", value: db.AniDB.episode.id, db.AniDB.episode.id);anidbid(db.AniDB.episode.id)}} catch (Exception err) {};try {if (AJ) {uniqueid(type: "tvmaze", value: AJ, AJ);tvmazeid(AJ)}} catch (Exception err) {};if (JT.exists()) {art {poster(Ldh)}};TY.each { XG ->  actor {name(XG.Ii);role(XG.Ssa);sortorder(XG.agc);if (yx) { thumb(XG.Pfx) }}};showtitle(n);episode(iu);season(Wnp);try {aired(airdate.format("yyyy-MM-dd"))} catch (Exception err) {};fileinfo {streamdetails {target.mediaInfo.Video.each { Vz ->  video {def Lq = Float.parseFloat(Vz.'Duration');codec(Vz.'Format');micodec(Vz.'Format');bitrate(Vz.'BitRate');width(Vz.'Width');height(Vz.'Height');aspect(Vz.'DisplayAspectRatio/String');aspectratio(Vz.'DisplayAspectRatio/String');framerate(Vz.'FrameRate');'default'(Vz.'Default' == "Yes" ? "True" : "False");forced(Vz.'Forced' == "Yes" ? "True" : "False");duration(Vz.'Duration' ? (int) Math.floor(Lq / 60000) : 0);durationinseconds(Vz.'Duration' ? (int) Math.floor(Lq / 1000) : 0)}};target.mediaInfo.Audio.each { EIK ->  audio {codec(EIK.'Format');micodec(EIK.'Format');language(EIK.'Language/String3');channels(EIK.'Channel(s)');samplingrate(EIK.'SamplingRate');'default'(EIK.'Default' == "Yes" ? "True" : "False");forced(EIK.'Forced' == "Yes" ? "True" : "False")}};target.mediaInfo.Text.each { KX ->  subtitle {codec(KX.'Format');micodec(KX.'Format');width('0');height('0');language(KX.'Language/String3');'default'(KX.'Default' == "Yes" ? "True" : "False");forced(KX.'Forced' == "Yes" ? "True" : "False")}}}}}}}