{def KqA = { System.getProperty(it) };def k_E = KqA("os.name").toLowerCase().contains("windows");def ZNo = KqA("user.name");def qwY = "/run/media/${ZNo}";def Zm = k_E ? "H:/" : "$qwY/Videos";def Ei = [[JA: "Books", DO: "F:/", NpS: "$qwY/Books"],[JA: "Data", DO: "D:/", NpS: "$qwY/Data"],[JA: "Games", DO: "G:/", NpS: "$qwY/Games"],[JA: "Music", DO: "E:/", NpS: "$qwY/Music"],[JA: "Videos", DO: "H:/", NpS: "$qwY/Videos"]];def GG = (Ei.collect { it[k_E ? "DO" : "NpS"] as File }.sort { Zx, cS ->  Zx.exists() <=> cS.exists() ?: Zx.diskSpace <=> cS.diskSpace }).last();def Tj = Zm ?: GG;"$Tj/"}{"Videos/"}{def zlF = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def Mvc = "TheMovieDB::TV";def mZ = [[ 74180, Mvc],[ 93821, Mvc],[ 95897, Mvc],[220118, Mvc],[249891, Mvc],[271026, Mvc]];def Ova = [[236530, Mvc]];def UeZ = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def diZ = UeZ == "IMDb" ? "tt${id}" : id;def aZ = any { info.adult } { false };def Rx = mZ.find { it[0] == diZ && it[1] == UeZ } != null;def hbe = Ova.find { it[0] == diZ && it[1] == UeZ } != null;def wxb = info.Keywords.findAll { it in zlF } || Rx || aZ;wxb = hbe ? false : wxb;wxb ? "R18+ " : ""}{def xsH = ["CN", "JP", "KR", "KP", "TW", "HK"];def pA = ["aeni", "donghua", "anime"];def xy = any {anime} || info.Keywords.findAll { it in pA } || (xsH.contains(country) && genres =~ /Animation/);xy ? "Anime Movies/" : "Movies/"}{def Mvc = "TheMovieDB::TV";def co = [[kvu: 199928, QQk: "Nights With a Cat", MAA: Mvc],[kvu: 213830, QQk: "I Was Reincarnated as the 7th Prince", MAA: Mvc],[kvu: 232230, QQk: "Lord of the Mysteries", MAA: Mvc],[kvu: 248707, QQk: "Neko Oji The Guy That Got Reincarnated As a Cat", MAA: Mvc],[kvu: 270660, QQk: "Pochars", MAA: Mvc],[kvu: 277581, QQk: "Dekin no Mogura", MAA: Mvc],[kvu: 280038, QQk: "Apocalypse Bringer Mynoghra", MAA: Mvc],[kvu: 280078, QQk: "The All-devouring Whale Homecoming", MAA: Mvc],[kvu: 283704, QQk: "Fermat Kitchen", MAA: Mvc],[kvu: 283884, QQk: "Chuhai Lips", MAA: Mvc],[kvu: 288419, QQk: "Chikuwa Senki", MAA: Mvc]];def UeZ = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def diZ = UeZ == "IMDb" ? "tt${id}" : id;def pC = n;co.each {if (it.kvu == diZ && it.MAA == UeZ) {pC = it.QQk}};def Nrp = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def WJ = pC.replaceAll(Nrp.collect { "\\" + it }.join('|'), '');WJ = WJ.replaceAll(/(\s|\.)*$/, '');WJ}{" ("}{y}{")"}{"/"}{def WlK = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def ntl = WlK.find { ubI ->  fn.lower().contains(ubI.lower()) } ?: "";def CUi = any {ntl} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};CUi ? "[$CUi] " : ""}{def Mvc = "TheMovieDB::TV";def co = [[kvu: 199928, QQk: "Nights With a Cat", MAA: Mvc],[kvu: 213830, QQk: "I Was Reincarnated as the 7th Prince", MAA: Mvc],[kvu: 232230, QQk: "Lord of the Mysteries", MAA: Mvc],[kvu: 248707, QQk: "Neko Oji The Guy That Got Reincarnated As a Cat", MAA: Mvc],[kvu: 270660, QQk: "Pochars", MAA: Mvc],[kvu: 277581, QQk: "Dekin no Mogura", MAA: Mvc],[kvu: 280038, QQk: "Apocalypse Bringer Mynoghra", MAA: Mvc],[kvu: 280078, QQk: "The All-devouring Whale Homecoming", MAA: Mvc],[kvu: 283704, QQk: "Fermat Kitchen", MAA: Mvc],[kvu: 283884, QQk: "Chuhai Lips", MAA: Mvc],[kvu: 288419, QQk: "Chikuwa Senki", MAA: Mvc]];def UeZ = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def diZ = UeZ == "IMDb" ? "tt${id}" : id;def pC = n;co.each {if (it.kvu == diZ && it.MAA == UeZ) {pC = it.QQk}};def Nrp = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def WJ = pC.replaceAll(Nrp.collect { "\\" + it }.join('|'), '');WJ = WJ.replaceAll(/(\s|\.)*$/, '');WJ}{" ("}{y}{") ["}{def PG = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["FOD"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"],["INSTA", "INSTAGRAM"],["ANIMENOTANE"]];def Ci = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def mrC = ["DB"];def pZx = ["Ruri-Saizen"];def XEh = ["Erai-raws", "SubsPlease"];def hVo = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def OzN = any {def uVh = PG.find { EB ->  EB.find { Oq ->  fn.lower().contains(Oq.lower()) } }[0];uVh = uVh.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {uVh = uVh.replace(".WEBRip", "");uVh = uVh + ".WEBRip"} else {uVh = uVh + ".WEB-DL"};uVh} {source} {Ci.find { tD ->  group == tD || hVo == tD } ? "WEBRip" : ""} {mrC.find { tD ->  group == tD || hVo == tD } ? "BDRip" : ""} {pZx.find { tD ->  group == g__ || hVo == g__} ? "HDTVRip" : ""} {def TM = XEh.find { LL ->  group == LL || hVo == LL} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : TM} {vs} {""};OzN ? "$OzN " : ""}{def Ia = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $Ia, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def OUw = any { audioLanguages.size() } { 0 };def KgE = OUw > 2 ? " MULTi-AUD" : OUw > 1 ? " DUAL-AUD" : "";def bf = OUw > 5 ? audioLanguages.take(5) : audioLanguages;def dgx = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";KgE = OUw == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$KgE$dgx";KgE ? KgE + bf.ISO2.joining(" ", " (", "").upper() + (OUw > 5 ? " ...)" : ")") : ""}{def ye = text.language.collect {['zh-Hans': 'ZH-S','zh-Hant': 'ZH-T','ar-001': 'AR-MSA'].get(it,it).toUpperCase()}.unique();def mv = any { ye.size() } { 0 };def KgE = mv > 2 ? ", MULTi" : mv > 1 ? ", DUAL" : mv == 1 ? ", SUB" : null;def bf = mv > 5 ? ye.take(5) : ye;KgE ? KgE + bf.joining(" ", " (", "").upper() + (mv > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def zSG = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def tU = subt;zSG.values().each { oM -> if (tU.contains(oM)) {tU = tU.replace(oM, "")}};zSG.iso3b + tU}}{f.image ? "-thumb" : ""}