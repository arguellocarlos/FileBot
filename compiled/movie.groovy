{def Bg = { System.getProperty(it) };def IBJ = Bg("os.name").toLowerCase().contains("windows");def gg = Bg("user.name");def zoL = "/run/media/${gg}";def ZD = IBJ ? "H:/" : "$zoL/Videos";def Ob = [[VY: "Books", ti: "F:/", Hkf: "$zoL/Books"],[VY: "Data", ti: "D:/", Hkf: "$zoL/Data"],[VY: "Games", ti: "G:/", Hkf: "$zoL/Games"],[VY: "Music", ti: "E:/", Hkf: "$zoL/Music"],[VY: "Videos", ti: "H:/", Hkf: "$zoL/Videos"]];def EZZ = (Ob.collect { it[IBJ ? "ti" : "Hkf"] as File }.sort { gSv, VK ->  gSv.exists() <=> VK.exists() ?: gSv.diskSpace <=> VK.diskSpace }).last();def jk = ZD ?: EZZ;"$jk/"}{"Videos/"}{def ZJC = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def _bA = "TheMovieDB::TV";def HuV = [[ 74180, _bA],[ 93821, _bA],[ 95897, _bA],[220118, _bA],[249891, _bA],[271026, _bA]];def JG = [[236530, _bA]];def jYi = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def kdU = jYi == "IMDb" ? "tt${id}" : id;def BB = any { info.adult } { false };def vFO = HuV.find { it[0] == kdU && it[1] == jYi } != null;def YRb = JG.find { it[0] == kdU && it[1] == jYi } != null;def YI = info.Keywords.findAll { it in ZJC } || vFO || BB;YI = YRb ? false : YI;YI ? "R18+ " : ""}{def gom = ["CN", "JP", "KR", "KP", "TW", "HK"];def TaB = ["aeni", "donghua", "anime"];def kbC = any {anime} || info.Keywords.findAll { it in TaB } || (gom.contains(country) && genres =~ /Animation/);kbC ? "Anime Movies/" : "Movies/"}{def _bA = "TheMovieDB::TV";def OS = [[ukL: 199928, tf: "Nights With a Cat", zT: _bA],[ukL: 219816, tf: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", zT: _bA],[ukL: 248707, tf: "Neko Oji The Guy That Got Reincarnated As a Cat", zT: _bA],[ukL: 270657, tf: "Tono to Inu", zT: _bA],[ukL: 271003, tf: "Yandere Dark Elf", zT: _bA],[ukL: 274741, tf: "The Too-Perfect Saint", zT: _bA]];def jYi = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def kdU = jYi == "IMDb" ? "tt${id}" : id;def Nm = n;OS.each {if (it.ukL == kdU && it.zT == jYi) {Nm = it.tf}};def ApK = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def kUf = Nm.replaceAll(ApK.collect { "\\" + it }.join('|'), '');kUf = kUf.replaceAll(/(\s|\.)*$/, '');kUf}{" ("}{y}{")"}{"/"}{def xZ = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def Om = xZ.find { RR ->  fn.lower().contains(RR.lower()) } ?: "";def mW = any {Om} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};mW ? "[$mW] " : ""}{def _bA = "TheMovieDB::TV";def OS = [[ukL: 199928, tf: "Nights With a Cat", zT: _bA],[ukL: 219816, tf: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", zT: _bA],[ukL: 248707, tf: "Neko Oji The Guy That Got Reincarnated As a Cat", zT: _bA],[ukL: 270657, tf: "Tono to Inu", zT: _bA],[ukL: 271003, tf: "Yandere Dark Elf", zT: _bA],[ukL: 274741, tf: "The Too-Perfect Saint", zT: _bA]];def jYi = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def kdU = jYi == "IMDb" ? "tt${id}" : id;def Nm = n;OS.each {if (it.ukL == kdU && it.zT == jYi) {Nm = it.tf}};def ApK = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def kUf = Nm.replaceAll(ApK.collect { "\\" + it }.join('|'), '');kUf = kUf.replaceAll(/(\s|\.)*$/, '');kUf}{" ("}{y}{") ["}{def fdi = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LAFTEL", "LFTL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["WETV"]];def uc = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def tw = ["DB"];def ihL = ["Ruri-Saizen"];def QW_ = ["Erai-raws", "SubsPlease"];def qI = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def vKO = any {def eq = fdi.find { RQg ->  RQg.find { hPU ->  fn.lower().contains(hPU.lower()) } }[0];eq = eq.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {eq = eq.replace(".WEBRip", "");eq = eq + ".WEBRip"} else {eq = eq + ".WEB-DL"};eq} {source} {uc.find { fd ->  group == fd || qI == fd } ? "WEBRip" : ""} {tw.find { fd ->  group == fd || qI == fd } ? "BDRip" : ""} {ihL.find { fd ->  group == g__ || qI == g__} ? "HDTVRip" : ""} {def EXj = QW_.find { qP ->  group == qP || qI == qP} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : EXj} {vs} {""};vKO ? "$vKO " : ""}{def Bh = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $Bh, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def kJ = any { audioLanguages.size() } { 0 };def pxU = kJ > 2 ? " MULTi-AUD" : kJ > 1 ? " DUAL-AUD" : "";def HXD = kJ > 5 ? audioLanguages.take(5) : audioLanguages;def hox = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";pxU = kJ == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$pxU$hox";pxU ? pxU + HXD.ISO2.joining(" ", " (", "").upper() + (kJ > 5 ? " ...)" : ")") : ""}{def gAk = any { textLanguages.size() } { 0 };def pxU = gAk > 2 ? ", MULTi" : gAk > 1 ? ", DUAL" : gAk == 1 ? ", SUB" : null;def HXD = gAk > 5 ? textLanguages.take(5) : textLanguages;pxU ? pxU + HXD.ISO2.joining(" ", " (", "").upper() + (gAk > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def bK = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def HV = subt;bK.values().each { Ok -> if (HV.contains(Ok)) {HV = HV.replace(Ok, "")}};bK.iso3b + HV}}{f.image ? "-thumb" : ""}