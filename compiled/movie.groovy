{def NnG = { System.getProperty(it) };def lh = NnG("os.name").toLowerCase().contains("windows");def E_S = NnG("user.name");def JT = "/run/media/${E_S}";def QOx = lh ? "H:/" : "$JT/Videos";def sHV = [[DT: "Books", nJ: "F:/", eh: "$JT/Books"],[DT: "Data", nJ: "D:/", eh: "$JT/Data"],[DT: "Games", nJ: "G:/", eh: "$JT/Games"],[DT: "Music", nJ: "E:/", eh: "$JT/Music"],[DT: "Videos", nJ: "H:/", eh: "$JT/Videos"]];def nTb = (sHV.collect { it[lh ? "nJ" : "eh"] as File }.sort { Laz, UH ->  Laz.exists() <=> UH.exists() ?: Laz.diskSpace <=> UH.diskSpace }).last();def Qu = QOx ?: nTb;"$Qu/"}{"Videos/"}{def Oo = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def FSD = "TheMovieDB::TV";def Jw = [[ 74180, FSD],[ 93821, FSD],[ 95897, FSD],[220118, FSD],[249891, FSD],[271026, FSD]];def DI = [[236530, FSD]];def bXx = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def lY = bXx == "IMDb" ? "tt${id}" : id;def Tg_ = any { info.adult } { false };def Ecf = Jw.find { it[0] == lY && it[1] == bXx } != null;def rc = DI.find { it[0] == lY && it[1] == bXx } != null;def ki = info.Keywords.findAll { it in Oo } || Ecf || Tg_;ki = rc ? false : ki;ki ? "R18+ " : ""}{def MU = ["CN", "JP", "KR", "KP", "TW", "HK"];def WDt = ["aeni", "donghua", "anime"];def VT = any {anime} || info.Keywords.findAll { it in WDt } || (MU.contains(country) && genres =~ /Animation/);VT ? "Anime Movies/" : "Movies/"}{def FSD = "TheMovieDB::TV";def sZ = [[kUn: 199928, SKK: "Nights With a Cat", CVg: FSD],[kUn: 213830, SKK: "I Was Reincarnated as the 7th Prince", CVg: FSD],[kUn: 216489, SKK: "Tomica Heroes Job Labor (TV)", CVg: FSD],[kUn: 232230, SKK: "Lord of the Mysteries", CVg: FSD],[kUn: 238460, SKK: "Sumikko Gurashi Sorairo no Mainichi Tokubetsu-hen", CVg: FSD],[kUn: 248707, SKK: "Neko Oji The Guy That Got Reincarnated As a Cat", CVg: FSD],[kUn: 270660, SKK: "Pochars", CVg: FSD],[kUn: 277581, SKK: "Dekin no Mogura", CVg: FSD],[kUn: 280038, SKK: "Apocalypse Bringer Mynoghra", CVg: FSD],[kUn: 280405, SKK: "Fudanshi Shoukan", CVg: FSD],[kUn: 283884, SKK: "Chuhai Lips", CVg: FSD],[kUn: 288404, SKK: "The New Chronicles of Extraordinary Beings Preface", CVg: FSD],[kUn: 288419, SKK: "Chikuwa Senki", CVg: FSD],[kUn: 295625, SKK: "Marie Antoinette ni Tensei Shita", CVg: FSD]];def bXx = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def lY = bXx == "IMDb" ? "tt${id}" : id;def Rk = n;sZ.each {if (it.kUn == lY && it.CVg == bXx) {Rk = it.SKK}};def XKv = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def bfG = Rk.replaceAll(XKv.collect { "\\" + it }.join('|'), '');bfG = bfG.replaceAll(/(\s|\.)*$/, '');bfG}{" ("}{y}{")"}{"/"}{def jnl = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def DWG = jnl.find { KNL ->  fn.lower().contains(KNL.lower()) } ?: "";def YYK = any {DWG} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};YYK ? "[$YYK] " : ""}{def FSD = "TheMovieDB::TV";def sZ = [[kUn: 199928, SKK: "Nights With a Cat", CVg: FSD],[kUn: 213830, SKK: "I Was Reincarnated as the 7th Prince", CVg: FSD],[kUn: 216489, SKK: "Tomica Heroes Job Labor (TV)", CVg: FSD],[kUn: 232230, SKK: "Lord of the Mysteries", CVg: FSD],[kUn: 238460, SKK: "Sumikko Gurashi Sorairo no Mainichi Tokubetsu-hen", CVg: FSD],[kUn: 248707, SKK: "Neko Oji The Guy That Got Reincarnated As a Cat", CVg: FSD],[kUn: 270660, SKK: "Pochars", CVg: FSD],[kUn: 277581, SKK: "Dekin no Mogura", CVg: FSD],[kUn: 280038, SKK: "Apocalypse Bringer Mynoghra", CVg: FSD],[kUn: 280405, SKK: "Fudanshi Shoukan", CVg: FSD],[kUn: 283884, SKK: "Chuhai Lips", CVg: FSD],[kUn: 288404, SKK: "The New Chronicles of Extraordinary Beings Preface", CVg: FSD],[kUn: 288419, SKK: "Chikuwa Senki", CVg: FSD],[kUn: 295625, SKK: "Marie Antoinette ni Tensei Shita", CVg: FSD]];def bXx = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def lY = bXx == "IMDb" ? "tt${id}" : id;def Rk = n;sZ.each {if (it.kUn == lY && it.CVg == bXx) {Rk = it.SKK}};def XKv = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def bfG = Rk.replaceAll(XKv.collect { "\\" + it }.join('|'), '');bfG = bfG.replaceAll(/(\s|\.)*$/, '');bfG}{" ("}{y}{") ["}{def Yt = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["CTHP"],["FOD"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"],["INSTA", "INSTAGRAM"],["ANIMENOTANE"]];def _wy = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def PIH = ["DB"];def CSm = ["Ruri-Saizen"];def bdK = ["Erai-raws", "SubsPlease"];def At = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def XH = any {def loc = Yt.find { Nv ->  Nv.find { ad ->  fn.lower().contains(ad.lower()) } }[0];loc = loc.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {loc = loc.replace(".WEBRip", "");loc = loc + ".WEBRip"} else {loc = loc + ".WEB-DL"};loc} {source} {_wy.find { RU ->  group == RU || At == RU } ? "WEBRip" : ""} {PIH.find { RU ->  group == RU || At == RU } ? "BDRip" : ""} {CSm.find { RU ->  group == g__ || At == g__} ? "HDTVRip" : ""} {def RQP = bdK.find { EtD ->  group == EtD || At == EtD} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : RQP} {vs} {""};XH ? "$XH " : ""}{def sM = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $sM, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def hvL = any { audioLanguages.size() } { 0 };def dZ = hvL > 2 ? " MULTi-AUD" : hvL > 1 ? " DUAL-AUD" : "";def LF = hvL > 5 ? audioLanguages.take(5) : audioLanguages;def CiM = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";dZ = hvL == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$dZ$CiM";dZ ? dZ + LF.ISO2.joining(" ", " (", "").upper() + (hvL > 5 ? " ...)" : ")") : ""}{def uF = text.language.collect {['zh-Hans': 'ZH-S','zh-Hant': 'ZH-T','ar-001': 'AR-MSA'].get(it,it).toUpperCase()}.unique();def uV = any { uF.size() } { 0 };def dZ = uV > 2 ? ", MULTi" : uV > 1 ? ", DUAL" : uV == 1 ? ", SUB" : null;def LF = uV > 5 ? uF.take(5) : uF;dZ ? dZ + LF.joining(" ", " (", "").upper() + (uV > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def CB = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def ij = subt;CB.values().each { laJ -> if (ij.contains(laJ)) {ij = ij.replace(laJ, "")}};CB.iso3b + ij}}{f.image ? "-thumb" : ""}