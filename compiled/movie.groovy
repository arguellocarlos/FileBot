{def khD = { System.getProperty(it) };def nfq = khD("os.name").toLowerCase().contains("windows");def Yj_ = khD("user.name");def Ri = "/run/media/${Yj_}";def Kt = nfq ? "H:/" : "$Ri/Videos";def BOE = [[NS: "Books", uEv: "F:/", HZz: "$Ri/Books"],[NS: "Data", uEv: "D:/", HZz: "$Ri/Data"],[NS: "Games", uEv: "G:/", HZz: "$Ri/Games"],[NS: "Music", uEv: "E:/", HZz: "$Ri/Music"],[NS: "Videos", uEv: "H:/", HZz: "$Ri/Videos"]];def WW = (BOE.collect { it[nfq ? "uEv" : "HZz"] as File }.sort { ez_, vhl ->  ez_.exists() <=> vhl.exists() ?: ez_.diskSpace <=> vhl.diskSpace }).last();def gVs = Kt ?: WW;"$gVs/"}{"Videos/"}{def cw = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity"];def uI = "TheMovieDB::TV";def ugk = [[ 74180, uI],[ 93821, uI],[ 95897, uI],[220118, uI],[271026, uI]];def HxN = [[236530, uI]];def pDe = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def wI = pDe == "IMDb" ? "tt${id}" : id;def HU = any { info.adult } { false };def Vlk = ugk.find { it[0] == wI && it[1] == pDe } != null;def ffi = HxN.find { it[0] == wI && it[1] == pDe } != null;def Id = info.Keywords.findAll { it in cw } || Vlk || HU;Id = ffi ? false : Id;Id ? "R18+ " : ""}{def Ip = ["CN", "JP", "KR", "KP", "TW", "HK"];def ts = ["aeni", "donghua", "anime"];def lKp = any {anime} || info.Keywords.findAll { it in ts } || (Ip.contains(country) && genres =~ /Animation/);lKp ? "Anime Movies/" : "Movies/"}{def uI = "TheMovieDB::TV";def TxR = [[rGR: 68854, vgo: "From Me to You", dvY: uI],[rGR: 219816, vgo: "Fate/Grand Order: Fujimaru Ritsuka Doesn't Get It", dvY: uI],[rGR: 245561, vgo: "Okitsura", dvY: uI],[rGR: 248707, vgo: "Neko Oji The Guy That Got Reincarnated As a Cat", dvY: uI],[rGR: 259559, vgo: "Headhunted to Another World", dvY: uI],[rGR: 276204, vgo: "Bogus Skill Fruitmaster", dvY: uI]];def pDe = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def wI = pDe == "IMDb" ? "tt${id}" : id;def NFb = n;TxR.each {if (it.rGR == wI && it.dvY == pDe) {NFb = it.vgo}};def Pj = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def UyM = NFb.replaceAll(Pj.collect { "\\" + it }.join('|'), '');UyM = UyM.replaceAll(/(\s|\.)*$/, '');UyM}{" ("}{y}{")"}{"/"}{def WA = ["Alqanime","BlackLuster","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","Samehadaku"];def Lj = WA.find { Lf ->  fn.lower().contains(Lf.lower()) } ?: "";def hAc = any {(fn =~ /^\[(.*?)\]/)[0][1]} {Lj} {group} {""};hAc ? "[$hAc] " : ""}{def uI = "TheMovieDB::TV";def TxR = [[rGR: 68854, vgo: "From Me to You", dvY: uI],[rGR: 219816, vgo: "Fate/Grand Order: Fujimaru Ritsuka Doesn't Get It", dvY: uI],[rGR: 245561, vgo: "Okitsura", dvY: uI],[rGR: 248707, vgo: "Neko Oji The Guy That Got Reincarnated As a Cat", dvY: uI],[rGR: 259559, vgo: "Headhunted to Another World", dvY: uI],[rGR: 276204, vgo: "Bogus Skill Fruitmaster", dvY: uI]];def pDe = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def wI = pDe == "IMDb" ? "tt${id}" : id;def NFb = n;TxR.each {if (it.rGR == wI && it.dvY == pDe) {NFb = it.vgo}};def Pj = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def UyM = NFb.replaceAll(Pj.collect { "\\" + it }.join('|'), '');UyM = UyM.replaceAll(/(\s|\.)*$/, '');UyM}{" ("}{y}{")"}{" ["}{def Iw = [["ABEMA"],["ADN"],["BBC"],["BILI", "B-Global", "BiliIntl", "B-Site", "BiliCN"],["COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LAFTEL", "LFTL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["SHAHID"],["TVER"],["UNEXT"],["WETV"],["YTB", "YT.WEB-DL", "YOUTUBE"]];def qf = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs", "SAMEHADAKU"];def dMw = ["Erai-raws", "SubsPlease"];def wGJ = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def ZZ = any {def Dlp = Iw.find { lER ->  lER.find { Rvg ->  fn.lower().contains(Rvg.lower()) } }[0];Dlp = Dlp.replace(".WEB-DL", "");Dlp ? "${Dlp}.WEB-DL" : ""} {source} {qf.find { OF ->  group == OF || wGJ == OF } ? "WEBRip" : ""} {def cA = dMw.find { UvL ->  group == UvL || wGJ == UvL} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : cA} {vs} {""};ZZ ? "$ZZ " : ""}{def amJ = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $amJ, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def gL = " Dub";def kiO = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : gL;kiO = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : kiO;kiO}{def rq = any { audioLanguages.size() } { 0 };def kiO = rq > 2 ? " MAud" : rq > 1 ? " DAud" : null;def tQ = rq > 5 ? audioLanguages.take(5) : audioLanguages;kiO ? kiO + tQ.joining(" ", " (", "").upper() + (rq > 5 ? " ...)" : ")") : ""}{def eUh = any { textLanguages.size() } { 0 };def kiO = eUh > 2 ? ", MSub" : eUh > 1 ? ", DSub" : null;def tQ = eUh > 5 ? textLanguages.take(5) : textLanguages;kiO ? kiO + tQ.joining(" ", " (", "").upper() + (eUh > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def re = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def ovm = subt;re.values().each { gG -> if (ovm.contains(gG)) {ovm = ovm.replace(gG, "")}};re.iso3b + ovm}}{f.image ? "-thumb" : ""}