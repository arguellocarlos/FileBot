{def we = { System.getProperty(it) };def mH = we("os.name").toLowerCase().contains("windows");def EQ = we("user.name");def UP = "/run/media/${EQ}";def NF = mH ? "H:/" : "$UP/Videos";def yI = [[Qk: "Books", jtx: "F:/", bU: "$UP/Books"],[Qk: "Data", jtx: "D:/", bU: "$UP/Data"],[Qk: "Games", jtx: "G:/", bU: "$UP/Games"],[Qk: "Music", jtx: "E:/", bU: "$UP/Music"],[Qk: "Videos", jtx: "H:/", bU: "$UP/Videos"]];def rDf = (yI.collect { it[mH ? "jtx" : "bU"] as File }.sort { McG, GX ->  McG.exists() <=> GX.exists() ?: McG.diskSpace <=> GX.diskSpace }).last();def dJI = NF ?: rDf;"$dJI/"}{"Videos/"}{def YK = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def CIT = "TheMovieDB::TV";def YTx = [[ 74180, CIT],[ 93821, CIT],[ 95897, CIT],[220118, CIT],[249891, CIT],[271026, CIT]];def Xfl = [[236530, CIT]];def iF = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def CP = iF == "IMDb" ? "tt${id}" : id;def vaw = any { info.adult } { false };def axT = YTx.find { it[0] == CP && it[1] == iF } != null;def ZS = Xfl.find { it[0] == CP && it[1] == iF } != null;def glz = info.Keywords.findAll { it in YK } || axT || vaw;glz = ZS ? false : glz;glz ? "R18+ " : ""}{def EW = ["CN", "JP", "KR", "KP", "TW", "HK"];def Bv = ["aeni", "donghua", "anime"];def eeC = any {anime} || info.Keywords.findAll { it in Bv } || (EW.contains(country) && genres =~ /Animation/);eeC ? "Anime Movies/" : "Movies/"}{def CIT = "TheMovieDB::TV";def qWT = [[oc: 199928, oo: "Nights With a Cat", BmF: CIT],[oc: 219816, oo: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", BmF: CIT],[oc: 248707, oo: "Neko Oji The Guy That Got Reincarnated As a Cat", BmF: CIT],[oc: 271003, oo: "Yandere Dark Elf", BmF: CIT],[oc: 274741, oo: "The Too-Perfect Saint", BmF: CIT],[oc: 275623, oo: "Chuzenji-sensei", BmF: CIT],[oc: 281623, oo: "SHIROHIYO", BmF: CIT],[oc: 288419, oo: "Chikuwa Senki", BmF: CIT]];def iF = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def CP = iF == "IMDb" ? "tt${id}" : id;def BQK = n;qWT.each {if (it.oc == CP && it.BmF == iF) {BQK = it.oo}};def jWU = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def VGx = BQK.replaceAll(jWU.collect { "\\" + it }.join('|'), '');VGx = VGx.replaceAll(/(\s|\.)*$/, '');VGx}{" ("}{y}{")"}{"/"}{def OHv = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def PKb = OHv.find { goj ->  fn.lower().contains(goj.lower()) } ?: "";def riU = any {PKb} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};riU ? "[$riU] " : ""}{def CIT = "TheMovieDB::TV";def qWT = [[oc: 199928, oo: "Nights With a Cat", BmF: CIT],[oc: 219816, oo: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", BmF: CIT],[oc: 248707, oo: "Neko Oji The Guy That Got Reincarnated As a Cat", BmF: CIT],[oc: 271003, oo: "Yandere Dark Elf", BmF: CIT],[oc: 274741, oo: "The Too-Perfect Saint", BmF: CIT],[oc: 275623, oo: "Chuzenji-sensei", BmF: CIT],[oc: 281623, oo: "SHIROHIYO", BmF: CIT],[oc: 288419, oo: "Chikuwa Senki", BmF: CIT]];def iF = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def CP = iF == "IMDb" ? "tt${id}" : id;def BQK = n;qWT.each {if (it.oc == CP && it.BmF == iF) {BQK = it.oo}};def jWU = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def VGx = BQK.replaceAll(jWU.collect { "\\" + it }.join('|'), '');VGx = VGx.replaceAll(/(\s|\.)*$/, '');VGx}{" ("}{y}{") ["}{def mD = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"],["INSTA", "INSTAGRAM"],["ANIMENOTANE"]];def kcs = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def AZ = ["DB"];def RQl = ["Ruri-Saizen"];def LJ = ["Erai-raws", "SubsPlease"];def pH = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def OHf = any {def iaB = mD.find { bQ_ ->  bQ_.find { CKw ->  fn.lower().contains(CKw.lower()) } }[0];iaB = iaB.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {iaB = iaB.replace(".WEBRip", "");iaB = iaB + ".WEBRip"} else {iaB = iaB + ".WEB-DL"};iaB} {source} {kcs.find { hP ->  group == hP || pH == hP } ? "WEBRip" : ""} {AZ.find { hP ->  group == hP || pH == hP } ? "BDRip" : ""} {RQl.find { hP ->  group == g__ || pH == g__} ? "HDTVRip" : ""} {def wVY = LJ.find { sR ->  group == sR || pH == sR} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : wVY} {vs} {""};OHf ? "$OHf " : ""}{def ZK = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $ZK, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def vEv = any { audioLanguages.size() } { 0 };def Jnc = vEv > 2 ? " MULTi-AUD" : vEv > 1 ? " DUAL-AUD" : "";def pD = vEv > 5 ? audioLanguages.take(5) : audioLanguages;def kt = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";Jnc = vEv == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$Jnc$kt";Jnc ? Jnc + pD.ISO2.joining(" ", " (", "").upper() + (vEv > 5 ? " ...)" : ")") : ""}{def kq = text.language.collect {['zh-Hans': 'ZH-S','zh-Hant': 'ZH-T'].get(it,it).toUpperCase()}.unique();def iLZ = any { kq.size() } { 0 };def Jnc = iLZ > 2 ? ", MULTi" : iLZ > 1 ? ", DUAL" : iLZ == 1 ? ", SUB" : null;def pD = iLZ > 5 ? kq.take(5) : kq;Jnc ? Jnc + pD.joining(" ", " (", "").upper() + (iLZ > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def AY = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def Qr = subt;AY.values().each { uwX -> if (Qr.contains(uwX)) {Qr = Qr.replace(uwX, "")}};AY.iso3b + Qr}}{f.image ? "-thumb" : ""}