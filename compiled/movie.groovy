{def Pl = {System.getProperty(it)};def kNC = Pl("os.name").toLowerCase().contains("windows");def uo = Pl("user.name");def oFx = "/run/media/${uo}";def jnq = "";def HwN = [[cK: "Books", Dq: "F:/", JM: "$oFx/Books"],[cK: "Data", Dq: "D:/", JM: "$oFx/Data"],[cK: "Games", Dq: "G:/", JM: "$oFx/Games"],[cK: "Music", Dq: "E:/", JM: "$oFx/Music"],[cK: "Videos", Dq: "H:/", JM: "$oFx/Videos"]];def FEO = (HwN.collect {it[kNC ? "Dq" : "JM"] as File};.sort {first, second -> first.exists() <=> second.exists() ?: first.diskSpace <=> second.diskSpace}).last().path;def OJ = jnq ?: FEO;"$OJ/"}{"Videos/"}{def zjJ = ["boys' love (bl)","gay theme","yaoi","yuri","lesbian","hentai", "sex","lgbt","explicit","adult animation","adult content"];def TAV = "TheMovieDB::TV";def DEB = [[271026, TAV],[220118, TAV],[74180, TAV]];def RyB = [[236530, TAV]];def Bk = any {info.database} {id == tmdbid ? "TheMovieDB" : "IMDb"};def RBq = Bk == "IMDb" ? "tt${id}" : id;def ECI = any {info.adult} {false};def ILP = DEB.find {it[0] == RBq && it[1] == Bk} != null;def Aj = RyB.find {it[0] == RBq && it[1] == Bk} != null;def fXA = info.Keywords.findAll {it in zjJ} || ILP || ECI;fXA = Aj ? false : fXA;fXA ? "R18+ " : ""}{def lr = ["CN","JP","KR","KP","TW","HK"];def DGh = ["aeni","donghua","anime"];def eW = (any {anime} ||info.Keywords.findAll {it in DGh} ||(lr.contains(country) && genres.contains("Animation")));eW ? "Anime Movies/" : "Movies/"}{def TAV = "TheMovieDB::TV";def VIx = [[HZ: 68854, xJ: "From Me to You", lsa: TAV],[HZ: 94904, xJ: "My Next Life as a Villainess", lsa: TAV],[HZ: 229743, xJ: "VTuber Legend", lsa: TAV],[HZ: 234538, xJ: "Demon Lord 2099", lsa: TAV],[HZ: 237045, xJ: "Cherry Magic!", lsa: TAV],[HZ: 240633, xJ: "A Journey Through Another World", lsa: TAV],[HZ: 245285, xJ: "Failure Frame", lsa: TAV],[HZ: 271026, xJ: "Taisho Era Contract Marriage", lsa: TAV]];def Bk = any {info.database} {id == tmdbid ? "TheMovieDB" : "IMDb"};def RBq = Bk == "IMDb" ? "tt${id}" : id;def tW = n;VIx.each {if (it.HZ == RBq && it.lsa == Bk) {tW = it.xJ}};def DFq = ['\\','/',':','*','?','"','<','>','|'];def CNq = tW.replaceAll(DFq.collect {"\\" + it}.join('|'), '');CNq = CNq.replaceAll(/(\s|\.)*$/, '');CNq}{" ("}{y}{")"}{def Bk = id == tmdbid ? "TheMovieDB" : "IMDb";def RQk = ["TheMovieDB": "tmdbid","IMDb": "imdbid"];def DT = RQk[Bk];def RBq = Bk == "IMDb" ? "tt${id}" : id;" [${DT}-${RBq}]/"}{def Nw = ["Alqanime","BlackLuster","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws"];def zH = Nw.find {groupName ->  fn.contains(groupName)} ?: "";def Za = any {(fn =~ /^\[(.*?)\]/)[0][1]} {zH} {group} {""};Za ? "[$Za] " : ""}{def TAV = "TheMovieDB::TV";def VIx = [[HZ: 68854, xJ: "From Me to You", lsa: TAV],[HZ: 94904, xJ: "My Next Life as a Villainess", lsa: TAV],[HZ: 229743, xJ: "VTuber Legend", lsa: TAV],[HZ: 234538, xJ: "Demon Lord 2099", lsa: TAV],[HZ: 237045, xJ: "Cherry Magic!", lsa: TAV],[HZ: 240633, xJ: "A Journey Through Another World", lsa: TAV],[HZ: 245285, xJ: "Failure Frame", lsa: TAV],[HZ: 271026, xJ: "Taisho Era Contract Marriage", lsa: TAV]];def Bk = any {info.database} {id == tmdbid ? "TheMovieDB" : "IMDb"};def RBq = Bk == "IMDb" ? "tt${id}" : id;def tW = n;VIx.each {if (it.HZ == RBq && it.lsa == Bk) {tW = it.xJ}};def DFq = ['\\','/',':','*','?','"','<','>','|'];def CNq = tW.replaceAll(DFq.collect {"\\" + it}.join('|'), '');CNq = CNq.replaceAll(/(\s|\.)*$/, '');CNq}{" ("}{y}{")"}{" ["}{def JC = [["ABEMA"],["ADN"],["BILI","B-Global","BiliIntl","B-Site","BiliCN"],["HIDIVE","HIDI.WEB-DL"],["IQIYI","IQ.WEB-DL"],["LAFTEL","LFTL"],["MW.WEB-DL"],["NF.WEB-DL","NF WEB"],["SHAHID"],["TVER"],["UNEXT"],["WETV"],["YT.WEB-DL","YOUTUBE","YTB"]];def IXJ = ["ASW","Judas","JRx7","EMBER","KawaSubs","GuodongSubs"];def xvQ = ["Erai-raws","SubsPlease"];def Ra = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def RG = any {def OlF = JC.find {idx -> idx.find {known -> fn.lower().contains(known.lower())}}[0];OlF = OlF.replace(".WEB-DL", "");OlF ? "${OlF}.WEB-DL" : ""} {source} {IXJ.find {g_ ->  group == g_ || Ra == g_} ? "WEBRip" : ""} {def JtY = xvQ.find {r_ ->  group == r_ || Ra == r_} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : JtY} {vs} {""};RG ? "$RG " : ""}{def gZ = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $gZ, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def dgJ = " Dub";def VVN = audioLanguages.any{it.ISO3B == language.ISO3B} ? "" : dgJ;VVN = audioLanguages.size() == 1 && audioLanguages.any{it.ISO3B == "und"} ? "" : VVN;VVN}{def pw = any {audioLanguages.size()} {0};def VVN = pw > 2 ? " MAud" : pw > 1 ? " DAud" : null;def yv = pw > 5 ? audioLanguages.take(5) : audioLanguages;VVN ? VVN + yv.joining(" ", " (", "").upper() + (pw > 5 ? " ...)" : ")") : ""}{def tR = any {textLanguages.size()} {0};def VVN = tR > 2 ? ", MSub" : tR > 1 ? ", DSub" : null;def yv = tR > 5 ? textLanguages.take(5) : textLanguages;VVN ? VVN + yv.joining(" ", " (", "").upper() + (tR > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def HVK = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def RF = subt;HVK.values().each {code -> if (RF.contains(code)) {RF = RF.replace(code, "")}};HVK.iso3b + RF}}{f.image ? "-thumb" : ""}