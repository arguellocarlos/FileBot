{def eA = { System.getProperty(it) };def YEJ = eA("os.name").toLowerCase().contains("windows");def Uy = eA("user.name");def Sk = "/run/media/${Uy}";def JGO = YEJ ? "H:/" : "$Sk/Videos";def OTW = [[QZ: "Books", hsC: "F:/", JL: "$Sk/Books"],[QZ: "Data", hsC: "D:/", JL: "$Sk/Data"],[QZ: "Games", hsC: "G:/", JL: "$Sk/Games"],[QZ: "Music", hsC: "E:/", JL: "$Sk/Music"],[QZ: "Videos", hsC: "H:/", JL: "$Sk/Videos"]];def bzO = (OTW.collect { it[YEJ ? "hsC" : "JL"] as File }.sort { KcI, C_Q ->  KcI.exists() <=> C_Q.exists() ?: KcI.diskSpace <=> C_Q.diskSpace }).last();def KO = JGO ?: bzO;"$KO/"}{"Videos/"}{def LmX = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content"];def _kA = "TheMovieDB::TV";def Ap = [[271026, _kA],[220118, _kA],[ 74180, _kA]];def Mi = [[236530, _kA]];def tG = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def M_ = tG == "IMDb" ? "tt${id}" : id;def qQ = any { info.adult } { false };def ZC = Ap.find { it[0] == M_ && it[1] == tG } != null;def VI = Mi.find { it[0] == M_ && it[1] == tG } != null;def TEQ = info.Keywords.findAll { it in LmX } || ZC || qQ;TEQ = VI ? false : TEQ;TEQ ? "R18+ " : ""}{def mg = ["CN", "JP", "KR", "KP", "TW", "HK"];def EkN = ["aeni", "donghua", "anime"];def QMB = any {anime} || info.Keywords.findAll { it in EkN } || (mg.contains(country) && genres =~ /Animation/);QMB ? "Anime Movies/" : "Movies/"}{def _kA = "TheMovieDB::TV";def wI = [[mn: 68854, zyt: "From Me to You", lF: _kA],[mn: 94904, zyt: "My Next Life as a Villainess", lF: _kA],[mn: 229743, zyt: "VTuber Legend", lF: _kA],[mn: 234538, zyt: "Demon Lord 2099", lF: _kA],[mn: 237045, zyt: "Cherry Magic!", lF: _kA],[mn: 240633, zyt: "A Journey Through Another World", lF: _kA],[mn: 245285, zyt: "Failure Frame", lF: _kA],[mn: 271026, zyt: "Taisho Era Contract Marriage", lF: _kA]];def tG = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def M_ = tG == "IMDb" ? "tt${id}" : id;def qz = n;wI.each {if (it.mn == M_ && it.lF == tG) {qz = it.zyt}};def JO = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Pc = qz.replaceAll(JO.collect { "\\" + it }.join('|'), '');Pc = Pc.replaceAll(/(\s|\.)*$/, '');Pc}{" ("}{y}{")"}{def tG = id == tmdbid ? "TheMovieDB" : "IMDb";def jM = ["TheMovieDB": "tmdbid","IMDb": "imdbid"];def Jc = jM[tG];def M_ = tG == "IMDb" ? "tt${id}" : id;" [${Jc}-${M_}]/"}{def IQB = ["Alqanime","BlackLuster","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws"];def _H = IQB.find { Yfd ->  fn.contains(Yfd) } ?: "";def xw = any {(fn =~ /^\[(.*?)\]/)[0][1]} {_H} {group} {""};xw ? "[$xw] " : ""}{def _kA = "TheMovieDB::TV";def wI = [[mn: 68854, zyt: "From Me to You", lF: _kA],[mn: 94904, zyt: "My Next Life as a Villainess", lF: _kA],[mn: 229743, zyt: "VTuber Legend", lF: _kA],[mn: 234538, zyt: "Demon Lord 2099", lF: _kA],[mn: 237045, zyt: "Cherry Magic!", lF: _kA],[mn: 240633, zyt: "A Journey Through Another World", lF: _kA],[mn: 245285, zyt: "Failure Frame", lF: _kA],[mn: 271026, zyt: "Taisho Era Contract Marriage", lF: _kA]];def tG = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def M_ = tG == "IMDb" ? "tt${id}" : id;def qz = n;wI.each {if (it.mn == M_ && it.lF == tG) {qz = it.zyt}};def JO = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Pc = qz.replaceAll(JO.collect { "\\" + it }.join('|'), '');Pc = Pc.replaceAll(/(\s|\.)*$/, '');Pc}{" ("}{y}{")"}{" ["}{def dp = [["ABEMA"],["ADN"],["BILI", "B-Global", "BiliIntl", "B-Site", "BiliCN"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["LAFTEL", "LFTL"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["SHAHID"],["TVER"],["UNEXT"],["WETV"],["YT.WEB-DL", "YOUTUBE", "YTB"]];def hk = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs"];def RK = ["Erai-raws", "SubsPlease"];def cU = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def sV = any {def rE = dp.find { RrE ->  RrE.find { EFx ->  fn.lower().contains(EFx.lower()) } }[0];rE = rE.replace(".WEB-DL", "");rE ? "${rE}.WEB-DL" : ""} {} {source} {hk.find { Uj ->  group == Uj || cU == Uj } ? "WEBRip" : ""} {def TFg = RK.find { _A ->  group == _A || cU == _A} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : TFg} {vs} {""};sV ? "$sV " : ""}{def tKF = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $tKF, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def Ene = " Dub";def dtT = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : Ene;dtT = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : dtT;dtT}{def kWD = any { audioLanguages.size() } { 0 };def dtT = kWD > 2 ? " MAud" : kWD > 1 ? " DAud" : null;def dG = kWD > 5 ? audioLanguages.take(5) : audioLanguages;dtT ? dtT + dG.joining(" ", " (", "").upper() + (kWD > 5 ? " ...)" : ")") : ""}{def gT = any { textLanguages.size() } { 0 };def dtT = gT > 2 ? ", MSub" : gT > 1 ? ", DSub" : null;def dG = gT > 5 ? textLanguages.take(5) : textLanguages;dtT ? dtT + dG.joining(" ", " (", "").upper() + (gT > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def sSP = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def BX = subt;sSP.values().each { rjQ -> if (BX.contains(rjQ)) {BX = BX.replace(rjQ, "")}};sSP.iso3b + BX}}{f.image ? "-thumb" : ""}