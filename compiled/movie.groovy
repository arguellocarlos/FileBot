{def zEa = { System.getProperty(it) };def Dzv = zEa("os.name").toLowerCase().contains("windows");def qo = zEa("user.name");def QdE = "/run/media/${qo}";def Xk = Dzv ? "H:/" : "$QdE/Videos";def fQ = [[NrQ: "Books", _mQ: "F:/", XW: "$QdE/Books"],[NrQ: "Data", _mQ: "D:/", XW: "$QdE/Data"],[NrQ: "Games", _mQ: "G:/", XW: "$QdE/Games"],[NrQ: "Music", _mQ: "E:/", XW: "$QdE/Music"],[NrQ: "Videos", _mQ: "H:/", XW: "$QdE/Videos"]];def jr = (fQ.collect { it[Dzv ? "_mQ" : "XW"] as File }.sort { xe, mE ->  xe.exists() <=> mE.exists() ?: xe.diskSpace <=> mE.diskSpace }).last();def L_Y = Xk ?: jr;"$L_Y/"}{"Videos/"}{def fd = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def Mq = "TheMovieDB::TV";def RR = [[ 74180, Mq],[ 93821, Mq],[ 95897, Mq],[220118, Mq],[249891, Mq],[271026, Mq]];def kL = [[236530, Mq]];def YHs = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def pJx = YHs == "IMDb" ? "tt${id}" : id;def eW = any { info.adult } { false };def ff = RR.find { it[0] == pJx && it[1] == YHs } != null;def oFX = kL.find { it[0] == pJx && it[1] == YHs } != null;def TiD = info.Keywords.findAll { it in fd } || ff || eW;TiD = oFX ? false : TiD;TiD ? "R18+ " : ""}{def Fg = ["CN", "JP", "KR", "KP", "TW", "HK"];def UQT = ["aeni", "donghua", "anime"];def OQ = any {anime} || info.Keywords.findAll { it in UQT } || (Fg.contains(country) && genres =~ /Animation/);OQ ? "Anime Movies/" : "Movies/"}{def Mq = "TheMovieDB::TV";def xI = [[pOd: 199928, AM: "Nights With a Cat", Lh: Mq],[pOd: 248707, AM: "Neko Oji The Guy That Got Reincarnated As a Cat", Lh: Mq],[pOd: 270660, AM: "Pochars", Lh: Mq],[pOd: 280078, AM: "The All-devouring Whale Homecoming", Lh: Mq],[pOd; 283884: AM: "Chuhai Lips", Lh: Mq],[pOd: 288419, AM: "Chikuwa Senki", Lh: Mq]];def YHs = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def pJx = YHs == "IMDb" ? "tt${id}" : id;def uUV = n;xI.each {if (it.pOd == pJx && it.Lh == YHs) {uUV = it.AM}};def pU = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def D_E = uUV.replaceAll(pU.collect { "\\" + it }.join('|'), '');D_E = D_E.replaceAll(/(\s|\.)*$/, '');D_E}{" ("}{y}{")"}{"/"}{def zH = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def k_O = zH.find { Kq ->  fn.lower().contains(Kq.lower()) } ?: "";def SVn = any {k_O} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};SVn ? "[$SVn] " : ""}{def Mq = "TheMovieDB::TV";def xI = [[pOd: 199928, AM: "Nights With a Cat", Lh: Mq],[pOd: 248707, AM: "Neko Oji The Guy That Got Reincarnated As a Cat", Lh: Mq],[pOd: 270660, AM: "Pochars", Lh: Mq],[pOd: 280078, AM: "The All-devouring Whale Homecoming", Lh: Mq],[pOd; 283884: AM: "Chuhai Lips", Lh: Mq],[pOd: 288419, AM: "Chikuwa Senki", Lh: Mq]];def YHs = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def pJx = YHs == "IMDb" ? "tt${id}" : id;def uUV = n;xI.each {if (it.pOd == pJx && it.Lh == YHs) {uUV = it.AM}};def pU = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def D_E = uUV.replaceAll(pU.collect { "\\" + it }.join('|'), '');D_E = D_E.replaceAll(/(\s|\.)*$/, '');D_E}{" ("}{y}{") ["}{def vYk = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["FOD"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"],["INSTA", "INSTAGRAM"],["ANIMENOTANE"]];def zlJ = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def tMX = ["DB"];def jJE = ["Ruri-Saizen"];def rSg = ["Erai-raws", "SubsPlease"];def NLt = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def _x = any {def IZi = vYk.find { FQ ->  FQ.find { fgh ->  fn.lower().contains(fgh.lower()) } }[0];IZi = IZi.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {IZi = IZi.replace(".WEBRip", "");IZi = IZi + ".WEBRip"} else {IZi = IZi + ".WEB-DL"};IZi} {source} {zlJ.find { QPl ->  group == QPl || NLt == QPl } ? "WEBRip" : ""} {tMX.find { QPl ->  group == QPl || NLt == QPl } ? "BDRip" : ""} {jJE.find { QPl ->  group == g__ || NLt == g__} ? "HDTVRip" : ""} {def Zf = rSg.find { Dk ->  group == Dk || NLt == Dk} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : Zf} {vs} {""};_x ? "$_x " : ""}{def Tk = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $Tk, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def wJy = any { audioLanguages.size() } { 0 };def gR = wJy > 2 ? " MULTi-AUD" : wJy > 1 ? " DUAL-AUD" : "";def ISo = wJy > 5 ? audioLanguages.take(5) : audioLanguages;def Zr = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";gR = wJy == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$gR$Zr";gR ? gR + ISo.ISO2.joining(" ", " (", "").upper() + (wJy > 5 ? " ...)" : ")") : ""}{def dK = text.language.collect {['zh-Hans': 'ZH-S','zh-Hant': 'ZH-T','ar-001': 'AR-MSA'].get(it,it).toUpperCase()}.unique();def wkz = any { dK.size() } { 0 };def gR = wkz > 2 ? ", MULTi" : wkz > 1 ? ", DUAL" : wkz == 1 ? ", SUB" : null;def ISo = wkz > 5 ? dK.take(5) : dK;gR ? gR + ISo.joining(" ", " (", "").upper() + (wkz > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def Mk = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def mO = subt;Mk.values().each { Ha -> if (mO.contains(Ha)) {mO = mO.replace(Ha, "")}};Mk.iso3b + mO}}{f.image ? "-thumb" : ""}