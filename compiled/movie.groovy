{def LU = { System.getProperty(it) };def sw = LU("os.name").toLowerCase().contains("windows");def UGx = LU("user.name");def XYy = "/run/media/${UGx}";def ts = sw ? "H:/" : "$XYy/Videos";def mX = [[Bpj: "Books", eb: "F:/", ygV: "$XYy/Books"],[Bpj: "Data", eb: "D:/", ygV: "$XYy/Data"],[Bpj: "Games", eb: "G:/", ygV: "$XYy/Games"],[Bpj: "Music", eb: "E:/", ygV: "$XYy/Music"],[Bpj: "Videos", eb: "H:/", ygV: "$XYy/Videos"]];def dh = (mX.collect { it[sw ? "eb" : "ygV"] as File }.sort { YMj, eaq ->  YMj.exists() <=> eaq.exists() ?: YMj.diskSpace <=> eaq.diskSpace }).last();def cdA = ts ?: dh;"$cdA/"}{"Videos/"}{def Dcb = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity"];def Wvi = "TheMovieDB::TV";def PqQ = [[ 74180, Wvi],[ 93821, Wvi],[ 95897, Wvi],[220118, Wvi],[271026, Wvi]];def uW = [[236530, Wvi]];def Cj = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def LjH = Cj == "IMDb" ? "tt${id}" : id;def Wk = any { info.adult } { false };def ZHt = PqQ.find { it[0] == LjH && it[1] == Cj } != null;def nU = uW.find { it[0] == LjH && it[1] == Cj } != null;def irF = info.Keywords.findAll { it in Dcb } || ZHt || Wk;irF = nU ? false : irF;irF ? "R18+ " : ""}{def Qu = ["CN", "JP", "KR", "KP", "TW", "HK"];def uif = ["aeni", "donghua", "anime"];def vm = any {anime} || info.Keywords.findAll { it in uif } || (Qu.contains(country) && genres =~ /Animation/);vm ? "Anime Movies/" : "Movies/"}{def Wvi = "TheMovieDB::TV";def Gws = [[qHe: 68854, df: "From Me to You", LZ: Wvi],[qHe: 219816, df: "Fate/Grand Order: Fujimaru Ritsuka Doesn't Get It", LZ: Wvi],[qHe: 234538, df: "Demon Lord 2099", LZ: Wvi]];def Cj = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def LjH = Cj == "IMDb" ? "tt${id}" : id;def hUr = n;Gws.each {if (it.qHe == LjH && it.LZ == Cj) {hUr = it.df}};def hF = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def P_ = hUr.replaceAll(hF.collect { "\\" + it }.join('|'), '');P_ = P_.replaceAll(/(\s|\.)*$/, '');P_}{" ("}{y}{")"}{def Cj = id == tmdbid ? "TheMovieDB" : "IMDb";def dg = ["TheMovieDB": "tmdbid","IMDb": "imdbid"];def tPy = dg[Cj];def LjH = Cj == "IMDb" ? "tt${id}" : id;" [${tPy}-${LjH}]/"}{def xN = ["Alqanime","BlackLuster","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws"];def RXt = xN.find { oMJ ->  fn.contains(oMJ) } ?: "";def TQ = any {(fn =~ /^\[(.*?)\]/)[0][1]} {RXt} {group} {""};TQ ? "[$TQ] " : ""}{def Wvi = "TheMovieDB::TV";def Gws = [[qHe: 68854, df: "From Me to You", LZ: Wvi],[qHe: 219816, df: "Fate/Grand Order: Fujimaru Ritsuka Doesn't Get It", LZ: Wvi],[qHe: 234538, df: "Demon Lord 2099", LZ: Wvi]];def Cj = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def LjH = Cj == "IMDb" ? "tt${id}" : id;def hUr = n;Gws.each {if (it.qHe == LjH && it.LZ == Cj) {hUr = it.df}};def hF = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def P_ = hUr.replaceAll(hF.collect { "\\" + it }.join('|'), '');P_ = P_.replaceAll(/(\s|\.)*$/, '');P_}{" ("}{y}{")"}{" ["}{def Ya = [["ABEMA"],["ADN"],["BILI", "B-Global", "BiliIntl", "B-Site", "BiliCN"],["COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LAFTEL", "LFTL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["SHAHID"],["TVER"],["UNEXT"],["WETV"],["YT.WEB-DL", "YOUTUBE", "YTB"]];def Ijq = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs"];def uy = ["Erai-raws", "SubsPlease"];def zGJ = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def lMC = any {def UY = Ya.find { zjE ->  zjE.find { XZX ->  fn.lower().contains(XZX.lower()) } }[0];UY = UY.replace(".WEB-DL", "");def XBn = source.contains("WEB-DL");def JMw = source ? ".${source}" : "";XBn ? "${UY}.WEB-DL" : UY ? "${UY}${JMw}" : ""} {} {source} {Ijq.find { IRn ->  group == IRn || zGJ == IRn } ? "WEBRip" : ""} {def XZF = uy.find { Kt ->  group == Kt || zGJ == Kt} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : XZF} {vs} {""};lMC ? "$lMC " : ""}{def wM = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $wM, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def lUa = " Dub";def TB = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : lUa;TB = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : TB;TB}{def liw = any { audioLanguages.size() } { 0 };def TB = liw > 2 ? " MAud" : liw > 1 ? " DAud" : null;def jWi = liw > 5 ? audioLanguages.take(5) : audioLanguages;TB ? TB + jWi.joining(" ", " (", "").upper() + (liw > 5 ? " ...)" : ")") : ""}{def nS = any { textLanguages.size() } { 0 };def TB = nS > 2 ? ", MSub" : nS > 1 ? ", DSub" : null;def jWi = nS > 5 ? textLanguages.take(5) : textLanguages;TB ? TB + jWi.joining(" ", " (", "").upper() + (nS > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def cr = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def QDo = subt;cr.values().each { _x_ -> if (QDo.contains(_x_)) {QDo = QDo.replace(_x_, "")}};cr.iso3b + QDo}}{f.image ? "-thumb" : ""}