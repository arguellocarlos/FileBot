{def lP = { System.getProperty(it) };def aqe = lP("os.name").toLowerCase().contains("windows");def pBQ = lP("user.name");def roh = "/run/media/${pBQ}";def jU = aqe ? "H:/" : "$roh/Videos";def ItS = [[bNg: "Books", HLW: "F:/", zUB: "$roh/Books"],[bNg: "Data", HLW: "D:/", zUB: "$roh/Data"],[bNg: "Games", HLW: "G:/", zUB: "$roh/Games"],[bNg: "Music", HLW: "E:/", zUB: "$roh/Music"],[bNg: "Videos", HLW: "H:/", zUB: "$roh/Videos"]];def rvF = (ItS.collect { it[aqe ? "HLW" : "zUB"] as File }.sort { OR, aD ->  OR.exists() <=> aD.exists() ?: OR.diskSpace <=> aD.diskSpace }).last();def suP = jU ?: rvF;"$suP/"}{"Videos/"}{def HPh = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity"];def gF = "TheMovieDB::TV";def Vw = [[ 74180, gF],[ 93821, gF],[ 95897, gF],[220118, gF],[271026, gF]];def RV = [[236530, gF]];def Md = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def tAD = Md == "IMDb" ? "tt${id}" : id;def GRG = any { info.adult } { false };def IK = Vw.find { it[0] == tAD && it[1] == Md } != null;def Yb = RV.find { it[0] == tAD && it[1] == Md } != null;def Xl = info.Keywords.findAll { it in HPh } || IK || GRG;Xl = Yb ? false : Xl;Xl ? "R18+ " : ""}{def EM = ["CN", "JP", "KR", "KP", "TW", "HK"];def QTF = ["aeni", "donghua", "anime"];def lJ = any {anime} || info.Keywords.findAll { it in QTF } || (EM.contains(country) && genres =~ /Animation/);lJ ? "Anime Movies/" : "Movies/"}{def gF = "TheMovieDB::TV";def GFS = [[Wmp: 68854, Hra: "From Me to You", TGl: gF],[Wmp: 219816, Hra: "Fate/Grand Order: Fujimaru Ritsuka Doesn't Get It", TGl: gF],[Wmp: 276204, Hra: "Bogus Skill Fruitmaster", TGl: gF]];def Md = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def tAD = Md == "IMDb" ? "tt${id}" : id;def DMs = n;GFS.each {if (it.Wmp == tAD && it.TGl == Md) {DMs = it.Hra}};def Ot = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Tr = DMs.replaceAll(Ot.collect { "\\" + it }.join('|'), '');Tr = Tr.replaceAll(/(\s|\.)*$/, '');Tr}{" ("}{y}{")"}{def Md = id == tmdbid ? "TheMovieDB" : "IMDb";def SH = ["TheMovieDB": "tmdbid","IMDb": "imdbid"];def rQf = SH[Md];def tAD = Md == "IMDb" ? "tt${id}" : id;" [${rQf}-${tAD}]/"}{def PSr = ["Alqanime","BlackLuster","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws"];def mz = PSr.find { iE ->  fn.contains(iE) } ?: "";def pwr = any {(fn =~ /^\[(.*?)\]/)[0][1]} {mz} {group} {""};pwr ? "[$pwr] " : ""}{def gF = "TheMovieDB::TV";def GFS = [[Wmp: 68854, Hra: "From Me to You", TGl: gF],[Wmp: 219816, Hra: "Fate/Grand Order: Fujimaru Ritsuka Doesn't Get It", TGl: gF],[Wmp: 276204, Hra: "Bogus Skill Fruitmaster", TGl: gF]];def Md = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def tAD = Md == "IMDb" ? "tt${id}" : id;def DMs = n;GFS.each {if (it.Wmp == tAD && it.TGl == Md) {DMs = it.Hra}};def Ot = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Tr = DMs.replaceAll(Ot.collect { "\\" + it }.join('|'), '');Tr = Tr.replaceAll(/(\s|\.)*$/, '');Tr}{" ("}{y}{")"}{" ["}{def Oy = [["ABEMA"],["ADN"],["BBC"],["BILI", "B-Global", "BiliIntl", "B-Site", "BiliCN"],["COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LAFTEL", "LFTL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["SHAHID"],["TVER"],["UNEXT"],["WETV"],["YT.WEB-DL", "YOUTUBE", "YTB"]];def Spv = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs"];def QrR = ["Erai-raws", "SubsPlease"];def OqT = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def lv = any {def rRb = Oy.find { wpU ->  wpU.find { EvG ->  fn.lower().contains(EvG.lower()) } }[0];rRb = rRb.replace(".WEB-DL", "");def qB = source.contains("WEB-DL");def Ao = source ? ".${source}" : "";qB ? "${rRb}.WEB-DL" : rRb ? "${rRb}${Ao}" : ""} {} {source} {Spv.find { yv ->  group == yv || OqT == yv } ? "WEBRip" : ""} {def hwE = QrR.find { _ET ->  group == _ET || OqT == _ET} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : hwE} {vs} {""};lv ? "$lv " : ""}{def dlS = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $dlS, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def SB = " Dub";def ya = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : SB;ya = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : ya;ya}{def _Z = any { audioLanguages.size() } { 0 };def ya = _Z > 2 ? " MAud" : _Z > 1 ? " DAud" : null;def rj_ = _Z > 5 ? audioLanguages.take(5) : audioLanguages;ya ? ya + rj_.joining(" ", " (", "").upper() + (_Z > 5 ? " ...)" : ")") : ""}{def Pt = any { textLanguages.size() } { 0 };def ya = Pt > 2 ? ", MSub" : Pt > 1 ? ", DSub" : null;def rj_ = Pt > 5 ? textLanguages.take(5) : textLanguages;ya ? ya + rj_.joining(" ", " (", "").upper() + (Pt > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def jK = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def Fe = subt;jK.values().each { ym -> if (Fe.contains(ym)) {Fe = Fe.replace(ym, "")}};jK.iso3b + Fe}}{f.image ? "-thumb" : ""}