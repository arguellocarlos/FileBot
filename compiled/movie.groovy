{def cwk = { System.getProperty(it) };def erP = cwk("os.name").toLowerCase().contains("windows");def QFr = cwk("user.name");def yAo = "/run/media/${QFr}";def DK = erP ? "H:/" : "$yAo/Videos";def oHy = [[lK: "Books", WK: "F:/", IBZ: "$yAo/Books"],[lK: "Data", WK: "D:/", IBZ: "$yAo/Data"],[lK: "Games", WK: "G:/", IBZ: "$yAo/Games"],[lK: "Music", WK: "E:/", IBZ: "$yAo/Music"],[lK: "Videos", WK: "H:/", IBZ: "$yAo/Videos"]];def pdD = (oHy.collect { it[erP ? "WK" : "IBZ"] as File }.sort { poo, AB ->  poo.exists() <=> AB.exists() ?: poo.diskSpace <=> AB.diskSpace }).last();def Dh = DK ?: pdD;"$Dh/"}{"Videos/"}{def pcL = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def NV = "TheMovieDB::TV";def wG = [[ 74180, NV],[ 93821, NV],[ 95897, NV],[220118, NV],[249891, NV],[271026, NV]];def Eli = [[236530, NV]];def DrB = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def tTv = DrB == "IMDb" ? "tt${id}" : id;def Id = any { info.adult } { false };def PoJ = wG.find { it[0] == tTv && it[1] == DrB } != null;def SUj = Eli.find { it[0] == tTv && it[1] == DrB } != null;def WE = info.Keywords.findAll { it in pcL } || PoJ || Id;WE = SUj ? false : WE;WE ? "R18+ " : ""}{def HLS = ["CN", "JP", "KR", "KP", "TW", "HK"];def bw = ["aeni", "donghua", "anime"];def IkP = any {anime} || info.Keywords.findAll { it in bw } || (HLS.contains(country) && genres =~ /Animation/);IkP ? "Anime Movies/" : "Movies/"}{def NV = "TheMovieDB::TV";def pQk = [[oV: 199928, hY: "Nights With a Cat", Bzv: NV],[oV: 219816, hY: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", Bzv: NV],[oV: 248707, hY: "Neko Oji The Guy That Got Reincarnated As a Cat", Bzv: NV],[oV: 270657, hY: "Tono to Inu", Bzv: NV],[oV: 271003, hY: "Yandere Dark Elf", Bzv: NV],[oV: 274741, hY: "The Too-Perfect Saint", Bzv: NV],[oV: 288419, hY: "Chikuwa Senki", Bzv: NV]];def DrB = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def tTv = DrB == "IMDb" ? "tt${id}" : id;def LJ = n;pQk.each {if (it.oV == tTv && it.Bzv == DrB) {LJ = it.hY}};def yna = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def zC = LJ.replaceAll(yna.collect { "\\" + it }.join('|'), '');zC = zC.replaceAll(/(\s|\.)*$/, '');zC}{" ("}{y}{")"}{"/"}{def kQG = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def kv = kQG.find { EqV ->  fn.lower().contains(EqV.lower()) } ?: "";def MC = any {kv} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};MC ? "[$MC] " : ""}{def NV = "TheMovieDB::TV";def pQk = [[oV: 199928, hY: "Nights With a Cat", Bzv: NV],[oV: 219816, hY: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", Bzv: NV],[oV: 248707, hY: "Neko Oji The Guy That Got Reincarnated As a Cat", Bzv: NV],[oV: 270657, hY: "Tono to Inu", Bzv: NV],[oV: 271003, hY: "Yandere Dark Elf", Bzv: NV],[oV: 274741, hY: "The Too-Perfect Saint", Bzv: NV],[oV: 288419, hY: "Chikuwa Senki", Bzv: NV]];def DrB = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def tTv = DrB == "IMDb" ? "tt${id}" : id;def LJ = n;pQk.each {if (it.oV == tTv && it.Bzv == DrB) {LJ = it.hY}};def yna = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def zC = LJ.replaceAll(yna.collect { "\\" + it }.join('|'), '');zC = zC.replaceAll(/(\s|\.)*$/, '');zC}{" ("}{y}{") ["}{def dx = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"]];def ZX = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def ZyS = ["DB"];def ZZq = ["Ruri-Saizen"];def GAA = ["Erai-raws", "SubsPlease"];def WjG = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def QN = any {def OL = dx.find { LTz ->  LTz.find { xg ->  fn.lower().contains(xg.lower()) } }[0];OL = OL.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {OL = OL.replace(".WEBRip", "");OL = OL + ".WEBRip"} else {OL = OL + ".WEB-DL"};OL} {source} {ZX.find { JZN ->  group == JZN || WjG == JZN } ? "WEBRip" : ""} {ZyS.find { JZN ->  group == JZN || WjG == JZN } ? "BDRip" : ""} {ZZq.find { JZN ->  group == g__ || WjG == g__} ? "HDTVRip" : ""} {def sss = GAA.find { NQ ->  group == NQ || WjG == NQ} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : sss} {vs} {""};QN ? "$QN " : ""}{def Vy = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $Vy, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def WVe = any { audioLanguages.size() } { 0 };def TO = WVe > 2 ? " MULTi-AUD" : WVe > 1 ? " DUAL-AUD" : "";def kGK = WVe > 5 ? audioLanguages.take(5) : audioLanguages;def yY = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";TO = WVe == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$TO$yY";TO ? TO + kGK.ISO2.joining(" ", " (", "").upper() + (WVe > 5 ? " ...)" : ")") : ""}{def ysA = any { textLanguages.size() } { 0 };def TO = ysA > 2 ? ", MULTi" : ysA > 1 ? ", DUAL" : ysA == 1 ? ", SUB" : null;def kGK = ysA > 5 ? textLanguages.take(5) : textLanguages;TO ? TO + kGK.ISO2.joining(" ", " (", "").upper() + (ysA > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def kq = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def dLd = subt;kq.values().each { Wl -> if (dLd.contains(Wl)) {dLd = dLd.replace(Wl, "")}};kq.iso3b + dLd}}{f.image ? "-thumb" : ""}