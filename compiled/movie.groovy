{def RNV = { System.getProperty(it) };def B_n = RNV("os.name").toLowerCase().contains("windows");def OM = RNV("user.name");def TW = "/run/media/${OM}";def Vp = B_n ? "H:/" : "$TW/Videos";def ilC = [[rDs: "Books", PtP: "F:/", Col: "$TW/Books"],[rDs: "Data", PtP: "D:/", Col: "$TW/Data"],[rDs: "Games", PtP: "G:/", Col: "$TW/Games"],[rDs: "Music", PtP: "E:/", Col: "$TW/Music"],[rDs: "Videos", PtP: "H:/", Col: "$TW/Videos"]];def hL = (ilC.collect { it[B_n ? "PtP" : "Col"] as File }.sort { Gw, XnJ ->  Gw.exists() <=> XnJ.exists() ?: Gw.diskSpace <=> XnJ.diskSpace }).last();def EF = Vp ?: hL;"$EF/"}{"Videos/"}{def Fu = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def gLJ = "TheMovieDB::TV";def SVD = [[ 74180, gLJ],[ 93821, gLJ],[ 95897, gLJ],[220118, gLJ],[249891, gLJ],[271026, gLJ]];def JNV = [[236530, gLJ]];def Zp = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def EYG = Zp == "IMDb" ? "tt${id}" : id;def As = any { info.adult } { false };def QA = SVD.find { it[0] == EYG && it[1] == Zp } != null;def Yw = JNV.find { it[0] == EYG && it[1] == Zp } != null;def Gi = info.Keywords.findAll { it in Fu } || QA || As;Gi = Yw ? false : Gi;Gi ? "R18+ " : ""}{def mT = ["CN", "JP", "KR", "KP", "TW", "HK"];def vY = ["aeni", "donghua", "anime"];def tnt = any {anime} || info.Keywords.findAll { it in vY } || (mT.contains(country) && genres =~ /Animation/);tnt ? "Anime Movies/" : "Movies/"}{def gLJ = "TheMovieDB::TV";def sHP = [[nA: 199928, sX: "Nights With a Cat", tm: gLJ],[nA: 248707, sX: "Neko Oji The Guy That Got Reincarnated As a Cat", tm: gLJ],[nA: 270660, sX: "Pochars", tm: gLJ],[nA: 280078, sX: "The All-devouring Whale Homecoming", tm: gLJ],[nA: 283884, sX: "Chuhai Lips", tm: gLJ],[nA: 288419, sX: "Chikuwa Senki", tm: gLJ]];def Zp = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def EYG = Zp == "IMDb" ? "tt${id}" : id;def Wv = n;sHP.each {if (it.nA == EYG && it.tm == Zp) {Wv = it.sX}};def KY = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def SH = Wv.replaceAll(KY.collect { "\\" + it }.join('|'), '');SH = SH.replaceAll(/(\s|\.)*$/, '');SH}{" ("}{y}{")"}{"/"}{def Vl = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def we = Vl.find { ZMr ->  fn.lower().contains(ZMr.lower()) } ?: "";def se = any {we} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};se ? "[$se] " : ""}{def gLJ = "TheMovieDB::TV";def sHP = [[nA: 199928, sX: "Nights With a Cat", tm: gLJ],[nA: 248707, sX: "Neko Oji The Guy That Got Reincarnated As a Cat", tm: gLJ],[nA: 270660, sX: "Pochars", tm: gLJ],[nA: 280078, sX: "The All-devouring Whale Homecoming", tm: gLJ],[nA: 283884, sX: "Chuhai Lips", tm: gLJ],[nA: 288419, sX: "Chikuwa Senki", tm: gLJ]];def Zp = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def EYG = Zp == "IMDb" ? "tt${id}" : id;def Wv = n;sHP.each {if (it.nA == EYG && it.tm == Zp) {Wv = it.sX}};def KY = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def SH = Wv.replaceAll(KY.collect { "\\" + it }.join('|'), '');SH = SH.replaceAll(/(\s|\.)*$/, '');SH}{" ("}{y}{") ["}{def DYY = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["FOD"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"],["INSTA", "INSTAGRAM"],["ANIMENOTANE"]];def lNY = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def IsG = ["DB"];def vP = ["Ruri-Saizen"];def vk = ["Erai-raws", "SubsPlease"];def dK = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def Xb = any {def GL = DYY.find { po ->  po.find { lLi ->  fn.lower().contains(lLi.lower()) } }[0];GL = GL.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {GL = GL.replace(".WEBRip", "");GL = GL + ".WEBRip"} else {GL = GL + ".WEB-DL"};GL} {source} {lNY.find { TpF ->  group == TpF || dK == TpF } ? "WEBRip" : ""} {IsG.find { TpF ->  group == TpF || dK == TpF } ? "BDRip" : ""} {vP.find { TpF ->  group == g__ || dK == g__} ? "HDTVRip" : ""} {def Ez = vk.find { PIT ->  group == PIT || dK == PIT} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : Ez} {vs} {""};Xb ? "$Xb " : ""}{def L_K = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $L_K, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def ZJo = any { audioLanguages.size() } { 0 };def Sac = ZJo > 2 ? " MULTi-AUD" : ZJo > 1 ? " DUAL-AUD" : "";def BQd = ZJo > 5 ? audioLanguages.take(5) : audioLanguages;def OCu = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";Sac = ZJo == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$Sac$OCu";Sac ? Sac + BQd.ISO2.joining(" ", " (", "").upper() + (ZJo > 5 ? " ...)" : ")") : ""}{def OKu = text.language.collect {['zh-Hans': 'ZH-S','zh-Hant': 'ZH-T','ar-001': 'AR-MSA'].get(it,it).toUpperCase()}.unique();def rFQ = any { OKu.size() } { 0 };def Sac = rFQ > 2 ? ", MULTi" : rFQ > 1 ? ", DUAL" : rFQ == 1 ? ", SUB" : null;def BQd = rFQ > 5 ? OKu.take(5) : OKu;Sac ? Sac + BQd.joining(" ", " (", "").upper() + (rFQ > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def Alb = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def Net = subt;Alb.values().each { Zj -> if (Net.contains(Zj)) {Net = Net.replace(Zj, "")}};Alb.iso3b + Net}}{f.image ? "-thumb" : ""}