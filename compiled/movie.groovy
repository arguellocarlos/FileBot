{def Csu = { System.getProperty(it) };def uVd = Csu("os.name").toLowerCase().contains("windows");def kj = Csu("user.name");def lZ = "/run/media/${kj}";def JDU = uVd ? "H:/" : "$lZ/Videos";def KQ = [[MA: "Books", oO: "F:/", bl: "$lZ/Books"],[MA: "Data", oO: "D:/", bl: "$lZ/Data"],[MA: "Games", oO: "G:/", bl: "$lZ/Games"],[MA: "Music", oO: "E:/", bl: "$lZ/Music"],[MA: "Videos", oO: "H:/", bl: "$lZ/Videos"]];def th = (KQ.collect { it[uVd ? "oO" : "bl"] as File }.sort { QSo, aLS ->  QSo.exists() <=> aLS.exists() ?: QSo.diskSpace <=> aLS.diskSpace }).last();def hm = JDU ?: th;"$hm/"}{"Videos/"}{def QtK = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content"];def QM = "TheMovieDB::TV";def Ux = [[ 74180, QM],[ 93821, QM],[ 95897, QM],[220118, QM],[271026, QM]];def lO = [[236530, QM]];def wrk = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def xd = wrk == "IMDb" ? "tt${id}" : id;def jr = any { info.adult } { false };def isk = Ux.find { it[0] == xd && it[1] == wrk } != null;def pJ = lO.find { it[0] == xd && it[1] == wrk } != null;def gCa = info.Keywords.findAll { it in QtK } || isk || jr;gCa = pJ ? false : gCa;gCa ? "R18+ " : ""}{def G_ = ["CN", "JP", "KR", "KP", "TW", "HK"];def DH = ["aeni", "donghua", "anime"];def Kfr = any {anime} || info.Keywords.findAll { it in DH } || (G_.contains(country) && genres =~ /Animation/);Kfr ? "Anime Movies/" : "Movies/"}{def QM = "TheMovieDB::TV";def kA = [[SUZ: 68854, LuV: "From Me to You", DnQ: QM],[SUZ: 219816, LuV: "Fate/Grand Order: Fujimaru Ritsuka Doesn't Get It", DnQ: QM],[SUZ: 234538, LuV: "Demon Lord 2099", DnQ: QM]];def wrk = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def xd = wrk == "IMDb" ? "tt${id}" : id;def RXL = n;kA.each {if (it.SUZ == xd && it.DnQ == wrk) {RXL = it.LuV}};def QZ = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def TBk = RXL.replaceAll(QZ.collect { "\\" + it }.join('|'), '');TBk = TBk.replaceAll(/(\s|\.)*$/, '');TBk}{" ("}{y}{")"}{def wrk = id == tmdbid ? "TheMovieDB" : "IMDb";def CO = ["TheMovieDB": "tmdbid","IMDb": "imdbid"];def PJ = CO[wrk];def xd = wrk == "IMDb" ? "tt${id}" : id;" [${PJ}-${xd}]/"}{def uch = ["Alqanime","BlackLuster","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws"];def Rwa = uch.find { gt ->  fn.contains(gt) } ?: "";def KQQ = any {(fn =~ /^\[(.*?)\]/)[0][1]} {Rwa} {group} {""};KQQ ? "[$KQQ] " : ""}{def QM = "TheMovieDB::TV";def kA = [[SUZ: 68854, LuV: "From Me to You", DnQ: QM],[SUZ: 219816, LuV: "Fate/Grand Order: Fujimaru Ritsuka Doesn't Get It", DnQ: QM],[SUZ: 234538, LuV: "Demon Lord 2099", DnQ: QM]];def wrk = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def xd = wrk == "IMDb" ? "tt${id}" : id;def RXL = n;kA.each {if (it.SUZ == xd && it.DnQ == wrk) {RXL = it.LuV}};def QZ = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def TBk = RXL.replaceAll(QZ.collect { "\\" + it }.join('|'), '');TBk = TBk.replaceAll(/(\s|\.)*$/, '');TBk}{" ("}{y}{")"}{" ["}{def EX = [["ABEMA"],["ADN"],["BILI", "B-Global", "BiliIntl", "B-Site", "BiliCN"],["COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LAFTEL", "LFTL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["SHAHID"],["TVER"],["UNEXT"],["WETV"],["YT.WEB-DL", "YOUTUBE", "YTB"]];def XI = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs"];def LM = ["Erai-raws", "SubsPlease"];def m_ = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def Zw = any {def MAy = EX.find { aWu ->  aWu.find { Xbs ->  fn.lower().contains(Xbs.lower()) } }[0];MAy = MAy.replace(".WEB-DL", "");def lC = source.contains("WEB-DL");def oS = source ? ".${source}" : "";lC ? "${MAy}.WEB-DL" : MAy ? "${MAy}${oS}" : ""} {} {source} {XI.find { fC ->  group == fC || m_ == fC } ? "WEBRip" : ""} {def MGq = LM.find { Bx ->  group == Bx || m_ == Bx} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : MGq} {vs} {""};Zw ? "$Zw " : ""}{def Flv = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $Flv, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def RAX = " Dub";def pxb = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : RAX;pxb = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : pxb;pxb}{def yR = any { audioLanguages.size() } { 0 };def pxb = yR > 2 ? " MAud" : yR > 1 ? " DAud" : null;def vmk = yR > 5 ? audioLanguages.take(5) : audioLanguages;pxb ? pxb + vmk.joining(" ", " (", "").upper() + (yR > 5 ? " ...)" : ")") : ""}{def _H = any { textLanguages.size() } { 0 };def pxb = _H > 2 ? ", MSub" : _H > 1 ? ", DSub" : null;def vmk = _H > 5 ? textLanguages.take(5) : textLanguages;pxb ? pxb + vmk.joining(" ", " (", "").upper() + (_H > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def nMv = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def Qn = subt;nMv.values().each { HhI -> if (Qn.contains(HhI)) {Qn = Qn.replace(HhI, "")}};nMv.iso3b + Qn}}{f.image ? "-thumb" : ""}