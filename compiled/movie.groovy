{def dn = { System.getProperty(it) };def wPB = dn("os.name").toLowerCase().contains("windows");def Fni = dn("user.name");def Gf = "/run/media/${Fni}";def YhV = wPB ? "H:/" : "$Gf/Videos";def MZL = [[fGU: "Books", rF: "F:/", sxJ: "$Gf/Books"],[fGU: "Data", rF: "D:/", sxJ: "$Gf/Data"],[fGU: "Games", rF: "G:/", sxJ: "$Gf/Games"],[fGU: "Music", rF: "E:/", sxJ: "$Gf/Music"],[fGU: "Videos", rF: "H:/", sxJ: "$Gf/Videos"]];def TEp = (MZL.collect { it[wPB ? "rF" : "sxJ"] as File }.sort { Yz, vcS ->  Yz.exists() <=> vcS.exists() ?: Yz.diskSpace <=> vcS.diskSpace }).last();def yln = YhV ?: TEp;"$yln/"}{"Videos/"}{def hcN = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def unM = "TheMovieDB::TV";def EU = [[ 74180, unM],[ 93821, unM],[ 95897, unM],[220118, unM],[249891, unM],[271026, unM]];def ds = [[236530, unM]];def IaM = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Ruy = IaM == "IMDb" ? "tt${id}" : id;def _iY = any { info.adult } { false };def lT = EU.find { it[0] == Ruy && it[1] == IaM } != null;def uhZ = ds.find { it[0] == Ruy && it[1] == IaM } != null;def SPh = info.Keywords.findAll { it in hcN } || lT || _iY;SPh = uhZ ? false : SPh;SPh ? "R18+ " : ""}{def pUc = ["CN", "JP", "KR", "KP", "TW", "HK"];def ukn = ["aeni", "donghua", "anime"];def Zum = any {anime} || info.Keywords.findAll { it in ukn } || (pUc.contains(country) && genres =~ /Animation/);Zum ? "Anime Movies/" : "Movies/"}{def unM = "TheMovieDB::TV";def Kt = [[EW: 199928, Hv: "Nights With a Cat", PV: unM],[EW: 219816, Hv: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", PV: unM],[EW: 248707, Hv: "Neko Oji The Guy That Got Reincarnated As a Cat", PV: unM],[EW: 270657, Hv: "Tono to Inu", PV: unM],[EW: 271003, Hv: "Yandere Dark Elf", PV: unM],[EW: 274741, Hv: "The Too-Perfect Saint", PV: unM],[EW: 288419, Hv: "Chikuwa Senki", PV: unM]];def IaM = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Ruy = IaM == "IMDb" ? "tt${id}" : id;def RaH = n;Kt.each {if (it.EW == Ruy && it.PV == IaM) {RaH = it.Hv}};def ywC = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Rf_ = RaH.replaceAll(ywC.collect { "\\" + it }.join('|'), '');Rf_ = Rf_.replaceAll(/(\s|\.)*$/, '');Rf_}{" ("}{y}{")"}{"/"}{def bfa = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def Ml = bfa.find { YS ->  fn.lower().contains(YS.lower()) } ?: "";def GZ = any {Ml} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};GZ ? "[$GZ] " : ""}{def unM = "TheMovieDB::TV";def Kt = [[EW: 199928, Hv: "Nights With a Cat", PV: unM],[EW: 219816, Hv: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", PV: unM],[EW: 248707, Hv: "Neko Oji The Guy That Got Reincarnated As a Cat", PV: unM],[EW: 270657, Hv: "Tono to Inu", PV: unM],[EW: 271003, Hv: "Yandere Dark Elf", PV: unM],[EW: 274741, Hv: "The Too-Perfect Saint", PV: unM],[EW: 288419, Hv: "Chikuwa Senki", PV: unM]];def IaM = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Ruy = IaM == "IMDb" ? "tt${id}" : id;def RaH = n;Kt.each {if (it.EW == Ruy && it.PV == IaM) {RaH = it.Hv}};def ywC = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Rf_ = RaH.replaceAll(ywC.collect { "\\" + it }.join('|'), '');Rf_ = Rf_.replaceAll(/(\s|\.)*$/, '');Rf_}{" ("}{y}{") ["}{def Iz = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LAFTEL", "LFTL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["WETV"]];def NL = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def FDy = ["DB"];def NDU = ["Ruri-Saizen"];def Ehy = ["Erai-raws", "SubsPlease"];def AuP = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def cju = any {def wy = Iz.find { HY ->  HY.find { oc ->  fn.lower().contains(oc.lower()) } }[0];wy = wy.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {wy = wy.replace(".WEBRip", "");wy = wy + ".WEBRip"} else {wy = wy + ".WEB-DL"};wy} {source} {NL.find { HHU ->  group == HHU || AuP == HHU } ? "WEBRip" : ""} {FDy.find { HHU ->  group == HHU || AuP == HHU } ? "BDRip" : ""} {NDU.find { HHU ->  group == g__ || AuP == g__} ? "HDTVRip" : ""} {def reH = Ehy.find { Ir ->  group == Ir || AuP == Ir} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : reH} {vs} {""};cju ? "$cju " : ""}{def Wzw = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $Wzw, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def anO = any { audioLanguages.size() } { 0 };def SFd = anO > 2 ? " MULTi-AUD" : anO > 1 ? " DUAL-AUD" : "";def nj = anO > 5 ? audioLanguages.take(5) : audioLanguages;def Wf = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";SFd = anO == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$SFd$Wf";SFd ? SFd + nj.ISO2.joining(" ", " (", "").upper() + (anO > 5 ? " ...)" : ")") : ""}{def Ka = any { textLanguages.size() } { 0 };def SFd = Ka > 2 ? ", MULTi" : Ka > 1 ? ", DUAL" : Ka == 1 ? ", SUB" : null;def nj = Ka > 5 ? textLanguages.take(5) : textLanguages;SFd ? SFd + nj.ISO2.joining(" ", " (", "").upper() + (Ka > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def SYq = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def JbA = subt;SYq.values().each { iCz -> if (JbA.contains(iCz)) {JbA = JbA.replace(iCz, "")}};SYq.iso3b + JbA}}{f.image ? "-thumb" : ""}