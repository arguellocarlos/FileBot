{def Yj = { System.getProperty(it) };def Nz = Yj("os.name").toLowerCase().contains("windows");def QET = Yj("user.name");def jxD = "/run/media/${QET}";def HQ = Nz ? "H:/" : "$jxD/Videos";def Id = [[Ysb: "Books", KgH: "F:/", ha: "$jxD/Books"],[Ysb: "Data", KgH: "D:/", ha: "$jxD/Data"],[Ysb: "Games", KgH: "G:/", ha: "$jxD/Games"],[Ysb: "Music", KgH: "E:/", ha: "$jxD/Music"],[Ysb: "Videos", KgH: "H:/", ha: "$jxD/Videos"]];def hm = (Id.collect { it[Nz ? "KgH" : "ha"] as File }.sort { ju, Nal ->  ju.exists() <=> Nal.exists() ?: ju.diskSpace <=> Nal.diskSpace }).last();def rD = HQ ?: hm;"$rD/"}{"Videos/"}{def zO = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def JS = "TheMovieDB::TV";def Re = [[ 74180, JS],[ 93821, JS],[ 95897, JS],[220118, JS],[249891, JS],[271026, JS]];def iVA = [[236530, JS]];def AiA = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def On = AiA == "IMDb" ? "tt${id}" : id;def nGG = any { info.adult } { false };def dKN = Re.find { it[0] == On && it[1] == AiA } != null;def xNO = iVA.find { it[0] == On && it[1] == AiA } != null;def bQZ = info.Keywords.findAll { it in zO } || dKN || nGG;bQZ = xNO ? false : bQZ;bQZ ? "R18+ " : ""}{def Gh = ["CN", "JP", "KR", "KP", "TW", "HK"];def Mc = ["aeni", "donghua", "anime"];def zbC = any {anime} || info.Keywords.findAll { it in Mc } || (Gh.contains(country) && genres =~ /Animation/);zbC ? "Anime Movies/" : "Movies/"}{def JS = "TheMovieDB::TV";def oJG = [[Np: 199928, kCo: "Nights With a Cat", ED: JS],[Np: 219816, kCo: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", ED: JS],[Np: 248707, kCo: "Neko Oji The Guy That Got Reincarnated As a Cat", ED: JS],[Np: 271003, kCo: "Yandere Dark Elf", ED: JS],[Np: 274741, kCo: "The Too-Perfect Saint", ED: JS],[Np: 275623, kCo: "Chuzenji-sensei", ED: JS],[Np: 281623, kCo: "SHIROHIYO", ED: JS],[Np: 288419, kCo: "Chikuwa Senki", ED: JS]];def AiA = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def On = AiA == "IMDb" ? "tt${id}" : id;def qO = n;oJG.each {if (it.Np == On && it.ED == AiA) {qO = it.kCo}};def rP = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def grB = qO.replaceAll(rP.collect { "\\" + it }.join('|'), '');grB = grB.replaceAll(/(\s|\.)*$/, '');grB}{" ("}{y}{")"}{"/"}{def BiU = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def lE = BiU.find { Nmq ->  fn.lower().contains(Nmq.lower()) } ?: "";def MLj = any {lE} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};MLj ? "[$MLj] " : ""}{def JS = "TheMovieDB::TV";def oJG = [[Np: 199928, kCo: "Nights With a Cat", ED: JS],[Np: 219816, kCo: "Fate Grand Order Fujimaru Ritsuka Doesn't Get It", ED: JS],[Np: 248707, kCo: "Neko Oji The Guy That Got Reincarnated As a Cat", ED: JS],[Np: 271003, kCo: "Yandere Dark Elf", ED: JS],[Np: 274741, kCo: "The Too-Perfect Saint", ED: JS],[Np: 275623, kCo: "Chuzenji-sensei", ED: JS],[Np: 281623, kCo: "SHIROHIYO", ED: JS],[Np: 288419, kCo: "Chikuwa Senki", ED: JS]];def AiA = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def On = AiA == "IMDb" ? "tt${id}" : id;def qO = n;oJG.each {if (it.Np == On && it.ED == AiA) {qO = it.kCo}};def rP = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def grB = qO.replaceAll(rP.collect { "\\" + it }.join('|'), '');grB = grB.replaceAll(/(\s|\.)*$/, '');grB}{" ("}{y}{") ["}{def IiM = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"]];def RM = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def pm = ["DB"];def ORl = ["Ruri-Saizen"];def Jnc = ["Erai-raws", "SubsPlease"];def fhq = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def mx = any {def bzx = IiM.find { Aq ->  Aq.find { HUg ->  fn.lower().contains(HUg.lower()) } }[0];bzx = bzx.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {bzx = bzx.replace(".WEBRip", "");bzx = bzx + ".WEBRip"} else {bzx = bzx + ".WEB-DL"};bzx} {source} {RM.find { lB ->  group == lB || fhq == lB } ? "WEBRip" : ""} {pm.find { lB ->  group == lB || fhq == lB } ? "BDRip" : ""} {ORl.find { lB ->  group == g__ || fhq == g__} ? "HDTVRip" : ""} {def EX = Jnc.find { mt ->  group == mt || fhq == mt} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : EX} {vs} {""};mx ? "$mx " : ""}{def Lss = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $Lss, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def WrR = any { audioLanguages.size() } { 0 };def BI = WrR > 2 ? " MULTi-AUD" : WrR > 1 ? " DUAL-AUD" : "";def Pms = WrR > 5 ? audioLanguages.take(5) : audioLanguages;def jC = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";BI = WrR == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$BI$jC";BI ? BI + Pms.ISO2.joining(" ", " (", "").upper() + (WrR > 5 ? " ...)" : ")") : ""}{def aX = any { textLanguages.size() } { 0 };def BI = aX > 2 ? ", MULTi" : aX > 1 ? ", DUAL" : aX == 1 ? ", SUB" : null;def Pms = aX > 5 ? textLanguages.take(5) : textLanguages;BI ? BI + Pms.ISO2.joining(" ", " (", "").upper() + (aX > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def yFo = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def HD = subt;yFo.values().each { Yn -> if (HD.contains(Yn)) {HD = HD.replace(Yn, "")}};yFo.iso3b + HD}}{f.image ? "-thumb" : ""}