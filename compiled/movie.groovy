{def Fql = { System.getProperty(it) };def _nx = Fql("os.name").toLowerCase().contains("windows");def Qht = Fql("user.name");def UZ_ = "/run/media/${Qht}";def Vn = _nx ? "H:/" : "$UZ_/Videos";def gaf = [[bC: "Books", jq: "F:/", tx: "$UZ_/Books"],[bC: "Data", jq: "D:/", tx: "$UZ_/Data"],[bC: "Games", jq: "G:/", tx: "$UZ_/Games"],[bC: "Music", jq: "E:/", tx: "$UZ_/Music"],[bC: "Videos", jq: "H:/", tx: "$UZ_/Videos"]];def SB = (gaf.collect { it[_nx ? "jq" : "tx"] as File }.sort { fQ, ImJ ->  fQ.exists() <=> ImJ.exists() ?: fQ.diskSpace <=> ImJ.diskSpace }).last();def wP = Vn ?: SB;"$wP/"}{"Videos/"}{def ae = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content","nudity", "animefesta"];def DC = "TheMovieDB::TV";def RO = [[ 74180, DC],[ 93821, DC],[ 95897, DC],[220118, DC],[249891, DC],[271026, DC]];def YeA = [[236530, DC]];def EQD = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def ii = EQD == "IMDb" ? "tt${id}" : id;def UTg = any { info.adult } { false };def dKe = RO.find { it[0] == ii && it[1] == EQD } != null;def ccM = YeA.find { it[0] == ii && it[1] == EQD } != null;def Dw = info.Keywords.findAll { it in ae } || dKe || UTg;Dw = ccM ? false : Dw;Dw ? "R18+ " : ""}{def hA = ["CN", "JP", "KR", "KP", "TW", "HK"];def PO = ["aeni", "donghua", "anime"];def Jy = any {anime} || info.Keywords.findAll { it in PO } || (hA.contains(country) && genres =~ /Animation/);Jy ? "Anime Movies/" : "Movies/"}{def DC = "TheMovieDB::TV";def fw = [[ib: 199928, svI: "Nights With a Cat", il: DC],,[ib: 248707, svI: "Neko Oji The Guy That Got Reincarnated As a Cat", il: DC],[ib: 270660, svI: "Pochars", il: DC],[ib: 280078, svI: "The All-devouring Whale Homecoming", il: DC],[ib; 283884: svI: "Chuhai Lips", il: DC],s[ib: 288419, svI: "Chikuwa Senki", il: DC]];def EQD = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def ii = EQD == "IMDb" ? "tt${id}" : id;def VN = n;fw.each {if (it.ib == ii && it.il == EQD) {VN = it.svI}};def Yp = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def eNw = VN.replaceAll(Yp.collect { "\\" + it }.join('|'), '');eNw = eNw.replaceAll(/(\s|\.)*$/, '');eNw}{" ("}{y}{")"}{"/"}{def rfr = ["Alqanime","BlackLuster","darkflux","It's Anime","Kuramanime","NanDesuKa","ToonsHub","Tsundere-Raws","S1PH3R","Samehadaku"];def JQj = rfr.find { rD ->  fn.lower().contains(rD.lower()) } ?: "";def WN = any {JQj} {(fn =~ /^\[(.*?)\]/)[0][1]} {group} {""};WN ? "[$WN] " : ""}{def DC = "TheMovieDB::TV";def fw = [[ib: 199928, svI: "Nights With a Cat", il: DC],,[ib: 248707, svI: "Neko Oji The Guy That Got Reincarnated As a Cat", il: DC],[ib: 270660, svI: "Pochars", il: DC],[ib: 280078, svI: "The All-devouring Whale Homecoming", il: DC],[ib; 283884: svI: "Chuhai Lips", il: DC],s[ib: 288419, svI: "Chikuwa Senki", il: DC]];def EQD = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def ii = EQD == "IMDb" ? "tt${id}" : id;def VN = n;fw.each {if (it.ib == ii && it.il == EQD) {VN = it.svI}};def Yp = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def eNw = VN.replaceAll(Yp.collect { "\\" + it }.join('|'), '');eNw = eNw.replaceAll(/(\s|\.)*$/, '');eNw}{" ("}{y}{") ["}{def gg = [["YTB", "YT.WEB-DL", "YOUTUBE"],["ABEMA", "ABEMATV"],["ADN"],["BILI", "B-Global", "BiliIntl"],["BSITE", "BILICN"],["CMIC", "COOLMIC"],["FOD"],["HIDIVE", "HIDI.WEB-DL"],["IQIYI", "IQ.WEB-DL"],["JFFP"],["LFTL", "LAFTEL"],["MDON", "MANGADON"],["MW.WEB-DL"],["NF.WEB-DL", "NF WEB"],["OVEIL", "OV.WEB-DL", "OceanVeil"],["SHAHID"],["TVER"],["UNEXT"],["VIDIO"],["VIU"],["WETV"],["INSTA", "INSTAGRAM"],["ANIMENOTANE"]];def tny = ["ASW", "Judas", "JRx7", "EMBER", "GuodongSubs", "SAMEHADAKU"];def WR_ = ["DB"];def ex = ["Ruri-Saizen"];def PlY = ["Erai-raws", "SubsPlease"];def uGJ = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def hLQ = any {def je = gg.find { rl ->  rl.find { HAx ->  fn.lower().contains(HAx.lower()) } }[0];je = je.replace(".WEB-DL", "");if (fn.contains("WEBRip")) {je = je.replace(".WEBRip", "");je = je + ".WEBRip"} else {je = je + ".WEB-DL"};je} {source} {tny.find { mA ->  group == mA || uGJ == mA } ? "WEBRip" : ""} {WR_.find { mA ->  group == mA || uGJ == mA } ? "BDRip" : ""} {ex.find { mA ->  group == g__ || uGJ == g__} ? "HDTVRip" : ""} {def SjT = PlY.find { DAu ->  group == DAu || uGJ == DAu} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : SjT} {vs} {""};hLQ ? "$hLQ " : ""}{def prN = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $prN, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def si = any { audioLanguages.size() } { 0 };def DfD = si > 2 ? " MULTi-AUD" : si > 1 ? " DUAL-AUD" : "";def BV = si > 5 ? audioLanguages.take(5) : audioLanguages;def fx = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : " DUBBED";DfD = si == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : "$DfD$fx";DfD ? DfD + BV.ISO2.joining(" ", " (", "").upper() + (si > 5 ? " ...)" : ")") : ""}{def ZOU = text.language.collect {['zh-Hans': 'ZH-S','zh-Hant': 'ZH-T','ar-001': 'AR-MSA'].get(it,it).toUpperCase()}.unique();def ebL = any { ZOU.size() } { 0 };def DfD = ebL > 2 ? ", MULTi" : ebL > 1 ? ", DUAL" : ebL == 1 ? ", SUB" : null;def BV = ebL > 5 ? ZOU.take(5) : ZOU;DfD ? DfD + BV.joining(" ", " (", "").upper() + (ebL > 6 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{if (f.subtitle) {def Py = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def rTg = subt;Py.values().each { fg -> if (rTg.contains(fg)) {rTg = rTg.replace(fg, "")}};Py.iso3b + rTg}}{f.image ? "-thumb" : ""}