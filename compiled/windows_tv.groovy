{def fL = "H:/";def dU = [home,"D:/","E:/","F:/","G:/","H:/"].collect { it as File }.sort { Hx, GQ ->  Hx.exists() <=> GQ.exists() ?: Hx.diskSpace <=> GQ.diskSpace }.last();def nlp = fL ? fL : dU;"$nlp/"}{"Videos/"}{def BWv = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","hentai", "sex", "lgbt", "explicit", "adult animation", "adult content"];def vn_ = [[271026, "TheMovieDB::TV"],[220118, "TheMovieDB::TV"]];def ZGA = any { info.adult } { false };def lpV = vn_.find { it[0] == id && it[1] == info.database } != null;def EsC = info.Keywords.findAll { it in BWv } || lpV || ZGA;EsC ? "R18+ " : ""}{def Vk = ["CN", "JP", "KR", "KP", "TW", "HK"];def HsU = ["aeni", "donghua", "anime"];def xQ = any {anime} || info.Keywords.findAll { it in HsU } || (Vk.contains(country) && genres =~ /Animation/);xQ ? "Anime/" : "TV Series/"}{def Lw = [[ie: 68854, tvL: "From Me to You", AAR: "TheMovieDB::TV"],[ie: 229743, tvL: "VTuber Legend", AAR: "TheMovieDB::TV"],[ie: 234538, tvL: "Demon Lord 2099", AAR: "TheMovieDB::TV"],[ie: 237045, tvL: "Cherry Magic!", AAR: "TheMovieDB::TV"],[ie: 240633, tvL: "A Journey Through Another World", AAR: "TheMovieDB::TV"],[ie: 245285, tvL: "Failure Frame", AAR: "TheMovieDB::TV"],[ie: 271026, tvL: "Taisho Era Contract Marriage", AAR: "TheMovieDB::TV"]];def OIv = n;Lw.each {if (it.ie == tmdbid && it.AAR == info.database) {OIv = it.tvL}};def qR = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def FC = OIv.replaceAll(qR.collect { "\\" + it }.join('|'), '');FC = FC.replaceAll(/(\s|\.)*$/, '');FC}{def IO = [[ 68854, "TheMovieDB::TV"],[123542, "TheMovieDB::TV"],[204098, "TheMovieDB::TV"],[235973, "TheMovieDB::TV"],[239779, "TheMovieDB::TV"],[240125, "TheMovieDB::TV"],[257162, "TheMovieDB::TV"],[259140, "TheMovieDB::TV"],[262295, "TheMovieDB::TV"],[271026, "TheMovieDB::TV"],[273190, "TheMovieDB::TV"],[275695, "TheMovieDB::TV"]];def _d = IO.find { it[0] == tmdbid && it[1] == info.database } != null;def zw = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def lS = zw[info.database];_d ? " ($y) [${lS}-${id}]" : ""}/{episode.special ? 'Specials' : 'Season '+s}{def qR = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def FC = sn.replaceAll(qR.collect { "\\" + it }.join('|'), '_');def EfI = n.replaceAll(qR.collect { "\\" + it }.join('|'), '_');def yQ = FC.contains(EfI) ? "" : FC;yQ == 'Season '+ s ? "" : yQ ? " - " + yQ : ""}/{def Hg = ["Alqanime","BlackLuster","NanDesuKa","ToonsHub","Tsundere-Raws"];def jV = Hg.find { ke ->  fn.contains(ke) } ?: "";def rl = any {(fn =~ /^\[(.*?)\]/)[0][1]} {jV} {group} {""};rl ? "[$rl] " : ""}{def Lw = [[ie: 68854, tvL: "From Me to You", AAR: "TheMovieDB::TV"],[ie: 229743, tvL: "VTuber Legend", AAR: "TheMovieDB::TV"],[ie: 234538, tvL: "Demon Lord 2099", AAR: "TheMovieDB::TV"],[ie: 237045, tvL: "Cherry Magic!", AAR: "TheMovieDB::TV"],[ie: 240633, tvL: "A Journey Through Another World", AAR: "TheMovieDB::TV"],[ie: 245285, tvL: "Failure Frame", AAR: "TheMovieDB::TV"],[ie: 271026, tvL: "Taisho Era Contract Marriage", AAR: "TheMovieDB::TV"]];def OIv = n;Lw.each {if (it.ie == tmdbid && it.AAR == info.database) {OIv = it.tvL}};def qR = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def FC = OIv.replaceAll(qR.collect { "\\" + it }.join('|'), '');FC = FC.replaceAll(/(\s|\.)*$/, '');FC} - {s00e00}{def qR = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def FC = t.replaceAll(qR.collect { "\\" + it }.join('|'), '_');def On = any { e } { special };FC = FC.length() > 100 ? " " : " - $FC ";FC == " - Episode $On " ? " " : FC} [{def QL = [[XZ_: "ABEMA", fq: ["ABEMA"]],[XZ_: "Bilibili.tv", fq: ["B-Global", "BiliIntl", "BILI"]],[XZ_: "Hulu", fq: ["HULU"]],[XZ_: "MeWatch", fq: ["MW.WEB-DL"]],[XZ_: "Netflix", fq: ["NF.WEB-DL", "NF WEB"]],[XZ_: "Prime Video", fq: ["AMZN"]],[XZ_: "TVer", fq: ["TVER"]],[XZ_: "Shahid", fq: ["SHAHID"]],[XZ_: "U-NEXT", fq: ["UNEXT"]],[XZ_: "YouTube", fq: ["YT.WEB-DL", "YOUTUBE", "YTB"]]];def wTQ = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs"];def meD = ["Erai-raws", "SubsPlease"];def NhI = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def ml = any {def zf = QL.find { Lo ->  Lo.fq.find { Wa ->  fn.contains(Wa) } }?.fq.first() ?: "";zf = zf.replace(".WEB-DL", "");zf ? "${zf}.WEB-DL" : ""} {source} {wTQ.find { Uq ->  group == Uq || NhI == Uq } ? "WEBRip" : ""} {def EV = meD.find { jHu ->  group == jHu || NhI == jHu} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : EV} {vs} {""};ml ? "$ml " : ""}{resolution} {vcf.upper()}{bitdepth ? " ${bitdepth}bit" : ""}, {ac} {af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0',)}{def kc_ = " Dub";def mj = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : kc_;mj = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : mj;mj}{def CZY = any { audioLanguages.size() } { 0 };def mj = CZY > 2 ? " MAud" : CZY > 1 ? " DAud" : null;def FvW = CZY > 5 ? audioLanguages.take(5) : audioLanguages;mj ? mj + FvW.joining(" ", " (", "").upper() + (CZY > 5 ? " ...)" : ")") : ""}{def ax = any { textLanguages.size() } { 0 };def mj = ax > 2 ? ", MSub" : ax > 1 ? ", DSub" : null;def FvW = ax > 5 ? textLanguages.take(5) : textLanguages;mj ? mj + FvW.joining(" ", " (", "").upper() + (ax > 5 ? " ...)" : ")") : ""}][{crc32.upper()}]{ext =~ /(ass|srt|ssa|vtt)/ ? '.' + lang.ISO3B : ""}{ext =~ /jp(?:e)?g|png/ ? "-thumb" : ""}