{def iL = "H:/";def tF = [home,"D:/","E:/","F:/","G:/","H:/"].collect { it as File }.sort { cK, jnO ->  cK.exists() <=> jnO.exists() ?: cK.diskSpace <=> jnO.diskSpace }.last();def Ce = iL ? iL : tF;"$Ce/"}{def DSm = /(CN|JP|KR|KP|TW|HK)/;def sUI = /(aeni|donghua|anime)/;def CzO = anime || info.Keywords =~ sUI || (genres =~ /Animation/ && country =~ DSm) ? true : false;CzO ? "Videos/Anime/" : "Videos/TV Series/"}{def zpg = [[sh: 229743, ni: "VTuber Legend"],[sh: 240633, ni: "A Journey Through Another World"],[sh: 245285, ni: "Failure Frame"],[sh: 237045, ni: "Cherry Magic!"],[sh: 68854, ni: "From Me to You"],[sh: 271026, ni: "Taisho Era Contract Marriage"],[sh: 234538, ni: "Demon Lord 2099"]];def EL = n;zpg.each {if (it.sh == tmdbid && type.toString() != "Movie") {EL = it.ni}};def YwS = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def OG_ = EL.replaceAll(YwS.collect { "\\" + it }.join('|'), '');OG_ = OG_.replaceAll(/(\s|\.)*$/, '');OG_}{def QfU = [68854,235973,262295,259140,204098,239779,273190,271026,240125,275695,123542,257162];def GDf = QfU.find { cOS ->  tmdbid == cOS } ?: "";GDf ? " ($y) [tmdbid-$GDf]" : ""}/{episode.special ? 'Specials' : 'Season '+s}{def YwS = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def OG_ = sn.replaceAll(YwS.collect { "\\" + it }.join('|'), '_');def SRk = n.replaceAll(YwS.collect { "\\" + it }.join('|'), '_');def Qg = OG_.contains(SRk) ? "" : OG_;Qg == 'Season '+ s ? "" : Qg ? " - " + Qg : ""}/{def VSU = ["Alqanime","BlackLuster","NanDesuKa","ToonsHub","Tsundere-Raws"];def MoN = VSU.find { rq ->  fn.contains(rq) } ?: "";def hL = any {(fn =~ /^\[(.*?)\]/)[0][1]} {MoN} {group} {""};hL ? "[$hL] " : ""}{def zpg = [[sh: 229743, ni: "VTuber Legend"],[sh: 240633, ni: "A Journey Through Another World"],[sh: 245285, ni: "Failure Frame"],[sh: 237045, ni: "Cherry Magic!"],[sh: 68854, ni: "From Me to You"],[sh: 271026, ni: "Taisho Era Contract Marriage"],[sh: 234538, ni: "Demon Lord 2099"]];def EL = n;zpg.each {if (it.sh == tmdbid && type.toString() != "Movie") {EL = it.ni}};def YwS = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def OG_ = EL.replaceAll(YwS.collect { "\\" + it }.join('|'), '');OG_ = OG_.replaceAll(/(\s|\.)*$/, '');OG_} - {s00e00}{def YwS = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def OG_ = t.replaceAll(YwS.collect { "\\" + it }.join('|'), '_');def dwE = any { e } { special };OG_ = OG_.length() > 100 ? " " : " - $OG_ ";OG_ == " - Episode $dwE " ? " " : OG_} [{def kD = [[qa: "ABEMA", dx: ["ABEMA"]],[qa: "Bilibili.tv", dx: ["B-Global", "BiliIntl", "BILI"]],[qa: "Hulu", dx: ["HULU"]],[qa: "MeWatch", dx: ["MW.WEB-DL"]],[qa: "Netflix", dx: ["NF.WEB-DL", "NF WEB"]],[qa: "Prime Video", dx: ["AMZN"]],[qa: "TVer", dx: ["TVER"]],[qa: "Shahid", dx: ["SHAHID"]],[qa: "U-NEXT", dx: ["UNEXT"]],[qa: "YouTube", dx: ["YT.WEB-DL", "YOUTUBE", "YTB"]]];def ZZ = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs"];def tD = ["Erai-raws", "SubsPlease"];def lI = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def uyB = any {def qLG = kD.find { fEV ->  fEV.dx.find { FOP ->  fn.contains(FOP) } }?.dx.first() ?: "";qLG = qLG.replace(".WEB-DL", "");qLG ? "${qLG}.WEB-DL" : ""} {source} {ZZ.find { owW ->  group == owW || lI == owW } ? "WEBRip" : ""} {def qe = tD.find { BNX ->  group == BNX || lI == BNX} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : qe} {vs} {""};uyB ? "$uyB " : ""}{resolution} {vcf.upper()}{bitdepth ? " ${bitdepth}bit" : ""}, {ac} {af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0',)}{def fJ = " Dub";def lxR = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : fJ;lxR = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : lxR;lxR}{def uHT = any { audioLanguages.size() } { 0 };def lxR = uHT > 2 ? " MAud" : uHT > 1 ? " DAud" : null;def QR = uHT > 5 ? audioLanguages.take(5) : audioLanguages;lxR ? lxR + QR.joining(" ", " (", "").upper() + (uHT > 5 ? " ...)" : ")") : ""}{def zLE = any { textLanguages.size() } { 0 };def lxR = zLE > 2 ? ", MSub" : zLE > 1 ? ", DSub" : null;def QR = zLE > 5 ? textLanguages.take(5) : textLanguages;lxR ? lxR + QR.joining(" ", " (", "").upper() + (zLE > 5 ? " ...)" : ")") : ""}][{crc32.upper()}]{ext =~ /(ass|srt|ssa|vtt)/ ? '.' + lang.ISO3B : ""}{ext =~ /jp(?:e)?g|png/ ? "-thumb" : ""}