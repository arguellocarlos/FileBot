{def qzc = System.getProperty("user.name");def zp = "/run/media/${qzc}";def Zn = "$zp/Videos";def lt = [home,"$zp/Data","$zp/Music","$zp/Videos","$zp/Games","$zp/Books"].collect { it as File }.sort { cVy, Ccr ->  cVy.exists() <=> Ccr.exists() ?: cVy.diskSpace <=> Ccr.diskSpace }.last();def xR = Zn ? Zn : lt;"$xR/"}{"Videos/"}{def ovx = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content"];def _h = "TheMovieDB::TV";def yOm = [[271026, _h],[220118, _h],[ 74180, _h]];def pDL = [[236530, _h]];def Ca = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def FYY = Ca == "IMDb" ? "tt${id}" : id;def gR = any { info.adult } { false };def kq = yOm.find { it[0] == FYY && it[1] == Ca } != null;def yR = pDL.find { it[0] == FYY && it[1] == Ca } != null;def n_M = info.Keywords.findAll { it in ovx } || kq || gR;n_M = yR ? false : n_M;n_M ? "R18+ " : ""}{def kK = ["CN", "JP", "KR", "KP", "TW", "HK"];def NHM = ["aeni", "donghua", "anime"];def xo = any {anime} || info.Keywords.findAll { it in NHM } || (kK.contains(country) && genres =~ /Animation/);xo ? "Anime Movies/" : "Movies/"}{def _h = "TheMovieDB::TV";def F_A = [[bT: 68854, tk: "From Me to You", Xgl: _h],[bT: 94904, tk: "My Next Life as a Villainess", Xgl: _h],[bT: 229743, tk: "VTuber Legend", Xgl: _h],[bT: 234538, tk: "Demon Lord 2099", Xgl: _h],[bT: 237045, tk: "Cherry Magic!", Xgl: _h],[bT: 240633, tk: "A Journey Through Another World", Xgl: _h],[bT: 245285, tk: "Failure Frame", Xgl: _h],[bT: 271026, tk: "Taisho Era Contract Marriage", Xgl: _h]];def Ca = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def FYY = Ca == "IMDb" ? "tt${id}" : id;def TGe = n;F_A.each {if (it.bT == FYY && it.Xgl == Ca) {TGe = it.tk}};def Fm = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Qc = TGe.replaceAll(Fm.collect { "\\" + it }.join('|'), '');Qc = Qc.replaceAll(/(\s|\.)*$/, '');Qc}{" ("}{y}{")"}{def Ca = id == tmdbid ? "TheMovieDB" : "IMDb";def auC = ["TheMovieDB": "tmdbid","IMDb": "imdbid"];def Mm = auC[Ca];def FYY = Ca == "IMDb" ? "tt${id}" : id;" [${Mm}-${FYY}]/"}{def Voc = ["Alqanime","BlackLuster","NanDesuKa","ToonsHub","Tsundere-Raws"];def Kk = Voc.find { HhN ->  fn.contains(HhN) } ?: "";def gZo = any {(fn =~ /^\[(.*?)\]/)[0][1]} {Kk} {group} {""};gZo ? "[$gZo] " : ""}{def _h = "TheMovieDB::TV";def F_A = [[bT: 68854, tk: "From Me to You", Xgl: _h],[bT: 94904, tk: "My Next Life as a Villainess", Xgl: _h],[bT: 229743, tk: "VTuber Legend", Xgl: _h],[bT: 234538, tk: "Demon Lord 2099", Xgl: _h],[bT: 237045, tk: "Cherry Magic!", Xgl: _h],[bT: 240633, tk: "A Journey Through Another World", Xgl: _h],[bT: 245285, tk: "Failure Frame", Xgl: _h],[bT: 271026, tk: "Taisho Era Contract Marriage", Xgl: _h]];def Ca = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def FYY = Ca == "IMDb" ? "tt${id}" : id;def TGe = n;F_A.each {if (it.bT == FYY && it.Xgl == Ca) {TGe = it.tk}};def Fm = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def Qc = TGe.replaceAll(Fm.collect { "\\" + it }.join('|'), '');Qc = Qc.replaceAll(/(\s|\.)*$/, '');Qc}{" ("}{y}{")"}{" ["}{def zui = [[ZQC: "ABEMA", AjY: ["ABEMA"]],[ZQC: "Bilibili.tv", AjY: ["BILI", "B-Global", "BiliIntl", "B-Site", "BiliCN"]],[ZQC: "Hulu", AjY: ["HULU"]],[ZQC: "iQIYI", AjY: ["IQ.WEB-DL", "IQIYI"]],[ZQC: "MeWatch", AjY: ["MW.WEB-DL"]],[ZQC: "Netflix", AjY: ["NF.WEB-DL", "NF WEB"]],[ZQC: "Prime Video", AjY: ["AMZN"]],[ZQC: "Shahid", AjY: ["SHAHID"]],[ZQC: "TVer", AjY: ["TVER"]],[ZQC: "U-NEXT", AjY: ["UNEXT"]],[ZQC: "YouTube", AjY: ["YT.WEB-DL", "YOUTUBE", "YTB"]]];def IW = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs"];def nm = ["Erai-raws", "SubsPlease"];def RBQ = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def GE = any {def DB = zui.find { OGR ->  OGR.AjY.find { zu ->  fn.contains(zu) } }?.AjY.cVy() ?: "";DB = DB.replace(".WEB-DL", "");DB ? "${DB}.WEB-DL" : ""} {source} {IW.find { _ow ->  group == _ow || RBQ == _ow } ? "WEBRip" : ""} {def YWa = nm.find { jrx ->  group == jrx || RBQ == jrx} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : YWa} {vs} {""};GE ? "$GE " : ""}{def JB = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $JB, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def CxX = " Dub";def uo = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : CxX;uo = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : uo;uo}{def ms = any { audioLanguages.size() } { 0 };def uo = ms > 2 ? " MAud" : ms > 1 ? " DAud" : null;def K_V = ms > 5 ? audioLanguages.take(5) : audioLanguages;uo ? uo + K_V.joining(" ", " (", "").upper() + (ms > 5 ? " ...)" : ")") : ""}{def Vgb = any { textLanguages.size() } { 0 };def uo = Vgb > 2 ? ", MSub" : Vgb > 1 ? ", DSub" : null;def K_V = Vgb > 5 ? textLanguages.take(5) : textLanguages;uo ? uo + K_V.joining(" ", " (", "").upper() + (Vgb > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{def H_ = ["ass", "srt", "ssa", "vtt", "ttml"];def Hh = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def Ye = subt;Hh.values().each { suG -> if (Ye.contains(suG)) {Ye = Ye.replace(suG, "")}};H_.contains(ext) ? Hh.iso3b + Ye : ""}{def H_ = ["jpg", "jpeg", "png", "bmp"];H_.contains(ext) ? "-thumb" : ""}