{def JH = System.getProperty("user.name");def FP = "/run/media/${JH}";def ZA = "$FP/Videos";def YUC = [home,"$FP/Data","$FP/Music","$FP/Videos","$FP/Games","$FP/Books"].collect { it as File }.sort { Ow, Nqa ->  Ow.exists() <=> Nqa.exists() ?: Ow.diskSpace <=> Nqa.diskSpace }.last();def pVt = ZA ? ZA : YUC;"$pVt/"}{"Videos/"}{def UY = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content"];def cqz = "TheMovieDB::TV";def ioT = [[271026, cqz],[220118, cqz],[ 74180, cqz]];def If = [[236530, cqz]];def mLD = any { info.database } { "IMDb" };def qN = mLD == "IMDb" ? "tt${id}" : id;def ASD = any { info.adult } { false };def eRo = ioT.find { it[0] == qN && it[1] == mLD } != null;def NVH = If.find { it[0] == qN && it[1] == mLD } != null;def Aw = info.Keywords.findAll { it in UY } || eRo || ASD;Aw = NVH ? false : Aw;Aw ? "R18+ " : ""}{def MEi = ["CN", "JP", "KR", "KP", "TW", "HK"];def AUG = ["aeni", "donghua", "anime"];def OAB = any {anime} || info.Keywords.findAll { it in AUG } || (MEi.contains(country) && genres =~ /Animation/);OAB ? "Anime Movies/" : "Movies/"}{def cqz = "TheMovieDB::TV";def bc = [[cTn: 68854, iBr: "From Me to You", qO: cqz],[cTn: 229743, iBr: "VTuber Legend", qO: cqz],[cTn: 234538, iBr: "Demon Lord 2099", qO: cqz],[cTn: 237045, iBr: "Cherry Magic!", qO: cqz],[cTn: 240633, iBr: "A Journey Through Another World", qO: cqz],[cTn: 245285, iBr: "Failure Frame", qO: cqz],[cTn: 271026, iBr: "Taisho Era Contract Marriage", qO: cqz]];def mLD = any { info.database } { "IMDb" };def qN = mLD == "IMDb" ? "tt${id}" : id;def hQ = n;bc.each {if (it.cTn == qN && it.qO == mLD) {hQ = it.iBr}};def NV = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def mdZ = hQ.replaceAll(NV.collect { "\\" + it }.join('|'), '');mdZ = mdZ.replaceAll(/(\s|\.)*$/, '');mdZ}{" ("}{y}{")"}{def mLD = any { info.database } { "IMDb" };def LA = ["TheMovieDB": "tmdbid","TheTVDB::Movie": "tvdbid","IMDb": "imdbid"];def yrG = LA[mLD];def qN = mLD == "IMDb" ? "tt${id}" : id;" [${yrG}-${qN}]/"}{def iAe = ["Alqanime","BlackLuster","NanDesuKa","ToonsHub","Tsundere-Raws"];def PX = iAe.find { zY ->  fn.contains(zY) } ?: "";def et = any {(fn =~ /^\[(.*?)\]/)[0][1]} {PX} {group} {""};et ? "[$et] " : ""}{def cqz = "TheMovieDB::TV";def bc = [[cTn: 68854, iBr: "From Me to You", qO: cqz],[cTn: 229743, iBr: "VTuber Legend", qO: cqz],[cTn: 234538, iBr: "Demon Lord 2099", qO: cqz],[cTn: 237045, iBr: "Cherry Magic!", qO: cqz],[cTn: 240633, iBr: "A Journey Through Another World", qO: cqz],[cTn: 245285, iBr: "Failure Frame", qO: cqz],[cTn: 271026, iBr: "Taisho Era Contract Marriage", qO: cqz]];def mLD = any { info.database } { "IMDb" };def qN = mLD == "IMDb" ? "tt${id}" : id;def hQ = n;bc.each {if (it.cTn == qN && it.qO == mLD) {hQ = it.iBr}};def NV = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def mdZ = hQ.replaceAll(NV.collect { "\\" + it }.join('|'), '');mdZ = mdZ.replaceAll(/(\s|\.)*$/, '');mdZ}{" ("}{y}{")"}{" ["}{def OD = [[vrK: "ABEMA", Lb: ["ABEMA"]],[vrK: "Bilibili.tv", Lb: ["B-Global", "BiliIntl", "BILI"]],[vrK: "Hulu", Lb: ["HULU"]],[vrK: "MeWatch", Lb: ["MW.WEB-DL"]],[vrK: "Netflix", Lb: ["NF.WEB-DL", "NF WEB"]],[vrK: "Prime Video", Lb: ["AMZN"]],[vrK: "TVer", Lb: ["TVER"]],[vrK: "Shahid", Lb: ["SHAHID"]],[vrK: "U-NEXT", Lb: ["UNEXT"]],[vrK: "YouTube", Lb: ["YT.WEB-DL", "YOUTUBE", "YTB"]]];def vn = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs"];def rOd = ["Erai-raws", "SubsPlease"];def HUZ = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def pb = any {def eK = OD.find { eQs ->  eQs.Lb.find { aY ->  fn.contains(aY) } }?.Lb.first() ?: "";eK = eK.replace(".WEB-DL", "");eK ? "${eK}.WEB-DL" : ""} {source} {vn.find { AB ->  group == AB || HUZ == AB } ? "WEBRip" : ""} {def fvV = rOd.find { IR ->  group == IR || HUZ == IR} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : fvV} {vs} {""};pb ? "$pb " : ""}{def uyW = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $uyW, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def Ao = " Dub";def Ggz = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : Ao;Ggz = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : Ggz;Ggz}{def fK = any { audioLanguages.size() } { 0 };def Ggz = fK > 2 ? " MAud" : fK > 1 ? " DAud" : null;def xPC = fK > 5 ? audioLanguages.take(5) : audioLanguages;Ggz ? Ggz + xPC.joining(" ", " (", "").upper() + (fK > 5 ? " ...)" : ")") : ""}{def pD = any { textLanguages.size() } { 0 };def Ggz = pD > 2 ? ", MSub" : pD > 1 ? ", DSub" : null;def xPC = pD > 5 ? textLanguages.take(5) : textLanguages;Ggz ? Ggz + xPC.joining(" ", " (", "").upper() + (pD > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{def QRk = ["ass", "srt", "ssa", "vtt", "ttml"];def cM = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def nfT = subt;cM.values().each { iIM -> if (nfT.contains(iIM)) {nfT = nfT.replace(iIM, "")}};QRk.contains(ext) ? cM.iso3b + nfT : ""}{def QRk = ["jpg", "jpeg", "png", "bmp"];QRk.contains(ext) ? "-thumb" : ""}