{def tt = System.getProperty("user.name");def Px = "/run/media/${tt}";def Akr = "$Px/Videos";def Os = [home,"$Px/Data","$Px/Music","$Px/Videos","$Px/Games","$Px/Books"].collect { it as File }.sort { tRv, jL ->  tRv.exists() <=> jL.exists() ?: tRv.diskSpace <=> jL.diskSpace }.last();def HZ = Akr ? Akr : Os;"$HZ/"}{"Videos/"}{def aS = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content"];def uC = "TheMovieDB::TV";def NI = [[271026, uC],[220118, uC],[ 74180, uC]];def nH = [[236530, uC]];def Wj = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def dap = Wj == "IMDb" ? "tt${id}" : id;def xm = any { info.adult } { false };def jSx = NI.find { it[0] == dap && it[1] == Wj } != null;def Euc = nH.find { it[0] == dap && it[1] == Wj } != null;def YWC = info.Keywords.findAll { it in aS } || jSx || xm;YWC = Euc ? false : YWC;YWC ? "R18+ " : ""}{def dBC = ["CN", "JP", "KR", "KP", "TW", "HK"];def tj = ["aeni", "donghua", "anime"];def qP = any {anime} || info.Keywords.findAll { it in tj } || (dBC.contains(country) && genres =~ /Animation/);qP ? "Anime Movies/" : "Movies/"}{def uC = "TheMovieDB::TV";def fGT = [[acp: 68854, yEm: "From Me to You", jup: uC],[acp: 229743, yEm: "VTuber Legend", jup: uC],[acp: 234538, yEm: "Demon Lord 2099", jup: uC],[acp: 237045, yEm: "Cherry Magic!", jup: uC],[acp: 240633, yEm: "A Journey Through Another World", jup: uC],[acp: 245285, yEm: "Failure Frame", jup: uC],[acp: 271026, yEm: "Taisho Era Contract Marriage", jup: uC]];def Wj = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def dap = Wj == "IMDb" ? "tt${id}" : id;def Vxe = n;fGT.each {if (it.acp == dap && it.jup == Wj) {Vxe = it.yEm}};def _sY = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def EQN = Vxe.replaceAll(_sY.collect { "\\" + it }.join('|'), '');EQN = EQN.replaceAll(/(\s|\.)*$/, '');EQN}{" ("}{y}{")"}{def Wj = id == tmdbid ? "TheMovieDB" : "IMDb";def qp = ["TheMovieDB": "tmdbid","IMDb": "imdbid"];def gMp = qp[Wj];def dap = Wj == "IMDb" ? "tt${id}" : id;" [${gMp}-${dap}]/"}{def hX = ["Alqanime","BlackLuster","NanDesuKa","ToonsHub","Tsundere-Raws"];def rXo = hX.find { yqH ->  fn.contains(yqH) } ?: "";def LLO = any {(fn =~ /^\[(.*?)\]/)[0][1]} {rXo} {group} {""};LLO ? "[$LLO] " : ""}{def uC = "TheMovieDB::TV";def fGT = [[acp: 68854, yEm: "From Me to You", jup: uC],[acp: 229743, yEm: "VTuber Legend", jup: uC],[acp: 234538, yEm: "Demon Lord 2099", jup: uC],[acp: 237045, yEm: "Cherry Magic!", jup: uC],[acp: 240633, yEm: "A Journey Through Another World", jup: uC],[acp: 245285, yEm: "Failure Frame", jup: uC],[acp: 271026, yEm: "Taisho Era Contract Marriage", jup: uC]];def Wj = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def dap = Wj == "IMDb" ? "tt${id}" : id;def Vxe = n;fGT.each {if (it.acp == dap && it.jup == Wj) {Vxe = it.yEm}};def _sY = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def EQN = Vxe.replaceAll(_sY.collect { "\\" + it }.join('|'), '');EQN = EQN.replaceAll(/(\s|\.)*$/, '');EQN}{" ("}{y}{")"}{" ["}{def mRW = [[Pm: "ABEMA", frV: ["ABEMA"]],[Pm: "Bilibili.tv", frV: ["B-Global", "BiliIntl", "BILI"]],[Pm: "Hulu", frV: ["HULU"]],[Pm: "MeWatch", frV: ["MW.WEB-DL"]],[Pm: "Netflix", frV: ["NF.WEB-DL", "NF WEB"]],[Pm: "Prime Video", frV: ["AMZN"]],[Pm: "TVer", frV: ["TVER"]],[Pm: "Shahid", frV: ["SHAHID"]],[Pm: "U-NEXT", frV: ["UNEXT"]],[Pm: "YouTube", frV: ["YT.WEB-DL", "YOUTUBE", "YTB"]]];def dR = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs"];def ANe = ["Erai-raws", "SubsPlease"];def ZK = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def lb = any {def _Fk = mRW.find { JcP ->  JcP.frV.find { BEw ->  fn.contains(BEw) } }?.frV.first() ?: "";_Fk = _Fk.replace(".WEB-DL", "");_Fk ? "${_Fk}.WEB-DL" : ""} {source} {dR.find { JP ->  group == JP || ZK == JP } ? "WEBRip" : ""} {def Lo = ANe.find { sVh ->  group == sVh || ZK == sVh} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : Lo} {vs} {""};lb ? "$lb " : ""}{def Bh = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $Bh, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def TNO = " Dub";def GU = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : TNO;GU = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : GU;GU}{def iY = any { audioLanguages.size() } { 0 };def GU = iY > 2 ? " MAud" : iY > 1 ? " DAud" : null;def q_ = iY > 5 ? audioLanguages.take(5) : audioLanguages;GU ? GU + q_.joining(" ", " (", "").upper() + (iY > 5 ? " ...)" : ")") : ""}{def Ux = any { textLanguages.size() } { 0 };def GU = Ux > 2 ? ", MSub" : Ux > 1 ? ", DSub" : null;def q_ = Ux > 5 ? textLanguages.take(5) : textLanguages;GU ? GU + q_.joining(" ", " (", "").upper() + (Ux > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{def RpH = ["ass", "srt", "ssa", "vtt", "ttml"];def CA = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def Sbf = subt;CA.values().each { NP -> if (Sbf.contains(NP)) {Sbf = Sbf.replace(NP, "")}};RpH.contains(ext) ? CA.iso3b + Sbf : ""}{def RpH = ["jpg", "jpeg", "png", "bmp"];RpH.contains(ext) ? "-thumb" : ""}