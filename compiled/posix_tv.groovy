{def run = System.getProperty("user.name");def qM = "/run/media/${run}";def rJ_ = "$qM/Videos";def bbT = [home,"$qM/Data","$qM/Music","$qM/Videos","$qM/Games","$qM/Books"].collect { it as File }.sort { fAT, dn ->  fAT.exists() <=> dn.exists() ?: fAT.diskSpace <=> dn.diskSpace }.last();def pRc = rJ_ ? rJ_ : bbT;"$pRc/"}{"Videos/"}{def zLB = ["boys' love (bl)", "gay theme", "yaoi", "yuri", "lesbian", "hentai","sex", "lgbt", "explicit", "adult animation", "adult content"];def Ul_ = "TheMovieDB::TV";def fND = [[271026, Ul_],[220118, Ul_],[ 74180, Ul_]];def cne = [[236530, Ul_]];def gmf = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Sbe = gmf == "IMDb" ? "tt${id}" : id;def YaI = any { info.adult } { false };def dy = fND.find { it[0] == Sbe && it[1] == gmf } != null;def PZS = cne.find { it[0] == Sbe && it[1] == gmf } != null;def qWq = info.Keywords.findAll { it in zLB } || dy || YaI;qWq = PZS ? false : qWq;qWq ? "R18+ " : ""}{def dil = ["CN", "JP", "KR", "KP", "TW", "HK"];def UIr = ["aeni", "donghua", "anime"];def Pn = any {anime} || info.Keywords.findAll { it in UIr } || (dil.contains(country) && genres =~ /Animation/);Pn ? "Anime/" : "TV Series/"}{def Ul_ = "TheMovieDB::TV";def nY = [[CDX: 68854, Wu: "From Me to You", iz: Ul_],[CDX: 94904, Wu: "My Next Life as fAT Villainess", iz: Ul_],[CDX: 229743, Wu: "VTuber Legend", iz: Ul_],[CDX: 234538, Wu: "Demon Lord 2099", iz: Ul_],[CDX: 237045, Wu: "Cherry Magic!", iz: Ul_],[CDX: 240633, Wu: "A Journey Through Another World", iz: Ul_],[CDX: 245285, Wu: "Failure Frame", iz: Ul_],[CDX: 271026, Wu: "Taisho Era Contract Marriage", iz: Ul_]];def gmf = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Sbe = gmf == "IMDb" ? "tt${id}" : id;def MeB = n;nY.each {if (it.CDX == Sbe && it.iz == gmf) {MeB = it.Wu}};def Ror = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def oH = MeB.replaceAll(Ror.collect { "\\" + it }.join('|'), '');oH = oH.replaceAll(/(\s|\.)*$/, '');oH}{def Ul_ = "TheMovieDB::TV";def bJ = [[ 68854, Ul_],[123542, Ul_],[204098, Ul_],[235973, Ul_],[239779, Ul_],[240125, Ul_],[257162, Ul_],[259140, Ul_],[262295, Ul_],[271026, Ul_],[273190, Ul_],[275695, Ul_]];def Er = bJ.find { it[0] == id && it[1] == info.database } != null;def __ = ["TheMovieDB::TV": "tmdbid","AniDB": "anidbid","TheTVDB": "tvdbid","TVmaze": "tvmazeid"];def WCj = __[info.database];Er ? " ($y) [${WCj}-${id}]" : ""}{"/"}{episode.special ? 'Specials' : 'Season '+s}{def Ror = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def oH = sn.replaceAll(Ror.collect { "\\" + it }.join('|'), '_');def YU = n.replaceAll(Ror.collect { "\\" + it }.join('|'), '_');def hOI = oH.contains(YU) ? "" : oH;hOI == 'Season '+ s ? "" : hOI ? " - " + hOI : ""}{"/"}{def jeE = ["Alqanime","BlackLuster","NanDesuKa","ToonsHub","Tsundere-Raws"];def zU = jeE.find { Gdp ->  fn.contains(Gdp) } ?: "";def lji = any {(fn =~ /^\[(.*?)\]/)[0][1]} {zU} {group} {""};lji ? "[$lji] " : ""}{def Ul_ = "TheMovieDB::TV";def nY = [[CDX: 68854, Wu: "From Me to You", iz: Ul_],[CDX: 94904, Wu: "My Next Life as fAT Villainess", iz: Ul_],[CDX: 229743, Wu: "VTuber Legend", iz: Ul_],[CDX: 234538, Wu: "Demon Lord 2099", iz: Ul_],[CDX: 237045, Wu: "Cherry Magic!", iz: Ul_],[CDX: 240633, Wu: "A Journey Through Another World", iz: Ul_],[CDX: 245285, Wu: "Failure Frame", iz: Ul_],[CDX: 271026, Wu: "Taisho Era Contract Marriage", iz: Ul_]];def gmf = any { info.database } { id == tmdbid ? "TheMovieDB" : "IMDb" };def Sbe = gmf == "IMDb" ? "tt${id}" : id;def MeB = n;nY.each {if (it.CDX == Sbe && it.iz == gmf) {MeB = it.Wu}};def Ror = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def oH = MeB.replaceAll(Ror.collect { "\\" + it }.join('|'), '');oH = oH.replaceAll(/(\s|\.)*$/, '');oH}{" - "}{s00e00}{def Ror = ['\\', '/', ':', '*', '?', '"', '<', '>', '|'];def oH = t.replaceAll(Ror.collect { "\\" + it }.join('|'), '_');def zk = any { e } { special };oH = oH.length() > 100 ? " " : " - $oH ";oH == " - Episode $zk " ? " " : oH}{" ["}{def yW = [[JC_: "ABEMA", Bb: ["ABEMA"]],[JC_: "Bilibili.tv", Bb: ["BILI", "B-Global", "BiliIntl", "B-Site", "BiliCN"]],[JC_: "Hulu", Bb: ["HULU"]],[JC_: "iQIYI", Bb: ["IQ.WEB-DL", "IQIYI"]],[JC_: "MeWatch", Bb: ["MW.WEB-DL"]],[JC_: "Netflix", Bb: ["NF.WEB-DL", "NF WEB"]],[JC_: "Prime Video", Bb: ["AMZN"]],[JC_: "Shahid", Bb: ["SHAHID"]],[JC_: "TVer", Bb: ["TVER"]],[JC_: "U-NEXT", Bb: ["UNEXT"]],[JC_: "YouTube", Bb: ["YT.WEB-DL", "YOUTUBE", "YTB"]]];def ZP = ["ASW", "Judas", "JRx7", "EMBER", "KawaSubs", "GuodongSubs"];def BZl = ["Erai-raws", "SubsPlease"];def ocw = any {(fn =~ /^\[(.*?)\]/)[0][1]} {""};def vhU = any {def fW = yW.find { VpQ ->  VpQ.Bb.find { gD ->  fn.contains(gD) } }?.Bb.first() ?: "";fW = fW.replace(".WEB-DL", "");fW ? "${fW}.WEB-DL" : ""} {source} {ZP.find { oWx ->  group == oWx || ocw == oWx } ? "WEBRip" : ""} {def ur = BZl.find { eEz ->  group == eEz || ocw == eEz} ? "WEB-DL" : "";(source == "Erai-raws" && vcf.upper() == "HEVC") ? "WEBRip" : ur} {vs} {""};vhU ? "$vhU " : ""}{def hZn = bitdepth ? " ${bitdepth}bit" : "";"$resolution $vcf $hZn, $ac"}{" "}{af.format(8: 'DD+ 7.1',7: '6.1',6: 'DD 5.1',5: '5.0',3: '2.1',2: '2.0',1: '1.0')}{def BV = " Dub";def fTG = audioLanguages.any { it.ISO3B == language.ISO3B } ? "" : BV;fTG = audioLanguages.size() == 1 && audioLanguages.any { it.ISO3B == "und" } ? "" : fTG;fTG}{def NPT = any { audioLanguages.size() } { 0 };def fTG = NPT > 2 ? " MAud" : NPT > 1 ? " DAud" : null;def uZJ = NPT > 5 ? audioLanguages.take(5) : audioLanguages;fTG ? fTG + uZJ.joining(" ", " (", "").upper() + (NPT > 5 ? " ...)" : ")") : ""}{def VI = any { textLanguages.size() } { 0 };def fTG = VI > 2 ? ", MSub" : VI > 1 ? ", DSub" : null;def uZJ = VI > 5 ? textLanguages.take(5) : textLanguages;fTG ? fTG + uZJ.joining(" ", " (", "").upper() + (VI > 5 ? " ...)" : ")") : ""}{"]["}{crc32.upper()}{"]"}{def yi = ["ass", "srt", "ssa", "vtt", "ttml"];def AU = ["name": "." + lang.name,"iso3b": "." + lang.ISO3B,"iso3": "." +lang.ISO3,"iso2": "." + lang.ISO2];def CD_ = subt;AU.values().each { dAg -> if (CD_.contains(dAg)) {CD_ = CD_.replace(dAg, "")}};yi.contains(ext) ? AU.iso3b + CD_ : ""}{def yi = ["jpg", "jpeg", "png", "bmp"];yi.contains(ext) ? "-thumb" : ""}